name: Build-and-Test-Provisioned

on:
  workflow_call:
    inputs:
      runner_label:
        required: true
        type: string
      run_build:
        type: boolean
        default: true
      sanitizer:
        required: false
        type: string
      run_unit_tests:
        type: boolean
        default: true
      run_functional_tests:
        type: boolean
        default: false
      test_label_regexp:
        required: false
        type: string
  workflow_dispatch:
    inputs:
      runner_label:
        required: true
        type: string
      run_build:
        type: boolean
        default: true
      sanitizer:
        required: false
        type: string
      run_unit_tests:
        type: boolean
        default: true
      run_functional_tests:
        type: boolean
        default: true
      test_label_regexp:
        required: false
        type: string
    
jobs:
  main:
    name: Build and test
    runs-on: [ self-hosted, Provisioned, "${{ inputs.runner_label }}" ]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build
      uses: ./.github/actions/build
      if: inputs.run_build
      with: 
        sanitizer: ${{ inputs.sanitizer }}
    - name: Run unit tests
      uses: ./.github/actions/test
      if: inputs.run_unit_tests
      with: 
        log_suffix: ${{format('{0}{1}', inputs.runner_label, inputs.sanitizer)}}
        test_label_regexp: ${{ inputs.test_label_regexp }}
        aws_key_id: ${{secrets.AWS_KEY_ID}}
        aws_key_value: ${{secrets.AWS_KEY_VALUE}}
        aws_bucket: ${{vars.AWS_BUCKET}}
        aws_endpoint: ${{vars.AWS_ENDPOINT}}
        testman_token: ${{secrets.TESTMO_TOKEN}}
        testman_url: ${{vars.TESTMO_URL}}
        testman_project_id: ${{vars.TESTMO_PROJECT_ID}}
    - name: Run functional tests
      if: inputs.run_functional_tests && (success() || failure()) && steps.build.conclusion != 'failure'
      uses: ./.github/actions/test_python
      with:
        log_suffix: ${{format('{0}{1}', inputs.runner_label, inputs.sanitizer)}}
        test_label_regexp: ${{ inputs.test_label_regexp }}
        aws_key_id: ${{secrets.AWS_KEY_ID}}
        aws_key_value: ${{secrets.AWS_KEY_VALUE}}
        aws_bucket: ${{vars.AWS_BUCKET}}
        aws_endpoint: ${{vars.AWS_ENDPOINT}}
      
