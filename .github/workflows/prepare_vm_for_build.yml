name: Prepare VM for YDB build

on:
  workflow_call:
    inputs:
      runner_label:
        required: true
        type: string
    secrets:
      rc_auth:
        required: false
  workflow_dispatch:
    inputs:
      runner_label:
        required: true
        type: string  
        
jobs:
  prepare:
    runs-on: ${{ inputs.runner_label }} # run the job on a particular runner
    steps:
    - name: Install YDB Build dependencies
      shell: bash
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc | sudo apt-key add -
        echo "deb http://apt.kitware.com/ubuntu/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null
        echo "deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/llvm.list >/dev/null
        sudo apt-get update
        sudo apt-get -y install python-is-python3 git cmake python3-pip ninja-build antlr3 m4 clang-12 lld-12 libidn11-dev libaio1 libaio-dev parallel
        sudo pip3 install conan==1.59 pytest==7.1.3 pytest-timeout grpcio grpcio-tools PyHamcrest tornado xmltodict pyarrow
    - name: Install AllureCtl
      if: false
      shell: bash
      run: |
        wget https://github.com/allure-framework/allurectl/releases/latest/download/allurectl_linux_386 -O ~/allurectl
        chmod +x ~/allurectl
    - name: install ccache
      shell: bash
      run: |
        export CCACHE_VERSION=4.8.1
        curl -L https://github.com/ccache/ccache/releases/download/v${CCACHE_VERSION}/ccache-${CCACHE_VERSION}-linux-x86_64.tar.xz \
          | tar -xJ -C /usr/local/bin/ --strip-components=1 --no-same-owner ccache-${CCACHE_VERSION}-linux-x86_64/ccache
        ls -la /usr/local/bin/ccache