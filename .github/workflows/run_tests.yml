name: Run tests

on:
  workflow_call:
    inputs:
      runner_label:
        description: 'Label of the runner to be used'
        required: false
        type: string
        default: self-hosted
      test_targets:
        description: 'Пути запуска'
        required: true
        type: string
        default: ydb/
      test_type:
        description: 'Тип тестов'
        required: false
        type: string
        default: unittest,py3test,py2test,pytest
      test_size:
        description: 'Размер тестов'
        required: false
        type: string
        default: small,medium,large
      additional_ya_make_args:
        description: 'Дополнительные аргументы для ya make'
        required: false
        type: string
        default: -DDEBUGINFO_LINES_ONLY
      build_preset:
        description: 'Build preset type'
        required: true
        type: string
        
jobs:
  run_tests:
    name: Test ${{ github.ref_name }}:${{ inputs.build_preset }}
    timeout-minutes: 1200
    runs-on: ${{ inputs.runner_label }}
    steps:
      - name: Set variables based on build_preset
        id: set-vars
        run: |
          if [[ "${{ inputs.build_preset }}" == "relwithdebinfo" ]]; then
            echo "threads_count=52" >> $GITHUB_ENV
            echo "timeout=1200" >> $GITHUB_ENV
          elif [[ "${{ inputs.build_preset }}" == "release-asan" ]]; then
            echo "threads_count=20" >> $GITHUB_ENV
            echo "timeout=1200" >> $GITHUB_ENV
          elif [[ "${{ inputs.build_preset }}" == "release-msan" ]]; then
            echo "threads_count=5" >> $GITHUB_ENV
            echo "timeout=1200" >> $GITHUB_ENV
          elif [[ "${{ inputs.build_preset }}" == "release-tsan" ]]; then
            echo "threads_count=10" >> $GITHUB_ENV
            echo "timeout=1200" >> $GITHUB_ENV
          else
            echo "Unknown build_preset value."
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      
      - name: Setup ssh key for slice 
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SLICE_QA_SSH_PRIVATE_KEY }}

      - name: Setup ydb access
        uses: ./.github/actions/setup_ci_ydb_service_account_key_file_credentials
        with:
          ci_ydb_service_account_key_file_credentials: ${{ secrets.CI_YDB_SERVICE_ACCOUNT_KEY_FILE_CREDENTIALS }}

      - name: Run YDB Tests ${{ github.ref_name }}
        timeout-minutes: ${{ fromJson(env.timeout) }}
        uses: ./.github/actions/build_and_test_ya
        with:
          build_preset: ${{ inputs.build_preset }}
          increment: false
          build_target: ${{ inputs.test_targets }}
          run_build: true
          run_tests: true
          test_retry_count: 3
          test_size: ${{ inputs.test_size }}
          test_type: ${{ inputs.test_type }}
          test_threads: ${{ fromJson(env.threads_count) }}
          put_build_results_to_cache: true
          additional_ya_make_args: ${{ inputs.additional_ya_make_args }}
          secs: ${{ format('{{"TESTMO_TOKEN2":"{0}","AWS_KEY_ID":"{1}","AWS_KEY_VALUE":"{2}","REMOTE_CACHE_USERNAME":"{3}","REMOTE_CACHE_PASSWORD":"{4}"}}',
            secrets.TESTMO_TOKEN2, secrets.AWS_KEY_ID, secrets.AWS_KEY_VALUE, secrets.REMOTE_CACHE_USERNAME, secrets.REMOTE_CACHE_PASSWORD ) }}
          vars: ${{ format('{{"AWS_BUCKET":"{0}","AWS_ENDPOINT":"{1}","REMOTE_CACHE_URL":"{2}","TESTMO_URL":"{3}","TESTMO_PROJECT_ID":"{4}"}}',
            vars.AWS_BUCKET, vars.AWS_ENDPOINT, vars.REMOTE_CACHE_URL_YA, vars.TESTMO_URL, vars.TESTMO_PROJECT_ID ) }}