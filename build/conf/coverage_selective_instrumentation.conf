USE_SCU_VALUE="no"

_DISABLE_CLANG_COVERAGE_CFLAGS_BASE=
_DISABLE_CLANG_COVERAGE_CFLAGS_MCDC=
_DISABLE_CLANG_COVERAGE_CFLAGS=$_DISABLE_CLANG_COVERAGE_CFLAGS_BASE $_DISABLE_CLANG_COVERAGE_CFLAGS_MCDC

macro POPULATE_CPP_COVERAGE_FLAGS() {
    SET_CPP_COVERAGE_FLAGS()
}

# tag:internal
### @usage: _SETUP_CLANG_COVERAGE() # internal
### This macro is called from python plugin, so by some reason triggers won't work inside it and in global scope.
macro _SETUP_CLANG_COVERAGE() {
    SET(_LD_USE_STDLIB)
    ENABLE(NEED_PROFILE_RUNTIME)
    CFLAGS(-fprofile-instr-generate -fcoverage-mapping -DCLANG_COVERAGE)
    SET(_DISABLE_CLANG_COVERAGE_CFLAGS_BASE -fno-profile-instr-generate -fno-coverage-mapping -UCLANG_COVERAGE)
    SET_APPEND(LDFLAGS -fprofile-instr-generate -fcoverage-mapping)
    when ($CLANG_MCDC_COVERAGE == "yes") {
        CFLAGS+=-fcoverage-mcdc
        LDFLAGS+=-fcoverage-mcdc
        _DISABLE_CLANG_COVERAGE_CFLAGS_MCDC=-fno-coverage-mcdc
    }
    PEERDIR(library/cpp/testing/dump_clang_coverage)
}


macro _SETUP_PYTHON_COVERAGE() {
    _FILTER_PY_COVERAGE()
}

# tag:internal
### @usage: _ENABLE_PYTHON_COVERAGE() # internal
### This macro is called from python plugin, so by some reason triggers won't work inside it and in global scope.
macro _ENABLE_PYTHON_COVERAGE() {
    ENABLE(_NEED_PYTHON_COVERAGE)
}
