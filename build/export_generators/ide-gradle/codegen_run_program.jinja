{%- if current_target.custom_runs|length -%}
{%-     for custom_run in current_target.custom_runs %}

val {{ varprefix }}{{ custom_run['_object_index'] }} = tasks.register<Exec>("{{ varprefix }}{{ custom_run['_object_index'] }}") {
    group = "build"
    description = "Code generation by run custom program"

{#- Ignore default CWD to export_root -#}
{%-        if custom_run.cwd and custom_run.cwd != export_root %}
    workingDir({{ PatchRoots(custom_run.cwd, false, custom_run['_object_index']) }})
{%-        else %}
    workingDir({{ PatchRoots(codegenBindir, false, custom_run['_object_index']) }})
{%-        endif %}

    commandLine("bash", "-c", listOf(
{%-        for arg in custom_run.command %}
        {{ PatchArg(arg, custom_run['_object_index'], custom_run.depends, custom_run.outputs) }},
{%-        endfor %}
    ).joinToString(" "))

{%-        if custom_run.depends|length -%}
{%-            for depend in custom_run.depends|unique %}
    inputs.files({{ PatchRoots(depend, true) }})
{%-            endfor %}
{%         endif -%}
{%-        if custom_run.outputs|length -%}
{%-            for out in custom_run.outputs|unique %}
{%-                if proto_template %}
    outputs.files({{ PatchGeneratedProto(out, false, custom_run['_object_index']) }})
{%-                else %}
    outputs.files({{ PatchRoots(out, false, custom_run['_object_index']) }})
{%-                endif %}
{%             endfor -%}
{%-        endif -%}
{#-
    Не использованы атрибуты
    custom_run-env="list"
#}
}
{%-     endfor -%}
{%- endif -%}
