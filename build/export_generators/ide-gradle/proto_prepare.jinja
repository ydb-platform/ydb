{%- if prepareProtosTask %}
val prepareMainProtos = tasks.register<Sync>("prepareMainProtos") {
{%-     if target.proto_files|length -%}
{%-         if target.proto_namespace %}
    from("$arcadia_root/{{ target.proto_namespace }}") {
{%-             for proto in target.proto_files %}
        include("{{ proto|replace(target.proto_namespace + "/", "") }}")
{%-             endfor -%}
{%-         else %}
    from("$arcadia_root") {
{#- list of all current project proto files -#}
{%-             for proto in target.proto_files %}
        include("{{ proto }}")
{%-             endfor -%}
{%-         endif %}
    }
{%      endif -%}
{%-     if target.runs|length or target.custom_runs|length -%}
{%-         set varprefix = MAIN_VARPREFIX %}
    from("$baseBuildDir") {
{%-         for run in target.runs -%}
{%-             for out in run.out %}
        include({{ PatchGeneratedProto(out, true, run['_object_index']) }})
{%-             endfor -%}
{%-             for out_dir in run.out_dir %}
        include({{ PatchGeneratedProto(out_dir, true, run['_object_index']) }} + "/**/*.proto")
{%-             endfor -%}
{%-         endfor -%}
{%-         for custom_run in target.custom_runs -%}
{%-             for out in custom_run.outputs %}
        include({{ PatchGeneratedProto(out, true, custom_run['_object_index']) }})
{%-             endfor -%}
{%-         endfor %}
    }
{%      endif -%}
    into(mainProtosDir)

    val codegenPathRegexp = "build/{{ CODEGENS_DIRNAME }}/{{ MAIN_VARPREFIX }}\\.\\d+/".toRegex()
    filesMatching("**/build/{{ CODEGENS_DIRNAME }}/{{ MAIN_VARPREFIX }}.*/**") {
        path = path.replace(codegenPathRegexp, "")
    }
}
{%- endif -%}

{%- if extractLibrariesProtosTask %}

val prepareMainIncludeProtos = tasks.register<Sync>("prepareMainIncludeProtos") {
    from("$arcadia_root") {
{%-     for library in libraries -%}
{%-         set path_and_jar = rsplit(library.jar, '/', 2) %}
        include("{{ path_and_jar[0] }}/**/*.proto")
{%-     endfor %}
    }
{%- set ns_libraries = libraries|selectattr('proto_namespace') -%}
{%- if ns_libraries|length -%}
{%-     for library in ns_libraries -%}
{%-         set path_and_jar = rsplit(library.jar, '/', 2) -%}
{%-         set path = "#R/" + path_and_jar[0] -%}
{%-         set path = path|replace("#R/" + library.proto_namespace + "/", "")|replace("#R/" + library.proto_namespace, "")|replace("#R/", "") -%}
{%-         if path != "" -%}
{%-             set path = path + "/" -%}
{%-         endif %}
    from("$arcadia_root/{{ library.proto_namespace }}") {
        include("{{ path }}**/*.proto")
    }
{%-     endfor -%}
{%- endif %}
    into(mainIncludeProtosDir)
}
{%- endif %}
