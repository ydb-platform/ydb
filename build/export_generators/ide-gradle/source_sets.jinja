{%- macro IncludeGlobs(some_set, dir) -%}
.include({%- for glob in some_set.globs -%}"{{ glob }}"{%- if not loop.last -%}, {%- endif -%}{%- endfor -%})
{%- endmacro -%}

{%- macro PrintGlobs(module, some_set, dir) -%}
{%-     if module == 'resources' -%}
{%-         if not('**/*' in some_set.globs) -%}
{{ IncludeGlobs(some_set, dir) }}
{%-         else -%}
.include("**/*")
{%-         endif -%}
{%-     else -%}
{%-         if some_set.globs|join('')|replace('*', '') == some_set.globs|join('') -%}
{#- Use single source file from each glob -#}
{{ IncludeGlobs(some_set, dir) }}
{%-         else -%}
.include("**/*")
{%-         endif -%}
{%-     endif -%}
{%- endmacro -%}

{%- macro SomeSet(some_set, module, reldir, current_target) -%}
{%-     set dir = some_set.dir -%}
{%-     if (reldir != "") and (dir[0] != "/") -%}
{#-         Relative path in tests #}
{%-         set dir = reldir + dir -%}
{%-     endif -%}
{%-     if dir|replace(export_root, "") != dir -%}
{#-         Generated (re)sources -#}
{%-         set runs_out = current_target.runs|selectattr('out')|map(attribute='out')|sum|select('in', dir) -%}
{%-         set runs_outdir = current_target.runs|selectattr('out_dir')|map(attribute='out_dir')|sum|select('in', dir) -%}
{%-         set cruns_outputs = current_target.custom_runs|selectattr('outputs')|map(attribute='outputs')|sum|select('in', dir) -%}
{%-         if runs_out|length -%}
{%-             for run in current_target.runs -%}
{%-                 if run.out|select('in', dir)|length %}
        {{ module }}.srcDir({{ PatchRoots(dir, false, 'collect') }}){{ PrintGlobs(module, some_set, dir) }}
{%-                 endif -%}
{%-             endfor -%}
{%-         elif runs_outdir|length -%}
{%-             for run in current_target.runs -%}
{%-                 if run.out_dir|select('in', dir)|length %}
        {{ module }}.srcDir({{ PatchRoots(dir, false, 'collect') }}){{ PrintGlobs(module, some_set, dir) }}
{%-                 endif -%}
{%-             endfor -%}
{%-         elif cruns_outputs|length -%}
{%-             for custom_run in current_target.custom_runs -%}
{%-                 if custom_run.outputs|select('in', dir)|length %}
        {{ module }}.srcDir({{ PatchRoots(dir, false, 'collect') }}){{ PrintGlobs(module, some_set, dir) }}
{%-                 endif -%}
{%-             endfor -%}
{%-         else %}
        {{ module }}.srcDir({{ PatchRoots(dir) }}){{ PrintGlobs(module, some_set, dir) }}
{%-         endif -%}
{%-     else %}
        {{ module }}.srcDir({{ PatchRoots(dir) }}){{ PrintGlobs(module, some_set, dir) }}
{%-     endif -%}
{%- endmacro -%}

{%- macro SomeSets(some_sets, module, reldir, current_target) -%}
{%-     if some_sets|length -%}
{%-         set dirs = some_sets|map(attribute='dir')|unique -%}
{%-         for dir in dirs -%}
{%-             set some_set = some_sets|selectattr('dir', 'eq', dir)|first -%}
{{ SomeSet(some_set, module, reldir, current_target) }}
{%-         endfor -%}
{%-     endif -%}
{%- endmacro -%}

{%- macro TargetSets(current_target, target_subdir, reldir = "") -%}
{%-     if current_target.source_sets|length -%}
{%-         if auto_resource_sets -%}
{%-             set source_sets = current_target.source_sets|rejectattr('dir', 'eq', 'resources')|rejectattr('dir', 'eq', 'src/' + target_subdir + '/resources') -%}
{%-         else -%}
{%-             set source_sets = current_target.source_sets -%}
{%-         endif -%}
{%-     else -%}
{%-         set source_sets = [] -%}
{%-     endif -%}
{{ SomeSets(source_sets, "java", reldir, current_target) }}
{%-     if current_target.resource_sets|length -%}
{%-         set resource_sets = current_target.resource_sets -%}
{%-     else -%}
{%-         set resource_sets = [] -%}
{%-     endif -%}
{%-     if auto_resource_sets and current_target.source_sets|length -%}
{%-         set source2resource_sets = current_target.source_sets|selectattr('dir', 'in', ['resources', 'src/' + target_subdir + '/resources']) -%}
{%-         if source2resource_sets|length -%}
{%-             set resource_sets = resource_sets + source2resource_sets -%}
{%-         endif -%}
{%-     endif -%}
{{ SomeSets(resource_sets, "resources", reldir, current_target) }}
{%- endmacro %}

sourceSets {
{%- if target.source_sets|length or target.resource_sets|length or proto_template -%}
{%-     set varprefix = MAIN_VARPREFIX %}
    main {
{#- glue -#}
{{ TargetSets(target, "main") }}

{%-     if proto_template %}
        java.srcDir(layout.buildDirectory.dir("generated/source/proto/main/java")).include("**/*")
{%-         if target.proto_grpc %}
        java.srcDir(layout.buildDirectory.dir("generated/source/proto/main/grpc")).include("**/*")
{%-         endif -%}
{%-     endif %}
    }
{%  endif -%}

{%- if not proto_template -%}
{%-     if extra_targets|length %}
    test {
{%-     for extra_target in extra_targets -%}
{%-         set reldir = "" -%}
{%-         if extra_target.test_reldir -%}
{%-             set reldir = extra_target.test_reldir + "/" -%}
{%-         endif -%}
{#-         TestN target codegen -#}
{%-         set varprefix = "test" + loop.index0|tojson + "Codegen" -%}
{{ TargetSets(extra_target, "test", reldir) }}
{%-     endfor %}
    }
{%      else %}
    test {
        // Preventing automatic search for tests
        java.setSrcDirs(emptyList<Any>())
        resources.setSrcDirs(emptyList<Any>())
    }
{%      endif -%}
{%- endif -%}
}

tasks.withType<Jar>() {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.withType<Copy>() {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.withType<Sync>() {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

{%- if hasResources %}

tasks.processResources.configure {
    dependsOn("compileJava")
}

tasks.processTestResources.configure {
    dependsOn("compileTestJava")
}
{%- endif %}

tasks.named("sourcesJar").configure {
    dependsOn(tasks.compileJava)
    mustRunAfter(tasks.compileTestJava)
}
