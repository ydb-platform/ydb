# This file contains the most frequently used macros from the whole arcadia
- includes:

    # libc++ uses include_next statement to include headers from libc and / or compiler-provided headers.
    # As MSVC compiler does not support this setting, we emulate it via these macro-defines.
    #
    # These includes are used in contrib/libs/cxxsupp/libcxx and contrib/libs/libc_compat,
    # hence source_filter setting is intentionally omitted.
    - Y_MSVC_INCLUDE_NEXT(eh.h)
    - Y_MSVC_INCLUDE_NEXT(initializer_list)
    - Y_MSVC_INCLUDE_NEXT(limits.h)
    - Y_MSVC_INCLUDE_NEXT(math.h)
    - Y_MSVC_INCLUDE_NEXT(setjmp.h)
    - Y_MSVC_INCLUDE_NEXT(stdbool.h)
    - Y_MSVC_INCLUDE_NEXT(stdint.h)
    - Y_MSVC_INCLUDE_NEXT(yvals.h)

    - Y_UCRT_INCLUDE_NEXT(complex.h)
    - Y_UCRT_INCLUDE_NEXT(ctype.h)
    - Y_UCRT_INCLUDE_NEXT(errno.h)
    - Y_UCRT_INCLUDE_NEXT(fenv.h)
    - Y_UCRT_INCLUDE_NEXT(float.h)
    - Y_UCRT_INCLUDE_NEXT(inttypes.h)
    - Y_UCRT_INCLUDE_NEXT(locale.h)
    - Y_UCRT_INCLUDE_NEXT(math.h)
    - Y_UCRT_INCLUDE_NEXT(stddef.h)
    - Y_UCRT_INCLUDE_NEXT(stdio.h)
    - Y_UCRT_INCLUDE_NEXT(stdlib.h)
    - Y_UCRT_INCLUDE_NEXT(string.h)
    - Y_UCRT_INCLUDE_NEXT(wchar.h)
    - Y_UCRT_INCLUDE_NEXT(wctype.h)

    # BOOST_PP_ITERATE() itself is defined to one of these values
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/preprocessor/include/boost/preprocessor/iteration/detail/iter/forward1.hpp
      - contrib/restricted/boost/preprocessor/include/boost/preprocessor/iteration/detail/iter/forward2.hpp
      - contrib/restricted/boost/preprocessor/include/boost/preprocessor/iteration/detail/iter/forward3.hpp
      - contrib/restricted/boost/preprocessor/include/boost/preprocessor/iteration/detail/iter/forward4.hpp
      - contrib/restricted/boost/preprocessor/include/boost/preprocessor/iteration/detail/iter/forward5.hpp

    # BOOST_PP_INCLUDE_SELF() is defined in boost/preprocessor/iteration/detail/self.hpp
    # It works as follows:
    # The user defines BOOST_PP_INDIRECT_SELF containing current file name.
    # Then it #includes BOOST_PP_INCLUDE_SELF() which indirectly includes  the file pointed by BOOST_PP_INDIRECT_SELF.
    #
    # Hence BOOST_PP_INDIRECT_SELF SHOULD BE already parsed and empty resolving is equivalent to providing the actual resolution for it.
    - BOOST_PP_INCLUDE_SELF(): contrib/restricted/boost/preprocessor/include/boost/preprocessor/iteration/detail/self.hpp
    - BOOST_PP_INDIRECT_SELF

    # BOOST_PP_UPDATE_COUNTER() is defined in boost/preprocessor/slot/counter.hpp
    # It is unclear why the author used macro include at all.
    - BOOST_PP_UPDATE_COUNTER(): contrib/restricted/boost/preprocessor/include/boost/preprocessor/slot/detail/counter.hpp

    # BOOST_PP_LOCAL_ITERATE() is defined in boost/preprocessor/iterator/local.hpp
    # It is unclear why the author used macro include at all.
    - BOOST_PP_LOCAL_ITERATE(): contrib/restricted/boost/preprocessor/include/boost/preprocessor/iteration/detail/local.hpp

    # BOOST_PROTO_LOCAL_ITERATE() is defined in boost/proto/repeat.hpp
    # It looks litke the macro include was chosen for the stylistic purposed and the value is not meant to be redefined
    - BOOST_PROTO_LOCAL_ITERATE(): contrib/restricted/boost/proto/include/boost/proto/repeat.hpp

    # libfreetype officially insists on using macros to include its headers:
    # https://freetype.org/freetype2/docs/tutorial/step1.html#section-1
    #
    # Many contribs follow this recommendation, so these sysincls intentionally lack source_filter setting.
    - FT_ADVANCES_H: contrib/libs/freetype/include/freetype/ftadvanc.h
    - FT_BBOX_H: contrib/libs/freetype/include/freetype/ftbbox.h
    - FT_BDF_H: contrib/libs/freetype/include/freetype/ftbdf.h
    - FT_BITMAP_H: contrib/libs/freetype/include/freetype/ftbitmap.h
    - FT_BZIP2_H: contrib/libs/freetype/include/freetype/ftbzip2.h
    - FT_CACHE_H: contrib/libs/freetype/include/freetype/ftcache.h
    - FT_CID_H: contrib/libs/freetype/include/freetype/ftcid.h
    - FT_COLOR_H: contrib/libs/freetype/include/freetype/ftcolor.h
    - FT_CONFIG_CONFIG_H: contrib/libs/freetype/include/freetype/config/ftconfig.h
    - FT_CONFIG_MODULES_H: contrib/libs/freetype/include/freetype/config/ftmodule.h
    - FT_CONFIG_OPTIONS_H: contrib/libs/freetype/include/freetype/config/ftoption.h
    - FT_CONFIG_STANDARD_LIBRARY_H: contrib/libs/freetype/include/freetype/config/ftstdlib.h
    - FT_ERRORS_H: contrib/libs/freetype/include/freetype/fterrors.h
    - FT_FONT_FORMATS_H: contrib/libs/freetype/include/freetype/ftfntfmt.h
    - FT_FREETYPE_H: contrib/libs/freetype/include/freetype/freetype.h
    - FT_GASP_H: contrib/libs/freetype/include/freetype/ftgasp.h
    - FT_GLYPH_H: contrib/libs/freetype/include/freetype/ftglyph.h
    - FT_GX_VALIDATE_H: contrib/libs/freetype/include/freetype/ftgxval.h
    - FT_GZIP_H: contrib/libs/freetype/include/freetype/ftgzip.h
    - FT_IMAGE_H: contrib/libs/freetype/include/freetype/ftimage.h
    - FT_INCREMENTAL_H: contrib/libs/freetype/include/freetype/ftincrem.h
    - FT_LCD_FILTER_H: contrib/libs/freetype/include/freetype/ftlcdfil.h
    - FT_LIST_H: contrib/libs/freetype/include/freetype/ftlist.h
    - FT_LZW_H: contrib/libs/freetype/include/freetype/ftlzw.h
    - FT_MAC_H: contrib/libs/freetype/include/freetype/ftmac.h
    - FT_MODULE_ERRORS_H: contrib/libs/freetype/include/freetype/ftmoderr.h
    - FT_MODULE_H: contrib/libs/freetype/include/freetype/ftmodapi.h
    - FT_MULTIPLE_MASTERS_H: contrib/libs/freetype/include/freetype/ftmm.h
    - FT_OPENTYPE_VALIDATE_H: contrib/libs/freetype/include/freetype/ftotval.h
    - FT_OTSVG_H: contrib/libs/freetype/include/freetype/otsvg.h
    - FT_OUTLINE_H: contrib/libs/freetype/include/freetype/ftoutln.h
    - FT_PFR_H: contrib/libs/freetype/include/freetype/ftpfr.h
    - FT_RENDER_H: contrib/libs/freetype/include/freetype/ftrender.h
    - FT_SFNT_NAMES_H: contrib/libs/freetype/include/freetype/ftsnames.h
    - FT_SIZES_H: contrib/libs/freetype/include/freetype/ftsizes.h
    - FT_STROKER_H: contrib/libs/freetype/include/freetype/ftstroke.h
    - FT_SYNTHESIS_H: contrib/libs/freetype/include/freetype/ftsynth.h
    - FT_SYSTEM_H: contrib/libs/freetype/include/freetype/ftsystem.h
    - FT_TRIGONOMETRY_H: contrib/libs/freetype/include/freetype/fttrigon.h
    - FT_TRUETYPE_IDS_H: contrib/libs/freetype/include/freetype/ttnameid.h
    - FT_TRUETYPE_TABLES_H: contrib/libs/freetype/include/freetype/tttables.h
    - FT_TRUETYPE_TAGS_H: contrib/libs/freetype/include/freetype/tttags.h
    - FT_TYPE1_TABLES_H: contrib/libs/freetype/include/freetype/t1tables.h
    - FT_TYPES_H: contrib/libs/freetype/include/freetype/fttypes.h
    - FT_WINFONTS_H: contrib/libs/freetype/include/freetype/ftwinfnt.h
    - FT_XFREE86_H: contrib/libs/freetype/include/freetype/ftfntfmt.h

- source_filter: "^contrib/libs/openssl"
  includes:
    - OPENSSL_UNISTD: $U/unistd.h

- source_filter: "^contrib/libs/ctemplate"
  includes:
    - HASH_MAP_H: $U/unordered_map
    - HASH_SET_H: $U/unordered_set

- source_filter: "^contrib/libs/llvm(\\d+)"
  includes:
    - BACKTRACE_HEADER: $U/execinfo.h

- source_filter: "^contrib/libs/pycxx"
  includes:
    - STR_STREAM: $U/sstream

- source_filter: "^contrib/restricted/abseil-cpp-tstring/y_absl/debugging"
  includes:
    - Y_ABSL_STACKTRACE_INL_HEADER:
      - contrib/restricted/abseil-cpp-tstring/y_absl/debugging/internal/stacktrace_win32-inl.inc
      - contrib/restricted/abseil-cpp-tstring/y_absl/debugging/internal/stacktrace_generic-inl.inc
      - contrib/restricted/abseil-cpp-tstring/y_absl/debugging/internal/stacktrace_emscripten-inl.inc
      - contrib/restricted/abseil-cpp-tstring/y_absl/debugging/internal/stacktrace_x86-inl.inc
      - contrib/restricted/abseil-cpp-tstring/y_absl/debugging/internal/stacktrace_powerpc-inl.inc
      - contrib/restricted/abseil-cpp-tstring/y_absl/debugging/internal/stacktrace_aarch64-inl.inc
      - contrib/restricted/abseil-cpp-tstring/y_absl/debugging/internal/stacktrace_riscv-inl.inc
      - contrib/restricted/abseil-cpp-tstring/y_absl/debugging/internal/stacktrace_unimplemented-inl.inc

- source_filter: "^contrib/restricted/abseil-cpp/absl/debugging"
  includes:
    - ABSL_STACKTRACE_INL_HEADER:
      - contrib/restricted/abseil-cpp/absl/debugging/internal/stacktrace_win32-inl.inc
      - contrib/restricted/abseil-cpp/absl/debugging/internal/stacktrace_generic-inl.inc
      - contrib/restricted/abseil-cpp/absl/debugging/internal/stacktrace_emscripten-inl.inc
      - contrib/restricted/abseil-cpp/absl/debugging/internal/stacktrace_x86-inl.inc
      - contrib/restricted/abseil-cpp/absl/debugging/internal/stacktrace_powerpc-inl.inc
      - contrib/restricted/abseil-cpp/absl/debugging/internal/stacktrace_aarch64-inl.inc
      - contrib/restricted/abseil-cpp/absl/debugging/internal/stacktrace_riscv-inl.inc
      - contrib/restricted/abseil-cpp/absl/debugging/internal/stacktrace_unimplemented-inl.inc

- source_filter: "^contrib/restricted/boost"
  includes:
    - BOOST_COMPILER_CONFIG:
      - contrib/restricted/boost/config/include/boost/config/compiler/intel.hpp
      - contrib/restricted/boost/config/include/boost/config/compiler/clang.hpp
      - contrib/restricted/boost/config/include/boost/config/compiler/gcc.hpp
    - BOOST_PLATFORM_CONFIG:
      - contrib/restricted/boost/config/include/boost/config/platform/linux.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/bsd.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/solaris.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/irix.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/hpux.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/cygwin.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/win32.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/haiku.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/beos.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/macos.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/zos.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/aix.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/amigaos.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/qnxnto.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/symbian.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/cray.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/vms.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/cloudabi.hpp
      - contrib/restricted/boost/config/include/boost/config/platform/wasm.hpp
    - BOOST_STDLIB_CONFIG:
      - contrib/restricted/boost/config/include/boost/config/stdlib/stlport.hpp
      - contrib/restricted/boost/config/include/boost/config/stdlib/libcomo.hpp
      - contrib/restricted/boost/config/include/boost/config/stdlib/roguewave.hpp
      - contrib/restricted/boost/config/include/boost/config/stdlib/libcpp.hpp
      - contrib/restricted/boost/config/include/boost/config/stdlib/libstdcpp3.hpp
      - contrib/restricted/boost/config/include/boost/config/stdlib/sgi.hpp
      - contrib/restricted/boost/config/include/boost/config/stdlib/msl.hpp
      - contrib/restricted/boost/config/include/boost/config/stdlib/xlcpp_zos.hpp
      - contrib/restricted/boost/config/include/boost/config/stdlib/vacpp.hpp
      - contrib/restricted/boost/config/include/boost/config/stdlib/modena.hpp
      - contrib/restricted/boost/config/include/boost/config/stdlib/dinkumware.hpp
    - BOOST_FT_cc_file:
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/pp_variate_loop/preprocessed.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/pp_tags/cc_tag.hpp
    - BOOST_ABI_PREFIX: contrib/restricted/boost/config/include/boost/config/abi/msvc_prefix.hpp
    - BOOST_ABI_SUFFIX: contrib/restricted/boost/config/include/boost/config/abi/msvc_suffix.hpp
    - BOOST_TYPEOF_INCREMENT_REGISTRATION_GROUP(): contrib/restricted/boost/typeof/include/boost/typeof/incr_registration_group.hpp
    - BOOST_REGEX_USER_CONFIG: contrib/restricted/boost/regex/include/boost/regex/user.hpp
    - BOOST_USER_CONFIG: contrib/restricted/boost/config/include/boost/config/user.hpp

- source_filter: "^contrib/restricted/boost/atomic"
  includes:
    - BOOST_ATOMIC_DETAIL_FP_BACKEND_HEADER(boost/atomic/detail/fp_ops_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fp_ops_emulated.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fp_ops_generic.hpp
    - BOOST_ATOMIC_DETAIL_BACKEND_HEADER(boost/atomic/detail/caps_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_aarch32.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_aarch64.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_alpha.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_arm.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_ppc.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_sparc.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_x86.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_msvc_arm.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_msvc_x86.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_gcc_atomic.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_gcc_sync.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_linux_arm.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_windows.hpp
    - BOOST_ATOMIC_DETAIL_EXTRA_FP_BACKEND_HEADER(boost/atomic/detail/extra_fp_ops_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_fp_operations.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_fp_operations_fwd.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_fp_ops_emulated.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_fp_ops_generic.hpp
    - BOOST_ATOMIC_DETAIL_EXTRA_BACKEND_HEADER(boost/atomic/detail/extra_ops_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_ops_emulated.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_ops_gcc_aarch32.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_ops_gcc_aarch64.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_ops_gcc_arm.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_ops_gcc_ppc.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_ops_gcc_x86.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_ops_generic.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_ops_msvc_arm.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/extra_ops_msvc_x86.hpp
    - BOOST_ATOMIC_DETAIL_BACKEND_HEADER(boost/atomic/detail/ops_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/ops_gcc_aarch32_common.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/ops_gcc_aarch64_common.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/ops_gcc_arm_common.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/ops_gcc_ppc_common.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/ops_msvc_common.hpp
    - BOOST_ATOMIC_DETAIL_CORE_ARCH_BACKEND_HEADER(boost/atomic/detail/caps_arch_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_x86.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_aarch64.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_aarch32.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_ppc.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_sparc.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_gcc_alpha.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_msvc_x86.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_arch_msvc_arm.hpp
    - BOOST_ATOMIC_DETAIL_CORE_ARCH_BACKEND_HEADER(boost/atomic/detail/core_arch_ops_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/core_arch_ops_gcc_x86.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/core_arch_ops_gcc_aarch64.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/core_arch_ops_gcc_aarch32.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/core_arch_ops_gcc_ppc.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/core_arch_ops_gcc_sparc.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/core_arch_ops_gcc_alpha.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/core_arch_ops_msvc_x86.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/core_arch_ops_msvc_arm.hpp
    - BOOST_ATOMIC_DETAIL_CORE_ARCH_BACKEND_HEADER(boost/atomic/detail/fence_arch_ops_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fence_arch_ops_gcc_x86.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fence_arch_ops_gcc_aarch64.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fence_arch_ops_gcc_aarch32.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fence_arch_ops_gcc_ppc.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fence_arch_ops_gcc_sparc.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fence_arch_ops_gcc_alpha.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fence_arch_ops_msvc_x86.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fence_arch_ops_msvc_arm.hpp
    - BOOST_ATOMIC_DETAIL_CORE_BACKEND_HEADER(boost/atomic/detail/caps_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_gcc_atomic.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_gcc_sync.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_linux_arm.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/caps_windows.hpp
    - BOOST_ATOMIC_DETAIL_CORE_BACKEND_HEADER(boost/atomic/detail/core_ops_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/core_ops_gcc_atomic.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/core_ops_gcc_sync.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/core_ops_linux_arm.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/core_ops_windows.hpp
    - BOOST_ATOMIC_DETAIL_CORE_BACKEND_HEADER(boost/atomic/detail/fence_ops_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fence_ops_gcc_atomic.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fence_ops_gcc_sync.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fence_ops_linux_arm.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/fence_ops_windows.hpp
    - BOOST_ATOMIC_DETAIL_WAIT_BACKEND_HEADER(boost/atomic/detail/wait_caps_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/wait_caps_darwin_ulock.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/wait_caps_dragonfly_umtx.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/wait_caps_freebsd_umtx.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/wait_caps_futex.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/wait_caps_windows.hpp
    - BOOST_ATOMIC_DETAIL_WAIT_BACKEND_HEADER(boost/atomic/detail/wait_ops_):
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/wait_ops_darwin_ulock.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/wait_ops_dragonfly_umtx.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/wait_ops_freebsd_umtx.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/wait_ops_futex.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/wait_ops_generic.hpp
      - contrib/restricted/boost/atomic/include/boost/atomic/detail/wait_ops_windows.hpp
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/atomic/src/lock_pool_init1.ipp
      - contrib/restricted/boost/atomic/src/lock_pool_init256.ipp

- source_filter: "^contrib/restricted/boost/function/"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/function/include/boost/function/detail/function_iterate.hpp

# FIXME thegeorg@:
#   boost/function_types/detail/pp_arity_loop.hpp does some extremely magical preprocessor magic
#   which I have failed to compile and evalute.
#
#   Corresponding includes might not be properly resolved by ymake
- source_filter: "^contrib/restricted/boost/function_types"
  includes:
    - BOOST_FT_AL_INCLUDE_FILE:
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/classifier_impl/master.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/components_impl/master.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/synthesize_impl/master.hpp
    - BOOST_FT_AL_PREPROCESSED:
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/classifier_impl/arity10_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/classifier_impl/arity10_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/classifier_impl/arity20_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/classifier_impl/arity20_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/classifier_impl/arity30_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/classifier_impl/arity30_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/classifier_impl/arity40_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/classifier_impl/arity40_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/classifier_impl/arity50_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/classifier_impl/arity50_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/components_impl/arity10_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/components_impl/arity10_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/components_impl/arity20_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/components_impl/arity20_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/components_impl/arity30_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/components_impl/arity30_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/components_impl/arity40_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/components_impl/arity40_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/components_impl/arity50_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/components_impl/arity50_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/synthesize_impl/arity10_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/synthesize_impl/arity20_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/synthesize_impl/arity20_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/synthesize_impl/arity30_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/synthesize_impl/arity30_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/synthesize_impl/arity40_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/synthesize_impl/arity40_1.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/synthesize_impl/arity50_0.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/synthesize_impl/arity50_1.hpp
    - BOOST_FT_loop:
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/pp_cc_loop/master.hpp
      - contrib/restricted/boost/function_types/include/boost/function_types/detail/pp_cc_loop/preprocessed.hpp
    - BOOST_FT_variate_file: contrib/restricted/boost/function_types/include/boost/function_types/detail/pp_arity_loop.hpp
    - BOOST_PP_ASSIGN_SLOT(1): contrib/restricted/boost/preprocessor/include/boost/preprocessor/slot/detail/slot1.hpp
    - BOOST_PP_ITERATE(): contrib/restricted/boost/function_types/include/boost/function_types/detail/pp_cc_loop/master.hpp

- source_filter: "^contrib/restricted/boost/functional"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/functional/include/boost/functional/forward_adapter.hpp
      - contrib/restricted/boost/functional/include/boost/functional/lightweight_forward_adapter.hpp
      - contrib/restricted/boost/functional/include/boost/functional/overloaded_function.hpp
      - contrib/restricted/boost/functional/include/boost/functional/overloaded_function/detail/base.hpp

- source_filter: "^contrib/restricted/boost/fusion"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/fusion/include/boost/fusion/algorithm/transformation/zip.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/deque/detail/cpp03/as_deque.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/deque/detail/cpp03/deque_forward_ctor.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/deque/detail/cpp03/deque_keyed_values_call.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/generation/detail/pp_deque_tie.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/generation/detail/pp_list_tie.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/generation/detail/pp_make_deque.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/generation/detail/pp_make_list.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/generation/detail/pp_make_map.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/generation/detail/pp_make_set.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/generation/detail/pp_make_vector.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/generation/detail/pp_map_tie.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/generation/detail/pp_vector_tie.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/list/detail/cpp03/list_forward_ctor.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/list/detail/cpp03/list_to_cons_call.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/map/detail/cpp03/as_map.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/map/detail/cpp03/map_forward_ctor.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/set/detail/cpp03/as_set.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/set/detail/cpp03/set_forward_ctor.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/vector/detail/cpp03/as_vector.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/vector/detail/cpp03/vector10_fwd.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/vector/detail/cpp03/vector20_fwd.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/vector/detail/cpp03/vector30_fwd.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/vector/detail/cpp03/vector40_fwd.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/vector/detail/cpp03/vector50_fwd.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/vector/detail/cpp03/vector_forward_ctor.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/vector/detail/cpp03/vector_n.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/container/vector/detail/cpp03/vector_n_chooser.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/functional/adapter/unfused_typed.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/functional/invocation/invoke.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/tuple/detail/make_tuple.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/tuple/detail/tuple_expand.hpp
      - contrib/restricted/boost/fusion/include/boost/fusion/tuple/detail/tuple_tie.hpp

- source_filter: "^contrib/restricted/boost/math"
  includes:
    - BOOST_HEADER():
      - contrib/restricted/boost/math/include/boost/math/tools/detail/polynomial_horner1_20.hpp
      - contrib/restricted/boost/math/include/boost/math/tools/detail/polynomial_horner2_20.hpp
      - contrib/restricted/boost/math/include/boost/math/tools/detail/polynomial_horner3_20.hpp

- source_filter: "^contrib/restricted/boost/mpl"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/mpl/include/boost/mpl/apply.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/apply_fwd.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/apply_wrap.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/arg.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/advance_backward.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/advance_forward.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/fold_impl_body.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/full_lambda.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/lambda_no_ctps.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/numeric_op.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/reverse_fold_impl_body.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/sequence_wrapper.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/template_arity.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/bind.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/bind_fwd.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/inherit.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/aux_/numbered.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/aux_/numbered_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/map/aux_/numbered.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/placeholders.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/quote.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/aux_/numbered.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/aux_/numbered_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/unpack_args.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/aux_/numbered.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/aux_/numbered_c.hpp
    - BOOST_PP_STRINGIZE(boost/mpl/aux_/preprocessed/AUX778076_PREPROCESSED_HEADER):
      # gcc / clang version goes here
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/advance_backward.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/advance_forward.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/and.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/apply_fwd.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/apply.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/apply_wrap.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/arg.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/basic_bind.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/bind_fwd.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/bind.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/bitand.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/bitor.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/bitxor.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/deque.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/divides.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/equal_to.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/fold_impl.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/full_lambda.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/greater_equal.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/greater.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/inherit.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/iter_fold_if_impl.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/iter_fold_impl.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/lambda_no_ctps.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/less_equal.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/less.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/list_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/list.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/map.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/minus.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/modulus.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/not_equal_to.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/or.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/placeholders.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/plus.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/quote.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/reverse_fold_impl.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/reverse_iter_fold_impl.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/set_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/set.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/shift_left.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/shift_right.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/template_arity.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/times.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/unpack_args.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/vector_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/gcc/vector.hpp
      # plain part goes here
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/advance_backward.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/advance_forward.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/and.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/apply_fwd.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/apply.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/apply_wrap.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/arg.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/basic_bind.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/bind_fwd.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/bind.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/bitand.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/bitor.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/bitxor.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/deque.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/divides.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/equal_to.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/fold_impl.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/full_lambda.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/greater_equal.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/greater.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/inherit.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/iter_fold_if_impl.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/iter_fold_impl.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/lambda_no_ctps.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/less_equal.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/less.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/list_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/list.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/map.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/minus.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/modulus.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/not_equal_to.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/or.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/placeholders.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/plus.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/quote.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/reverse_fold_impl.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/reverse_iter_fold_impl.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/set_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/set.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/shift_left.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/shift_right.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/template_arity.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/times.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/unpack_args.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/aux_/preprocessed/plain/vector_c.hpp
    - BOOST_PP_STRINGIZE(boost/mpl/list/AUX778076_LIST_HEADER):
      - contrib/restricted/boost/mpl/include/boost/mpl/list/list0.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/list10.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/list20.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/list30.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/list40.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/list50.hpp
    # NB: in other part of boost preprocessor this will be included as boost/mpl/../aux_/preprocessed/AUX778076_HEADER
    - BOOST_PP_STRINGIZE(boost/mpl/list/AUX778076_HEADER):
      - contrib/restricted/boost/mpl/include/boost/mpl/list/aux_/preprocessed/plain/list10.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/aux_/preprocessed/plain/list10_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/aux_/preprocessed/plain/list20.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/aux_/preprocessed/plain/list20_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/aux_/preprocessed/plain/list30.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/aux_/preprocessed/plain/list30_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/aux_/preprocessed/plain/list40.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/aux_/preprocessed/plain/list40_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/aux_/preprocessed/plain/list50.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/list/aux_/preprocessed/plain/list50_c.hpp
    - BOOST_PP_STRINGIZE(boost/mpl/map/AUX778076_MAP_HEADER):
      - contrib/restricted/boost/mpl/include/boost/mpl/map/map0.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/map/map10.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/map/map20.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/map/map30.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/map/map40.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/map/map50.hpp
    - BOOST_PP_STRINGIZE(boost/mpl/map/aux_/preprocessed/AUX778076_HEADER):
      - contrib/restricted/boost/mpl/include/boost/mpl/map/aux_/preprocessed/typeof_based/map10.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/map/aux_/preprocessed/typeof_based/map20.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/map/aux_/preprocessed/typeof_based/map30.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/map/aux_/preprocessed/typeof_based/map40.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/map/aux_/preprocessed/typeof_based/map50.hpp
    - BOOST_PP_STRINGIZE(boost/mpl/set/AUX778076_SET_HEADER):
      - contrib/restricted/boost/mpl/include/boost/mpl/set/set0.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/set10.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/set20.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/set30.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/set40.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/set50.hpp
    - BOOST_PP_STRINGIZE(boost/mpl/set/aux_/preprocessed/AUX778076_HEADER):
      - contrib/restricted/boost/mpl/include/boost/mpl/set/aux_/preprocessed/plain/set10.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/aux_/preprocessed/plain/set10_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/aux_/preprocessed/plain/set20.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/aux_/preprocessed/plain/set20_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/aux_/preprocessed/plain/set30.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/aux_/preprocessed/plain/set30_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/aux_/preprocessed/plain/set40.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/aux_/preprocessed/plain/set40_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/aux_/preprocessed/plain/set50.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/set/aux_/preprocessed/plain/set50_c.hpp
    - BOOST_PP_STRINGIZE(boost/mpl/vector/AUX778076_DEQUE_HEADER):
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector0.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector10.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector20.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector30.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector40.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector50.hpp
    - BOOST_PP_STRINGIZE(boost/mpl/vector/AUX778076_VECTOR_HEADER):
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector0.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector10.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector20.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector30.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector40.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector50.hpp
    - BOOST_PP_STRINGIZE(boost/mpl/vector/AUX778076_VECTOR_C_HEADER):
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector0_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector10_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector20_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector30_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector40_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/vector50_c.hpp
    - BOOST_PP_STRINGIZE(boost/mpl/vector/aux_/preprocessed/AUX778076_HEADER):
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/aux_/preprocessed/typeof_based/vector10.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/aux_/preprocessed/typeof_based/vector10_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/aux_/preprocessed/typeof_based/vector20.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/aux_/preprocessed/typeof_based/vector20_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/aux_/preprocessed/typeof_based/vector30.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/aux_/preprocessed/typeof_based/vector30_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/aux_/preprocessed/typeof_based/vector40.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/aux_/preprocessed/typeof_based/vector40_c.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/aux_/preprocessed/typeof_based/vector50.hpp
      - contrib/restricted/boost/mpl/include/boost/mpl/vector/aux_/preprocessed/typeof_based/vector50_c.hpp

- source_filter: "^contrib/restricted/boost/numeric_conversion"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/numeric_conversion/include/boost/numeric/conversion/detail/numeric_cast_traits.hpp

- source_filter: "^contrib/restricted/boost/parameter"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/parameter/include/boost/parameter/aux_/preprocessor/overloads.hpp

- source_filter: "^contrib/restricted/boost/phoenix"
  includes:
    - BOOST_PHOENIX_UNORDERED_MAP_HEADER: $U/unordered_map
    - BOOST_PHOENIX_UNORDERED_SET_HEADER: $U/unordered_set
    # boost/phoenix preprocessor magic works as follows
    # 1. Each file defines BOOST_PHOENIX_ITERATION_PARAMS as a tuple whose last element contains current file name (checked on version 1.82).
    # 2. It includes then BOOST_PHOENIX_ITERATE() which is simplify defined to <boost/phoenix/support/detail/iterate.hpp>.
    # 3. The latter sets BOOST_PP_ITERATION_PARAMS from BOOST_PHOENIX_ITERATION_PARAMS and calls BOOST_PP_ITERATE() macro.
    #
    # Hence #include BOOST_PHOENIX_ITERATION_FILE will always result in including the file already seen ymake.
    # This is equivalent to resolving this macro include into nothing.
    - BOOST_PHOENIX_ITERATION_FILE()
    - BOOST_PHOENIX_ITERATE(): contrib/restricted/boost/phoenix/include/boost/phoenix/support/detail/iterate.hpp
    - BOOST_PP_ITERATE(): contrib/restricted/boost/phoenix/include/boost/phoenix/support/detail/iterate.hpp

- source_filter: "^contrib/restricted/boost/preprocessor"
  includes:
    # BOOST_PP_ASSIGN_SLOT(i) macros are defined in boost/preprocessor/slot/slot.hpp
    - BOOST_PP_ASSIGN_SLOT(1): contrib/restricted/boost/preprocessor/include/boost/preprocessor/slot/detail/slot1.hpp
    - BOOST_PP_ASSIGN_SLOT(2): contrib/restricted/boost/preprocessor/include/boost/preprocessor/slot/detail/slot2.hpp
    - BOOST_PP_ASSIGN_SLOT(3): contrib/restricted/boost/preprocessor/include/boost/preprocessor/slot/detail/slot3.hpp
    - BOOST_PP_ASSIGN_SLOT(4): contrib/restricted/boost/preprocessor/include/boost/preprocessor/slot/detail/slot4.hpp
    - BOOST_PP_ASSIGN_SLOT(5): contrib/restricted/boost/preprocessor/include/boost/preprocessor/slot/detail/slot5.hpp

    # BOOST_PP_FILENAME macros extract values from BOOST_PP_ITERATION_PARAMS, which we have already resolved in BOOST_PP_ITERATE()
    - BOOST_PP_FILENAME_1
    - BOOST_PP_FILENAME_2
    - BOOST_PP_FILENAME_3
    - BOOST_PP_FILENAME_4
    - BOOST_PP_FILENAME_5

- source_filter: "^contrib/restricted/boost/proto"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/proto/include/boost/proto/context/detail/callable_eval.hpp
      - contrib/restricted/boost/proto/include/boost/proto/context/detail/default_eval.hpp
      - contrib/restricted/boost/proto/include/boost/proto/context/detail/null_eval.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/and_n.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/args.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/basic_expr.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/class_member_traits.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/deduce_domain_n.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/deep_copy.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/expr.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/funop.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/generate_by_value.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/lambda_matches.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/make_expr.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/make_expr_.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/make_expr_funop.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/matches_.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/memfun_funop.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/or_n.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/poly_function_funop.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/poly_function_traits.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/template_arity_helper.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/traits.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/unpack_expr_.hpp
      - contrib/restricted/boost/proto/include/boost/proto/detail/vararg_matches_impl.hpp
      - contrib/restricted/boost/proto/include/boost/proto/transform/detail/call.hpp
      - contrib/restricted/boost/proto/include/boost/proto/transform/detail/construct_funop.hpp
      - contrib/restricted/boost/proto/include/boost/proto/transform/detail/construct_pod_funop.hpp
      - contrib/restricted/boost/proto/include/boost/proto/transform/detail/default_function_impl.hpp
      - contrib/restricted/boost/proto/include/boost/proto/transform/detail/expand_pack.hpp
      - contrib/restricted/boost/proto/include/boost/proto/transform/detail/fold_impl.hpp
      - contrib/restricted/boost/proto/include/boost/proto/transform/detail/lazy.hpp
      - contrib/restricted/boost/proto/include/boost/proto/transform/detail/make.hpp
      - contrib/restricted/boost/proto/include/boost/proto/transform/detail/make_gcc_workaround.hpp
      - contrib/restricted/boost/proto/include/boost/proto/transform/detail/pack_impl.hpp
      - contrib/restricted/boost/proto/include/boost/proto/transform/detail/pass_through_impl.hpp
      - contrib/restricted/boost/proto/include/boost/proto/transform/detail/when.hpp

- source_filter: "^contrib/restricted/boost/python"
  includes:
    # Almost every case of BOOST_PP_ITERATE() invocation in boost/python will include the same header it is being invoked from.
    # The only exception from this rule is <boost/python/tuple.hpp> which will include <boost/python/detail/make_tuple.hpp>.
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/python/include/boost/python/call.hpp
      - contrib/restricted/boost/python/include/boost/python/call_method.hpp
      - contrib/restricted/boost/python/include/boost/python/detail/caller.hpp
      - contrib/restricted/boost/python/include/boost/python/detail/defaults_def.hpp
      - contrib/restricted/boost/python/include/boost/python/detail/invoke.hpp
      - contrib/restricted/boost/python/include/boost/python/detail/result.hpp
      - contrib/restricted/boost/python/include/boost/python/detail/target.hpp
      - contrib/restricted/boost/python/include/boost/python/detail/signature.hpp
      - contrib/restricted/boost/python/include/boost/python/detail/type_list_impl.hpp
      - contrib/restricted/boost/python/include/boost/python/object/make_holder.hpp
      - contrib/restricted/boost/python/include/boost/python/object_core.hpp
      - contrib/restricted/boost/python/include/boost/python/object/pointer_holder.hpp
      - contrib/restricted/boost/python/include/boost/python/override.hpp
      - contrib/restricted/boost/python/include/boost/python/signature.hpp
      - contrib/restricted/boost/python/include/boost/python/object/value_holder.hpp
      - contrib/restricted/boost/python/include/boost/python/detail/make_tuple.hpp

- source_filter: "^contrib/restricted/boost/signals2"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/signals2/include/boost/signals2/detail/preprocessed_arg_type_template.hpp
      - contrib/restricted/boost/signals2/include/boost/signals2/detail/signal_template.hpp
      - contrib/restricted/boost/signals2/include/boost/signals2/detail/slot_template.hpp

- source_filter: "^contrib/restricted/boost/spirit"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/spirit/include/boost/spirit/home/karma/generate_attr.hpp
      - contrib/restricted/boost/spirit/include/boost/spirit/home/karma/nonterminal/detail/fcall.hpp
      - contrib/restricted/boost/spirit/include/boost/spirit/home/karma/stream/format_manip_attr.hpp
      - contrib/restricted/boost/spirit/include/boost/spirit/home/lex/tokenize_and_parse_attr.hpp
      - contrib/restricted/boost/spirit/include/boost/spirit/home/qi/nonterminal/detail/fcall.hpp
      - contrib/restricted/boost/spirit/include/boost/spirit/home/qi/parse_attr.hpp
      - contrib/restricted/boost/spirit/include/boost/spirit/home/qi/stream/match_manip_attr.hpp
      - contrib/restricted/boost/spirit/include/boost/spirit/home/support/detail/as_variant.hpp

- source_filter: "^contrib/restricted/boost/type_erasure"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/callable.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/check_match.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/call.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/constructible.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/detail/adapt_to_vtable.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/detail/check_call.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/detail/get_placeholders.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/detail/instantiate.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/detail/extract_concept.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/detail/normalize_deduced.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/detail/vtable.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/detail/construct.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/tuple.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/detail/null.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/require_match.hpp
      - contrib/restricted/boost/type_erasure/include/boost/type_erasure/detail/rebind_placeholders.hpp

- source_filter: "^contrib/restricted/boost/type_traits"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/type_traits/include/boost/type_traits/detail/is_function_ptr_helper.hpp
      - contrib/restricted/boost/type_traits/include/boost/type_traits/detail/is_function_ptr_tester.hpp
      - contrib/restricted/boost/type_traits/include/boost/type_traits/detail/is_mem_fun_pointer_impl.hpp
      - contrib/restricted/boost/type_traits/include/boost/type_traits/detail/is_mem_fun_pointer_tester.hpp

- source_filter: "^contrib/restricted/boost/typeof"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/typeof/include/boost/typeof/register_functions_iterate.hpp

- source_filter: "^contrib/restricted/boost/utility"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/utility/include/boost/utility/in_place_factory.hpp
      - contrib/restricted/boost/utility/include/boost/utility/detail/result_of_iterate.hpp
      - contrib/restricted/boost/utility/include/boost/utility/typed_in_place_factory.hpp

- source_filter: "^contrib/restricted/boost/variant"
  includes:
    - BOOST_PP_ITERATE():
      - contrib/restricted/boost/variant/include/boost/variant/detail/substitute.hpp

- source_filter: "^contrib/libs/gperftools"
  includes:
    - STACKTRACE_INL_HEADER:
      - contrib/libs/gperftools/srcstacktrace_win32-inl.inc
      - contrib/libs/gperftools/srcstacktrace_generic-inl.inc
      - contrib/libs/gperftools/srcstacktrace_emscripten-inl.inc
      - contrib/libs/gperftools/srcstacktrace_x86-inl.inc
      - contrib/libs/gperftools/srcstacktrace_powerpc-inl.inc
      - contrib/libs/gperftools/srcstacktrace_aarch64-inl.inc
      - contrib/libs/gperftools/srcstacktrace_riscv-inl.inc
      - contrib/libs/gperftools/srcstacktrace_unimplemented-inl.inc

- source_filter: "^contrib/libs/lzo2"
  includes:
    - LZO_CODE_MATCH_INCLUDE_FILE:
      - contrib/libs/lzo2/lzo1_cm.ch
      - contrib/libs/lzo2/lzo1a_cm.ch
      - contrib/libs/lzo2/lzo1b_cm.ch
    - LZO_CODE_RUN_INCLUDE_FILE: contrib/libs/lzo2/lzo1b_cr.ch
    - LZO_SEARCH_MATCH_INCLUDE_FILE: contrib/libs/lzo2/lzo1b_sm.ch
    - LZO_TEST_MATCH_INCLUDE_FILE: contrib/libs/lzo2/lzo1b_tm.ch

- source_filter: "^contrib/libs/msgpack"
  includes:
    - _msgpack_atomic_counter_header:
      - $U/windows.h
      - contrib/libs/msgpack/include/msgpack/gcc_atomic.h
      - contrib/libs/msgpack/include/msgpack/gcc_atomic.hpp

- source_filter: "^contrib/tools/fluent-bit-full/lib/msgpack-c"
  includes:
    - _msgpack_atomic_counter_header:
      - $U/windows.h
      - $U/ntddk.h
      - contrib/tools/fluent-bit-full/lib/msgpack-c/include/msgpack/gcc_atomic.h

- source_filter: "^mail/xiva/msgpack"
  includes:
    - _msgpack_atomic_counter_header:
      - $U/windows.h
      - mail/xiva/msgpack/include/msgpack/gcc_atomic.h

- source_filter: "^skynet/packages/libraries/liner/msgpack"
  includes:
    - _msgpack_atomic_counter_header:
      - $U/windows.h
      - skynet/packages/libraries/liner/msgpack/gcc_atomic.h

- source_filter: "^contrib/libs/opencv/modules/calib3d"
  includes:
    - CV_CPU_SIMD_FILENAME: contrib/libs/opencv/modules/calib3d/src/undistort.simd.hpp

- source_filter: "^contrib/libs/opencv/modules/core"
  includes:
    - CV_CPU_SIMD_FILENAME:
      - contrib/libs/opencv/modules/core/src/arithm.simd.hpp
      - contrib/libs/opencv/modules/core/src/convert.simd.hpp
      - contrib/libs/opencv/modules/core/src/convert_scale.simd.hpp
      - contrib/libs/opencv/modules/core/src/count_non_zero.simd.hpp
      - contrib/libs/opencv/modules/core/src/mathfuncs_core.simd.hpp
      - contrib/libs/opencv/modules/core/src/matmul.simd.hpp
      - contrib/libs/opencv/modules/core/src/mean.simd.hpp
      - contrib/libs/opencv/modules/core/src/merge.simd.hpp
      - contrib/libs/opencv/modules/core/src/split.simd.hpp
      - contrib/libs/opencv/modules/core/src/stat.simd.hpp
      - contrib/libs/opencv/modules/core/src/sum.simd.hpp
      - contrib/libs/opencv/modules/core/test/test_intrin128.simd.hpp
      - contrib/libs/opencv/modules/core/test/test_intrin256.simd.hpp
      - contrib/libs/opencv/modules/core/test/test_intrin512.simd.hpp

- source_filter: "^contrib/libs/opencv/modules/imgproc"
  includes:
    - CV_CPU_SIMD_FILENAME:
      - contrib/libs/opencv/modules/imgproc/src/accum.simd.hpp
      - contrib/libs/opencv/modules/imgproc/src/bilateral_filter.simd.hpp
      - contrib/libs/opencv/modules/imgproc/src/box_filter.simd.hpp
      - contrib/libs/opencv/modules/imgproc/src/color_hsv.simd.hpp
      - contrib/libs/opencv/modules/imgproc/src/color_rgb.simd.hpp
      - contrib/libs/opencv/modules/imgproc/src/color_yuv.simd.hpp
      - contrib/libs/opencv/modules/imgproc/src/filter.simd.hpp
      - contrib/libs/opencv/modules/imgproc/src/median_blur.simd.hpp
      - contrib/libs/opencv/modules/imgproc/src/morph.simd.hpp
      - contrib/libs/opencv/modules/imgproc/src/smooth.simd.hpp
      - contrib/libs/opencv/modules/imgproc/src/sumpixels.simd.hpp

- source_filter: "^contrib/libs/opencv/modules/features2d"
  includes:
    - CV_CPU_SIMD_FILENAME: contrib/libs/opencv/modules/features2d/src/sift.simd.hpp

- source_filter: "^contrib/libs/openmpi"
  includes:
    - MCA_event_IMPLEMENTATION_HEADER: contrib/libs/openmpi/opal/mca/event/external/external.h
    - MCA_hwloc_external_header: contrib/libs/hwloc/include/hwloc.h
    - MCA_hwloc_external_shmem_header: contrib/libs/hwloc/include/hwloc/shmem.h
    - MCA_hwloc_IMPLEMENTATION_HEADER: contrib/libs/openmpi/opal/mca/hwloc/external/external.h
    - MCA_memory_IMPLEMENTATION_HEADER: contrib/libs/openmpi/opal/mca/memory/base/empty.h
    - MCA_rte_IMPLEMENTATION_HEADER: contrib/libs/openmpi/ompi/mca/rte/orte/rte_orte.h
    - MCA_timer_IMPLEMENTATION_HEADER: contrib/libs/openmpi/opal/mca/timer/linux/timer_linux.h
    - PMIX_EVENT2_THREAD_HEADER: contrib/libs/openmpi/opal/mca/event/external/external.h
    - PMIX_EVENT_HEADER: contrib/libs/openmpi/opal/mca/event/external/external.h
    - PMIX_HWLOC_HEADER: contrib/libs/openmpi/opal/mca/hwloc/external/external.h

- source_filter: "^contrib/libs/pugixml"
  includes:
    - PUGIXML_SOURCE: contrib/libs/pugixml/pugixml.cpp

- source_filter: "^contrib/libs/unixodbc"
  includes:
    - LT_CONFIG_H: $U/config.h

- source_filter: "^contrib/libs/xpdf-3.04/splash"
  includes:
    - FT_CFF_DRIVER_H: contrib/libs/freetype/include/freetype/ftdriver.h

- source_filter: "^contrib/libs/nvidia/thrust"
  includes:
    - __THRUST_DEVICE_SYSTEM_TAG_HEADER:
      - contrib/libs/nvidia/thrust/thrust/system/cpp/detail/execution_policy.h
      - contrib/libs/nvidia/thrust/thrust/system/cuda/detail/execution_policy.h
      - contrib/libs/nvidia/thrust/thrust/system/omp/detail/execution_policy.h
      - contrib/libs/nvidia/thrust/thrust/system/tbb/detail/execution_policy.h

- source_filter: "^contrib/libs/unixodbc/libltdl"
  includes:
      - LT_CONFIG_H: $U/config.h

- source_filter: "^contrib/libs/esp-idf"
  includes:
    - LWIP_HOOK_FILENAME: contrib/libs/esp-idf/components/lwip/port/esp32/include/lwip_default_hooks.h
    - MBEDTLS_CONFIG_FILE: contrib/libs/esp-idf/components/mbedtls/port/include/mbedtls/esp_config.h

- source_filter: "^contrib/libs/sparsehash/src/sparsehash"
  includes:
    - HASH_FUN_H: util/generic/hash.h

- source_filter: "^contrib/libs/cbc/Cbc/src/OsiCbc"
  includes:
    - OSICBC_DFLT_SOLVER_HPP: contrib/libs/cbc/Clp/src/OsiClp/OsiClpSolverInterface.hpp

- source_filter: "^contrib/libs/glog/sources/src"
  includes:
    - STACKTRACE_H:
      - contrib/libs/glog/sources/src/stacktrace_x86-inl.h
      - contrib/libs/glog/sources/src/stacktrace_x86_64-inl.h
      - contrib/libs/glog/sources/src/stacktrace_powerpc-inl.h
      - contrib/libs/glog/sources/src/stacktrace_generic-inl.h

- source_filter: "^contrib/libs/hdf5/src"
  includes:
    - H5_ZLIB_HEADER: contrib/libs/zlib/include/zlib.h

- source_filter: "^contrib/libs/libgit2/src/util/hash/sha1dc"
  includes:
    - SHA1DC_CUSTOM_INCLUDE_SHA1_C: contrib/libs/libgit2/src/util/git2_util.h
    - SHA1DC_CUSTOM_INCLUDE_UBC_CHECK_C: contrib/libs/libgit2/src/util/git2_util.h

- source_filter: "^contrib/libs/libyang"
  includes:
    - IETF_DATASTORES: contrib/libs/libyang/models/ietf-datastores@2018-02-14.h
    - IETF_INET_TYPES_PATH: contrib/libs/libyang/models/ietf-inet-types@2013-07-15.h
    - IETF_YANG_LIB_PATH: contrib/libs/libyang/models/ietf-yang-library@2019-01-04.h
    - IETF_YANG_METADATA_PATH: contrib/libs/libyang/models/ietf-yang-metadata@2016-08-05.h
    - IETF_YANG_TYPES_PATH: contrib/libs/libyang/models/ietf-yang-types@2013-07-15.h
    - YANG_PATH: contrib/libs/libyang/models/yang@2017-02-20.h

# adfox/amacs and mds/cocaine are legacy projects which is set to removal from the repo.
# Resolve macro includes into nothing as nobody needs sandboxed build to be functional in these places.
- source_filter: "^adfox/amacs/deps/luabind"
  includes:
    - BOOST_PP_ITERATE()

- source_filter: "^mds/cocaine/core"
  includes:
    - BOOST_PP_ITERATE()

# market uses include-via-define by design, just ignore this includes
- source_filter: "^market/media_adv/library/experiments"
  includes:
    - MARKET_MADV_EXP_FLAGS_FILENAME

- source_filter: "^yt/yt/experiments/tabletvis/allegro5-headers"
  includes:
    - ALLEGRO_EXTRA_HEADER:
      - yt/yt/experiments/tabletvis/allegro5-headers/allegro5/platform/alunix.h
      - yt/yt/experiments/tabletvis/allegro5-headers/allegro5/platform/alwin.h

# Connectedhomeip contrib uses a special type of imports for third-party includes https://github.com/project-chip/connectedhomeip/issues/4354
# Also empty MACROs here defined for Linux and ESP32 platforms, but esp32 files use third-party library esp-idf
# So there are some problems to resolve imports especially in contrib/libs/connectedhomeip/src/app,
# after resolving a problem via ADDINCL there will be much more errors. So currently these types of errors hide under empty resolving
- source_filter: "^contrib/libs/connectedhomeip/src"
  includes:
    - CHIP_SYSTEM_LAYER_IMPL_CONFIG_FILE:
      - contrib/libs/connectedhomeip/src/system/SystemLayerImplSelect.h
      - contrib/libs/connectedhomeip/src/system/SystemLayerImplFreeRTOS.h
    - CHIP_PROJECT_CONFIG_INCLUDE:  contrib/libs/connectedhomeip/config/standalone/CHIPProjectConfig.h
    - SYSTEM_PROJECT_CONFIG_INCLUDE: contrib/libs/connectedhomeip/config/standalone/SystemProjectConfig.h
    - CHIP_ADDRESS_RESOLVE_IMPL_INCLUDE_HEADER: contrib/libs/connectedhomeip/src/lib/address_resolve/AddressResolve_DefaultImpl.h
    - CONFIGURATION_HEADER: contrib/libs/connectedhomeip/src/app/util/config.h
    - CHIP_DEVICE_PROJECT_CONFIG_INCLUDE: contrib/libs/connectedhomeip/src/platform/ESP32/CHIPDeviceProjectConfig.h
    - BLE_PLATFORM_CONFIG_INCLUDE
    - CHIP_PLATFORM_CONFIG_INCLUDE
    - INET_PLATFORM_CONFIG_INCLUDE
    - SYSTEM_PLATFORM_CONFIG_INCLUDE
    - CHIPDEVICEPLATFORMEVENT_HEADER
    - CHIP_DEVICE_PLATFORM_CONFIG_INCLUDE
    - CONFIGURATIONMANAGERIMPL_HEADER
    - CONNECTIVITYMANAGERIMPL_HEADER
    - KEYVALUESTOREMANAGERIMPL_HEADER
    - PLATFORMMANAGERIMPL_HEADER
    - THREADSTACKMANAGERIMPL_HEADER
    - BLEMANAGERIMPL_HEADER
