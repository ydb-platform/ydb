p { i: "clang" x: "clang" ix: true peerdir: "contrib/libs/clang16/tools/libclang" }
p { i: "clang" x: "clangARCMigrate" ix: true peerdir: "contrib/libs/clang16/lib/ARCMigrate" }
p { i: "clang" x: "clangAST" ix: true peerdir: "contrib/libs/clang16/lib/AST" }
p { i: "clang" x: "clangASTMatchers" ix: true peerdir: "contrib/libs/clang16/lib/ASTMatchers" }
p { i: "clang" x: "clangAnalysis" ix: true peerdir: "contrib/libs/clang16/lib/Analysis" }
p { i: "clang" x: "clangAnalysisFlowSensitive" ix: true peerdir: "contrib/libs/clang16/lib/Analysis/FlowSensitive" }
p { i: "clang" x: "clangAnalysisFlowSensitiveModels" ix: true peerdir: "contrib/libs/clang16/lib/Analysis/FlowSensitive/Models" }
p { i: "clang" x: "clangApplyReplacements" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-apply-replacements/lib/Tooling" }
p { i: "clang" x: "clangBasic" ix: true peerdir: "contrib/libs/clang16/lib/Basic" }
p { i: "clang" x: "clangCodeGen" ix: true peerdir: "contrib/libs/clang16/lib/CodeGen" }
p { i: "clang" x: "clangCrossTU" ix: true peerdir: "contrib/libs/clang16/lib/CrossTU" }
p { i: "clang" x: "clangDoc" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-doc" }
p { i: "clang" x: "clangDriver" ix: true peerdir: "contrib/libs/clang16/lib/Driver" }
p { i: "clang" x: "clangEdit" ix: true peerdir: "contrib/libs/clang16/lib/Edit" }
p { i: "clang" x: "clangExtractAPI" ix: true peerdir: "contrib/libs/clang16/lib/ExtractAPI" }
p { i: "clang" x: "clangFormat" ix: true peerdir: "contrib/libs/clang16/lib/Format" }
p { i: "clang" x: "clangFrontend" ix: true peerdir: "contrib/libs/clang16/lib/Frontend" }
p { i: "clang" x: "clangFrontendTool" ix: true peerdir: "contrib/libs/clang16/lib/FrontendTool" }
p { i: "clang" x: "clangIndex" ix: true peerdir: "contrib/libs/clang16/lib/Index" }
p { i: "clang" x: "clangLex" ix: true peerdir: "contrib/libs/clang16/lib/Lex" }
p { i: "clang" x: "clangParse" ix: true peerdir: "contrib/libs/clang16/lib/Parse" }
p { i: "clang" x: "clangRewrite" ix: true peerdir: "contrib/libs/clang16/lib/Rewrite" }
p { i: "clang" x: "clangRewriteFrontend" ix: true peerdir: "contrib/libs/clang16/lib/Frontend/Rewrite" }
p { i: "clang" x: "clangSema" ix: true peerdir: "contrib/libs/clang16/lib/Sema" }
p { i: "clang" x: "clangSerialization" ix: true peerdir: "contrib/libs/clang16/lib/Serialization" }
p { i: "clang" x: "clangStaticAnalyzerCheckers" ix: true peerdir: "contrib/libs/clang16/lib/StaticAnalyzer/Checkers" }
p { i: "clang" x: "clangStaticAnalyzerCore" ix: true peerdir: "contrib/libs/clang16/lib/StaticAnalyzer/Core" }
p { i: "clang" x: "clangStaticAnalyzerFrontend" ix: true peerdir: "contrib/libs/clang16/lib/StaticAnalyzer/Frontend" }
p { i: "clang" x: "clangSupport" ix: true peerdir: "contrib/libs/clang16/lib/Support" }
p { i: "clang" x: "clangTidy" ix: true peerdir: "contrib/libs/clang16/lib" }
p { i: "clang" x: "clangTidyAbseilModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/abseil" }
p { i: "clang" x: "clangTidyAlteraModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/altera" }
p { i: "clang" x: "clangTidyAndroidModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/android" }
p { i: "clang" x: "clangTidyBoostModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/boost" }
p { i: "clang" x: "clangTidyBugproneModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/bugprone" }
p { i: "clang" x: "clangTidyCERTModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/cert" }
p { i: "clang" x: "clangTidyConcurrencyModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/concurrency" }
p { i: "clang" x: "clangTidyCppCoreGuidelinesModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/cppcoreguidelines" }
p { i: "clang" x: "clangTidyDarwinModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/darwin" }
p { i: "clang" x: "clangTidyFuchsiaModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/fuchsia" }
p { i: "clang" x: "clangTidyGoogleModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/google" }
p { i: "clang" x: "clangTidyHICPPModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/hicpp" }
p { i: "clang" x: "clangTidyLLVMLibcModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/llvmlibc" }
p { i: "clang" x: "clangTidyLLVMModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/llvm" }
p { i: "clang" x: "clangTidyLinuxKernelModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/linuxkernel" }
p { i: "clang" x: "clangTidyMPIModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/mpi" }
p { i: "clang" x: "clangTidyMain" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy" }
p { i: "clang" x: "clangTidyMiscModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/misc" }
p { i: "clang" x: "clangTidyModernizeModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/modernize" }
p { i: "clang" x: "clangTidyObjCModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/objc" }
p { i: "clang" x: "clangTidyOpenMPModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/openmp" }
p { i: "clang" x: "clangTidyPerformanceModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/performance" }
p { i: "clang" x: "clangTidyPortabilityModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/portability" }
p { i: "clang" x: "clangTidyReadabilityModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/readability" }
p { i: "clang" x: "clangTidyUtils" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/utils" }
p { i: "clang" x: "clangTidyZirconModule" ix: true peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/zircon" }
p { i: "clang" x: "clangTooling" ix: true peerdir: "contrib/libs/clang16/lib/Tooling" }
p { i: "clang" x: "clangToolingCore" ix: true peerdir: "contrib/libs/clang16/lib/Tooling/Core" }
p { i: "clang" x: "clangToolingInclusions" ix: true peerdir: "contrib/libs/clang16/lib/Tooling/Inclusions" }
p { i: "clang" x: "clangToolingRefactoring" ix: true peerdir: "contrib/libs/clang16/lib/Tooling/Refactoring" }
p { i: "clang" x: "clangTransformer" ix: true peerdir: "contrib/libs/clang16/lib/Tooling/Transformer" }
p { x: "clang-apply-replacements" peerdir: "contrib/libs/clang16/tools/extra/clang-apply-replacements/tool" }
p { x: "clang-ast-dump" peerdir: "contrib/libs/clang16/lib/Tooling/DumpTool" }
p { x: "clang-cpp" peerdir: "contrib/libs/clang16/tools/driver" }
p { x: "clang-doc" peerdir: "contrib/libs/clang16/tools/extra/clang-doc/tool" }
p { x: "clang-format" peerdir: "contrib/libs/clang16/tools/clang-format" }
p { x: "clang-linker-wrapper" peerdir: "contrib/libs/clang16/tools/clang-linker-wrapper" }
p { x: "clang-offload-bundler" peerdir: "contrib/libs/clang16/tools/clang-offload-bundler" }
p { x: "clang-offload-packager" peerdir: "contrib/libs/clang16/tools/clang-offload-packager" }
p { x: "clang-rename" peerdir: "contrib/libs/clang16/tools/clang-rename" }
p { x: "clang-tblgen" peerdir: "contrib/libs/clang16/utils/TableGen" }
p { x: "clang-tidy" peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/tool" }
p { x: "clang-tidy-confusable-chars-gen" peerdir: "contrib/libs/clang16/tools/extra/clang-tidy/misc/ConfusableTable" }
