47c47
< unsigned char gf_mul_erasure(unsigned char a, unsigned char b)
---
> unsigned char gf_mul(unsigned char a, unsigned char b)
86c86
< 			p = gf_mul_erasure(p, gen);
---
> 			p = gf_mul(p, gen);
88c88
< 		gen = gf_mul_erasure(gen, 2);
---
> 		gen = gf_mul(gen, 2);
147,148c147,148
< 			in_mat[i * n + j] = gf_mul_erasure(in_mat[i * n + j], temp);
< 			out_mat[i * n + j] = gf_mul_erasure(out_mat[i * n + j], temp);
---
> 			in_mat[i * n + j] = gf_mul(in_mat[i * n + j], temp);
> 			out_mat[i * n + j] = gf_mul(out_mat[i * n + j], temp);
157,158c157,158
< 				out_mat[j * n + k] ^= gf_mul_erasure(temp, out_mat[i * n + k]);
< 				in_mat[j * n + k] ^= gf_mul_erasure(temp, in_mat[i * n + k]);
---
> 				out_mat[j * n + k] ^= gf_mul(temp, out_mat[i * n + k]);
> 				in_mat[j * n + k] ^= gf_mul(temp, in_mat[i * n + k]);
283c283
< 			s ^= gf_mul_erasure(src[j][i], v[j * 32 + 1]);
---
> 			s ^= gf_mul(src[j][i], v[j * 32 + 1]);
296c296
< 		s ^= gf_mul_erasure(src[i], v[vec_i * 32 + 1]);
---
> 		s ^= gf_mul(src[i], v[vec_i * 32 + 1]);
311c311
< 				s ^= gf_mul_erasure(src[j][i], v[j * 32 + l * srcs * 32 + 1]);
---
> 				s ^= gf_mul(src[j][i], v[j * 32 + l * srcs * 32 + 1]);
327c327
< 			s ^= gf_mul_erasure(data[i], v[vec_i * 32 + l * k * 32 + 1]);
---
> 			s ^= gf_mul(data[i], v[vec_i * 32 + l * k * 32 + 1]);
339c339
< 		*dest++ = gf_mul_erasure(c, *src++);
---
> 		*dest++ = gf_mul(c, *src++);
