From 51cee0362998ec6f1eabac1e795f3b6e3ee639ea Mon Sep 17 00:00:00 2001
From: DRC <information@libjpeg-turbo.org>
Date: Fri, 13 Jun 2025 14:52:09 -0400
Subject: [PATCH] Build: Use wrappers rather than CMake object libs

Some downstream projects need to adapt the libjpeg-turbo source code to
non-CMake build systems, and the use of CMake object libraries made that
difficult.  Referring to #754, the use of CMake object libraries also
caused the libjpeg-turbo libraries to contain duplicate object names,
which caused problems with certain development tools.  This commit
modifies the build system so that it uses wrappers, rather than CMake
object libraries, to compile source files for multiple data precisions.
For convenience, the wrappers are included in the source tree, but they
can be re-generated by building the "wrappers" target.

In addition to facilitating downstream integration, using wrappers
improves code readability, since multiple data precisions are now
handled at the source code level instead of at the build system level.

Since this will be pushed to a bug-fix release, the goal was to avoid
changing any existing source code.  A future major release of
libjpeg-turbo may restructure the libjpeg API source code so that only
the functions that need to be compiled for multiple data precisions are
wrapped.  (That is how the TurboJPEG API source code is structured.)

Closes #817
---
 CMakeLists.txt                      | 138 ++++++++++++----------------
 cmakescripts/GenerateWrappers.cmake |  37 ++++++++
 sharedlib/CMakeLists.txt            |  32 ++-----
 src/wrapper/jcapistd-12.c           |  14 +++
 src/wrapper/jcapistd-16.c           |  14 +++
 src/wrapper/jcapistd-8.c            |  14 +++
 src/wrapper/jccoefct-12.c           |  14 +++
 src/wrapper/jccoefct-8.c            |  14 +++
 src/wrapper/jccolor-12.c            |  14 +++
 src/wrapper/jccolor-16.c            |  14 +++
 src/wrapper/jccolor-8.c             |  14 +++
 src/wrapper/jcdctmgr-12.c           |  14 +++
 src/wrapper/jcdctmgr-8.c            |  14 +++
 src/wrapper/jcdiffct-12.c           |  14 +++
 src/wrapper/jcdiffct-16.c           |  14 +++
 src/wrapper/jcdiffct-8.c            |  14 +++
 src/wrapper/jclossls-12.c           |  14 +++
 src/wrapper/jclossls-16.c           |  14 +++
 src/wrapper/jclossls-8.c            |  14 +++
 src/wrapper/jcmainct-12.c           |  14 +++
 src/wrapper/jcmainct-16.c           |  14 +++
 src/wrapper/jcmainct-8.c            |  14 +++
 src/wrapper/jcprepct-12.c           |  14 +++
 src/wrapper/jcprepct-16.c           |  14 +++
 src/wrapper/jcprepct-8.c            |  14 +++
 src/wrapper/jcsample-12.c           |  14 +++
 src/wrapper/jcsample-16.c           |  14 +++
 src/wrapper/jcsample-8.c            |  14 +++
 src/wrapper/jdapistd-12.c           |  14 +++
 src/wrapper/jdapistd-16.c           |  14 +++
 src/wrapper/jdapistd-8.c            |  14 +++
 src/wrapper/jdcoefct-12.c           |  14 +++
 src/wrapper/jdcoefct-8.c            |  14 +++
 src/wrapper/jdcolor-12.c            |  14 +++
 src/wrapper/jdcolor-16.c            |  14 +++
 src/wrapper/jdcolor-8.c             |  14 +++
 src/wrapper/jddctmgr-12.c           |  14 +++
 src/wrapper/jddctmgr-8.c            |  14 +++
 src/wrapper/jddiffct-12.c           |  14 +++
 src/wrapper/jddiffct-16.c           |  14 +++
 src/wrapper/jddiffct-8.c            |  14 +++
 src/wrapper/jdlossls-12.c           |  14 +++
 src/wrapper/jdlossls-16.c           |  14 +++
 src/wrapper/jdlossls-8.c            |  14 +++
 src/wrapper/jdmainct-12.c           |  14 +++
 src/wrapper/jdmainct-16.c           |  14 +++
 src/wrapper/jdmainct-8.c            |  14 +++
 src/wrapper/jdmerge-12.c            |  14 +++
 src/wrapper/jdmerge-8.c             |  14 +++
 src/wrapper/jdpostct-12.c           |  14 +++
 src/wrapper/jdpostct-16.c           |  14 +++
 src/wrapper/jdpostct-8.c            |  14 +++
 src/wrapper/jdsample-12.c           |  14 +++
 src/wrapper/jdsample-16.c           |  14 +++
 src/wrapper/jdsample-8.c            |  14 +++
 src/wrapper/jfdctfst-12.c           |  14 +++
 src/wrapper/jfdctfst-8.c            |  14 +++
 src/wrapper/jfdctint-12.c           |  14 +++
 src/wrapper/jfdctint-8.c            |  14 +++
 src/wrapper/jidctflt-12.c           |  14 +++
 src/wrapper/jidctflt-8.c            |  14 +++
 src/wrapper/jidctfst-12.c           |  14 +++
 src/wrapper/jidctfst-8.c            |  14 +++
 src/wrapper/jidctint-12.c           |  14 +++
 src/wrapper/jidctint-8.c            |  14 +++
 src/wrapper/jidctred-12.c           |  14 +++
 src/wrapper/jidctred-8.c            |  14 +++
 src/wrapper/jquant1-12.c            |  14 +++
 src/wrapper/jquant1-8.c             |  14 +++
 src/wrapper/jquant2-12.c            |  14 +++
 src/wrapper/jquant2-8.c             |  14 +++
 src/wrapper/jutils-12.c             |  14 +++
 src/wrapper/jutils-16.c             |  14 +++
 src/wrapper/jutils-8.c              |  14 +++
 src/wrapper/rdcolmap-12.c           |  14 +++
 src/wrapper/rdcolmap-8.c            |  14 +++
 src/wrapper/rdppm-12.c              |  14 +++
 src/wrapper/rdppm-16.c              |  14 +++
 src/wrapper/rdppm-8.c               |  14 +++
 src/wrapper/template.c              |  14 +++
 src/wrapper/wrgif-12.c              |  14 +++
 src/wrapper/wrgif-8.c               |  14 +++
 src/wrapper/wrppm-12.c              |  14 +++
 src/wrapper/wrppm-16.c              |  14 +++
 src/wrapper/wrppm-8.c               |  14 +++
 86 files changed, 1259 insertions(+), 101 deletions(-)
 create mode 100644 cmakescripts/GenerateWrappers.cmake
 create mode 100644 src/wrapper/jcapistd-12.c
 create mode 100644 src/wrapper/jcapistd-16.c
 create mode 100644 src/wrapper/jcapistd-8.c
 create mode 100644 src/wrapper/jccoefct-12.c
 create mode 100644 src/wrapper/jccoefct-8.c
 create mode 100644 src/wrapper/jccolor-12.c
 create mode 100644 src/wrapper/jccolor-16.c
 create mode 100644 src/wrapper/jccolor-8.c
 create mode 100644 src/wrapper/jcdctmgr-12.c
 create mode 100644 src/wrapper/jcdctmgr-8.c
 create mode 100644 src/wrapper/jcdiffct-12.c
 create mode 100644 src/wrapper/jcdiffct-16.c
 create mode 100644 src/wrapper/jcdiffct-8.c
 create mode 100644 src/wrapper/jclossls-12.c
 create mode 100644 src/wrapper/jclossls-16.c
 create mode 100644 src/wrapper/jclossls-8.c
 create mode 100644 src/wrapper/jcmainct-12.c
 create mode 100644 src/wrapper/jcmainct-16.c
 create mode 100644 src/wrapper/jcmainct-8.c
 create mode 100644 src/wrapper/jcprepct-12.c
 create mode 100644 src/wrapper/jcprepct-16.c
 create mode 100644 src/wrapper/jcprepct-8.c
 create mode 100644 src/wrapper/jcsample-12.c
 create mode 100644 src/wrapper/jcsample-16.c
 create mode 100644 src/wrapper/jcsample-8.c
 create mode 100644 src/wrapper/jdapistd-12.c
 create mode 100644 src/wrapper/jdapistd-16.c
 create mode 100644 src/wrapper/jdapistd-8.c
 create mode 100644 src/wrapper/jdcoefct-12.c
 create mode 100644 src/wrapper/jdcoefct-8.c
 create mode 100644 src/wrapper/jdcolor-12.c
 create mode 100644 src/wrapper/jdcolor-16.c
 create mode 100644 src/wrapper/jdcolor-8.c
 create mode 100644 src/wrapper/jddctmgr-12.c
 create mode 100644 src/wrapper/jddctmgr-8.c
 create mode 100644 src/wrapper/jddiffct-12.c
 create mode 100644 src/wrapper/jddiffct-16.c
 create mode 100644 src/wrapper/jddiffct-8.c
 create mode 100644 src/wrapper/jdlossls-12.c
 create mode 100644 src/wrapper/jdlossls-16.c
 create mode 100644 src/wrapper/jdlossls-8.c
 create mode 100644 src/wrapper/jdmainct-12.c
 create mode 100644 src/wrapper/jdmainct-16.c
 create mode 100644 src/wrapper/jdmainct-8.c
 create mode 100644 src/wrapper/jdmerge-12.c
 create mode 100644 src/wrapper/jdmerge-8.c
 create mode 100644 src/wrapper/jdpostct-12.c
 create mode 100644 src/wrapper/jdpostct-16.c
 create mode 100644 src/wrapper/jdpostct-8.c
 create mode 100644 src/wrapper/jdsample-12.c
 create mode 100644 src/wrapper/jdsample-16.c
 create mode 100644 src/wrapper/jdsample-8.c
 create mode 100644 src/wrapper/jfdctfst-12.c
 create mode 100644 src/wrapper/jfdctfst-8.c
 create mode 100644 src/wrapper/jfdctint-12.c
 create mode 100644 src/wrapper/jfdctint-8.c
 create mode 100644 src/wrapper/jidctflt-12.c
 create mode 100644 src/wrapper/jidctflt-8.c
 create mode 100644 src/wrapper/jidctfst-12.c
 create mode 100644 src/wrapper/jidctfst-8.c
 create mode 100644 src/wrapper/jidctint-12.c
 create mode 100644 src/wrapper/jidctint-8.c
 create mode 100644 src/wrapper/jidctred-12.c
 create mode 100644 src/wrapper/jidctred-8.c
 create mode 100644 src/wrapper/jquant1-12.c
 create mode 100644 src/wrapper/jquant1-8.c
 create mode 100644 src/wrapper/jquant2-12.c
 create mode 100644 src/wrapper/jquant2-8.c
 create mode 100644 src/wrapper/jutils-12.c
 create mode 100644 src/wrapper/jutils-16.c
 create mode 100644 src/wrapper/jutils-8.c
 create mode 100644 src/wrapper/rdcolmap-12.c
 create mode 100644 src/wrapper/rdcolmap-8.c
 create mode 100644 src/wrapper/rdppm-12.c
 create mode 100644 src/wrapper/rdppm-16.c
 create mode 100644 src/wrapper/rdppm-8.c
 create mode 100644 src/wrapper/template.c
 create mode 100644 src/wrapper/wrgif-12.c
 create mode 100644 src/wrapper/wrgif-8.c
 create mode 100644 src/wrapper/wrppm-12.c
 create mode 100644 src/wrapper/wrppm-16.c
 create mode 100644 src/wrapper/wrppm-8.c

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b8e76a59d..23aa2397b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -617,20 +617,48 @@ if(CMAKE_EXECUTABLE_SUFFIX_TMP)
 endif()
 message(STATUS "CMAKE_EXECUTABLE_SUFFIX = ${CMAKE_EXECUTABLE_SUFFIX}")
 
-set(JPEG16_SOURCES src/jcapistd.c src/jccolor.c src/jcdiffct.c src/jclossls.c
-  src/jcmainct.c src/jcprepct.c src/jcsample.c src/jdapistd.c src/jdcolor.c
-  src/jddiffct.c src/jdlossls.c src/jdmainct.c src/jdpostct.c src/jdsample.c
-  src/jutils.c)
-set(JPEG12_SOURCES ${JPEG16_SOURCES} src/jccoefct.c src/jcdctmgr.c
-  src/jdcoefct.c src/jddctmgr.c src/jdmerge.c src/jfdctfst.c src/jfdctint.c
-  src/jidctflt.c src/jidctfst.c src/jidctint.c src/jidctred.c src/jquant1.c
-  src/jquant2.c)
-set(JPEG_SOURCES ${JPEG12_SOURCES} src/jcapimin.c src/jchuff.c src/jcicc.c
-  src/jcinit.c src/jclhuff.c src/jcmarker.c src/jcmaster.c src/jcomapi.c
-  src/jcparam.c src/jcphuff.c src/jctrans.c src/jdapimin.c src/jdatadst.c
-  src/jdatasrc.c src/jdhuff.c src/jdicc.c src/jdinput.c src/jdlhuff.c
-  src/jdmarker.c src/jdmaster.c src/jdphuff.c src/jdtrans.c src/jerror.c
-  src/jfdctflt.c src/jmemmgr.c src/jmemnobs.c src/jpeg_nbits.c)
+add_custom_target(wrappers COMMAND ${CMAKE_COMMAND}
+ -DSOURCE_DIR=${CMAKE_SOURCE_DIR}/src/wrapper
+ -P ${CMAKE_CURRENT_SOURCE_DIR}/cmakescripts/GenerateWrappers.cmake)
+
+set(JPEG_SOURCES src/jcapimin.c
+  src/wrapper/jcapistd-8.c src/wrapper/jcapistd-12.c src/wrapper/jcapistd-16.c
+  src/wrapper/jccoefct-8.c src/wrapper/jccoefct-12.c
+  src/wrapper/jccolor-8.c src/wrapper/jccolor-12.c src/wrapper/jccolor-16.c
+  src/wrapper/jcdctmgr-8.c src/wrapper/jcdctmgr-12.c
+  src/wrapper/jcdiffct-8.c src/wrapper/jcdiffct-12.c src/wrapper/jcdiffct-16.c
+  src/jchuff.c src/jcicc.c src/jcinit.c src/jclhuff.c
+  src/wrapper/jclossls-8.c src/wrapper/jclossls-12.c src/wrapper/jclossls-16.c
+  src/wrapper/jcmainct-8.c src/wrapper/jcmainct-12.c src/wrapper/jcmainct-16.c
+  src/jcmarker.c src/jcmaster.c src/jcomapi.c src/jcparam.c src/jcphuff.c
+  src/wrapper/jcprepct-8.c src/wrapper/jcprepct-12.c src/wrapper/jcprepct-16.c
+  src/wrapper/jcsample-8.c src/wrapper/jcsample-12.c src/wrapper/jcsample-16.c
+  src/jctrans.c src/jdapimin.c
+  src/wrapper/jdapistd-8.c src/wrapper/jdapistd-12.c src/wrapper/jdapistd-16.c
+  src/jdatadst.c src/jdatasrc.c
+  src/wrapper/jdcoefct-8.c src/wrapper/jdcoefct-12.c
+  src/wrapper/jdcolor-8.c src/wrapper/jdcolor-12.c src/wrapper/jdcolor-16.c
+  src/wrapper/jddctmgr-8.c src/wrapper/jddctmgr-12.c
+  src/wrapper/jddiffct-8.c src/wrapper/jddiffct-12.c src/wrapper/jddiffct-16.c
+  src/jdhuff.c src/jdicc.c src/jdinput.c src/jdlhuff.c
+  src/wrapper/jdlossls-8.c src/wrapper/jdlossls-12.c src/wrapper/jdlossls-16.c
+  src/wrapper/jdmainct-8.c src/wrapper/jdmainct-12.c src/wrapper/jdmainct-16.c
+  src/jdmarker.c src/jdmaster.c
+  src/wrapper/jdmerge-8.c src/wrapper/jdmerge-12.c
+  src/jdphuff.c
+  src/wrapper/jdpostct-8.c src/wrapper/jdpostct-12.c src/wrapper/jdpostct-16.c
+  src/wrapper/jdsample-8.c src/wrapper/jdsample-12.c src/wrapper/jdsample-16.c
+  src/jdtrans.c src/jerror.c src/jfdctflt.c
+  src/wrapper/jfdctfst-8.c src/wrapper/jfdctfst-12.c
+  src/wrapper/jfdctint-8.c src/wrapper/jfdctint-12.c
+  src/wrapper/jidctflt-8.c src/wrapper/jidctflt-12.c
+  src/wrapper/jidctfst-8.c src/wrapper/jidctfst-12.c
+  src/wrapper/jidctint-8.c src/wrapper/jidctint-12.c
+  src/wrapper/jidctred-8.c src/wrapper/jidctred-12.c
+  src/jmemmgr.c src/jmemnobs.c src/jpeg_nbits.c
+  src/wrapper/jquant1-8.c src/wrapper/jquant1-12.c
+  src/wrapper/jquant2-8.c src/wrapper/jquant2-12.c
+  src/wrapper/jutils-8.c src/wrapper/jutils-12.c src/wrapper/jutils-16.c)
 
 if(WITH_ARITH_ENC OR WITH_ARITH_DEC)
   set(JPEG_SOURCES ${JPEG_SOURCES} src/jaricom.c)
@@ -671,40 +699,25 @@ if(WITH_JAVA)
 endif()
 
 if(ENABLE_SHARED)
-  # Compile a separate version of these source files with 12-bit and 16-bit
-  # data precision.
-  add_library(jpeg12 OBJECT ${JPEG12_SOURCES})
-  set_property(TARGET jpeg12 PROPERTY COMPILE_FLAGS "-DBITS_IN_JSAMPLE=12")
-  set_target_properties(jpeg12 PROPERTIES POSITION_INDEPENDENT_CODE 1)
-  add_library(jpeg16 OBJECT ${JPEG16_SOURCES})
-  set_property(TARGET jpeg16 PROPERTY COMPILE_FLAGS "-DBITS_IN_JSAMPLE=16")
-  set_target_properties(jpeg16 PROPERTIES POSITION_INDEPENDENT_CODE 1)
   add_subdirectory(sharedlib)
 endif()
 
 if(ENABLE_STATIC)
-  # Compile a separate version of these source files with 12-bit and 16-bit
-  # data precision.
-  add_library(jpeg12-static OBJECT ${JPEG12_SOURCES})
-  set_property(TARGET jpeg12-static PROPERTY COMPILE_FLAGS
-    "-DBITS_IN_JSAMPLE=12")
-  add_library(jpeg16-static OBJECT ${JPEG16_SOURCES})
-  set_property(TARGET jpeg16-static PROPERTY COMPILE_FLAGS
-    "-DBITS_IN_JSAMPLE=16")
   add_library(jpeg-static STATIC ${JPEG_SOURCES} ${SIMD_TARGET_OBJECTS}
-    ${SIMD_OBJS} $<TARGET_OBJECTS:jpeg12-static>
-    $<TARGET_OBJECTS:jpeg16-static>)
+    ${SIMD_OBJS})
   if(NOT MSVC_LIKE)
     set_target_properties(jpeg-static PROPERTIES OUTPUT_NAME jpeg)
   endif()
 endif()
 
 if(WITH_TURBOJPEG)
+  set(TURBOJPEG_SOURCES ${JPEG_SOURCES} ${SIMD_TARGET_OBJECTS} ${SIMD_OBJS}
+    src/turbojpeg.c src/transupp.c src/jdatadst-tj.c src/jdatasrc-tj.c
+    src/rdbmp.c
+    src/wrapper/rdppm-8.c src/wrapper/rdppm-12.c src/wrapper/rdppm-16.c
+    src/wrbmp.c
+    src/wrapper/wrppm-8.c src/wrapper/wrppm-12.c src/wrapper/wrppm-16.c)
   if(ENABLE_SHARED)
-    set(TURBOJPEG_SOURCES ${JPEG_SOURCES} ${SIMD_TARGET_OBJECTS} ${SIMD_OBJS}
-      src/turbojpeg.c src/transupp.c src/jdatadst-tj.c src/jdatasrc-tj.c
-      src/rdbmp.c src/rdppm.c src/wrbmp.c src/wrppm.c $<TARGET_OBJECTS:jpeg12>
-      $<TARGET_OBJECTS:jpeg16>)
     set(TJMAPFILE ${CMAKE_CURRENT_SOURCE_DIR}/src/turbojpeg-mapfile)
     if(WITH_JAVA)
       set(TURBOJPEG_SOURCES ${TURBOJPEG_SOURCES} java/turbojpeg-jni.c)
@@ -717,16 +730,7 @@ if(WITH_TURBOJPEG)
       set(TURBOJPEG_SOURCES ${TURBOJPEG_SOURCES}
         ${CMAKE_BINARY_DIR}/win/turbojpeg.rc)
     endif()
-    add_library(turbojpeg12 OBJECT src/rdppm.c src/wrppm.c)
-    set_property(TARGET turbojpeg12 PROPERTY COMPILE_FLAGS
-      "-DBITS_IN_JSAMPLE=12 -DPPM_SUPPORTED")
-    set_target_properties(turbojpeg12 PROPERTIES POSITION_INDEPENDENT_CODE 1)
-    add_library(turbojpeg16 OBJECT src/rdppm.c src/wrppm.c)
-    set_property(TARGET turbojpeg16 PROPERTY COMPILE_FLAGS
-      "-DBITS_IN_JSAMPLE=16 -DPPM_SUPPORTED")
-    set_target_properties(turbojpeg16 PROPERTIES POSITION_INDEPENDENT_CODE 1)
-    add_library(turbojpeg SHARED ${TURBOJPEG_SOURCES}
-      $<TARGET_OBJECTS:turbojpeg12> $<TARGET_OBJECTS:turbojpeg16>)
+    add_library(turbojpeg SHARED ${TURBOJPEG_SOURCES})
     set_property(TARGET turbojpeg PROPERTY COMPILE_FLAGS
       "-DBMP_SUPPORTED -DPPM_SUPPORTED")
     if(WIN32)
@@ -773,18 +777,7 @@ if(WITH_TURBOJPEG)
   endif()
 
   if(ENABLE_STATIC)
-    add_library(turbojpeg12-static OBJECT src/rdppm.c src/wrppm.c)
-    set_property(TARGET turbojpeg12-static PROPERTY COMPILE_FLAGS
-      "-DBITS_IN_JSAMPLE=12 -DPPM_SUPPORTED")
-    add_library(turbojpeg16-static OBJECT src/rdppm.c src/wrppm.c)
-    set_property(TARGET turbojpeg16-static PROPERTY COMPILE_FLAGS
-      "-DBITS_IN_JSAMPLE=16 -DPPM_SUPPORTED")
-    add_library(turbojpeg-static STATIC ${JPEG_SOURCES} ${SIMD_TARGET_OBJECTS}
-      ${SIMD_OBJS} src/turbojpeg.c src/transupp.c src/jdatadst-tj.c
-      src/jdatasrc-tj.c src/rdbmp.c src/rdppm.c src/wrbmp.c src/wrppm.c
-      $<TARGET_OBJECTS:jpeg12-static> $<TARGET_OBJECTS:jpeg16-static>
-      $<TARGET_OBJECTS:turbojpeg12-static>
-      $<TARGET_OBJECTS:turbojpeg16-static>)
+    add_library(turbojpeg-static STATIC ${TURBOJPEG_SOURCES})
     set_property(TARGET turbojpeg-static PROPERTY COMPILE_FLAGS
       "-DBMP_SUPPORTED -DPPM_SUPPORTED")
     if(NOT MSVC_LIKE)
@@ -810,32 +803,19 @@ set(CDJPEG_COMPILE_FLAGS
   "-DBMP_SUPPORTED -DGIF_SUPPORTED -DPPM_SUPPORTED -DTARGA_SUPPORTED ${USE_SETMODE}")
 
 if(ENABLE_STATIC)
-  # Compile a separate version of these source files with 12-bit and 16-bit
-  # data precision.
-  add_library(cjpeg12-static OBJECT src/rdppm.c)
-  set_property(TARGET cjpeg12-static PROPERTY COMPILE_FLAGS
-    "-DBITS_IN_JSAMPLE=12 -DGIF_SUPPORTED -DPPM_SUPPORTED")
-  add_library(cjpeg16-static OBJECT src/rdppm.c)
-  set_property(TARGET cjpeg16-static PROPERTY COMPILE_FLAGS
-    "-DBITS_IN_JSAMPLE=16 -DGIF_SUPPORTED -DPPM_SUPPORTED")
   add_executable(cjpeg-static src/cjpeg.c src/cdjpeg.c src/rdbmp.c src/rdgif.c
-    src/rdppm.c src/rdswitch.c src/rdtarga.c $<TARGET_OBJECTS:cjpeg12-static>
-    $<TARGET_OBJECTS:cjpeg16-static>)
+    src/wrapper/rdppm-8.c src/wrapper/rdppm-12.c src/wrapper/rdppm-16.c
+    src/rdswitch.c src/rdtarga.c)
   set_property(TARGET cjpeg-static PROPERTY COMPILE_FLAGS
     ${CDJPEG_COMPILE_FLAGS})
   target_link_libraries(cjpeg-static jpeg-static)
 
-  # Compile a separate version of these source files with 12-bit and 16-bit
-  # data precision.
-  add_library(djpeg12-static OBJECT src/rdcolmap.c src/wrgif.c src/wrppm.c)
-  set_property(TARGET djpeg12-static PROPERTY COMPILE_FLAGS
-    "-DBITS_IN_JSAMPLE=12 -DGIF_SUPPORTED -DPPM_SUPPORTED")
-  add_library(djpeg16-static OBJECT src/wrppm.c)
-  set_property(TARGET djpeg16-static PROPERTY COMPILE_FLAGS
-    "-DBITS_IN_JSAMPLE=16 -DPPM_SUPPORTED")
-  add_executable(djpeg-static src/djpeg.c src/cdjpeg.c src/rdcolmap.c
-    src/rdswitch.c src/wrbmp.c src/wrgif.c src/wrppm.c src/wrtarga.c
-    $<TARGET_OBJECTS:djpeg12-static> $<TARGET_OBJECTS:djpeg16-static>)
+  add_executable(djpeg-static src/djpeg.c src/cdjpeg.c
+    src/wrapper/rdcolmap-8.c src/wrapper/rdcolmap-12.c
+    src/rdswitch.c src/wrbmp.c
+    src/wrapper/wrgif-8.c src/wrapper/wrgif-12.c
+    src/wrapper/wrppm-8.c src/wrapper/wrppm-12.c src/wrapper/wrppm-16.c
+    src/wrtarga.c)
   set_property(TARGET djpeg-static PROPERTY COMPILE_FLAGS
     ${CDJPEG_COMPILE_FLAGS})
   target_link_libraries(djpeg-static jpeg-static)
diff --git a/cmakescripts/GenerateWrappers.cmake b/cmakescripts/GenerateWrappers.cmake
new file mode 100644
index 000000000..c698b80b9
--- /dev/null
+++ b/cmakescripts/GenerateWrappers.cmake
@@ -0,0 +1,37 @@
+if(NOT DEFINED SOURCE_DIR)
+  message(FATAL_ERROR "SOURCE_DIR must be specified")
+endif()
+
+foreach(FILE jcapistd.c jccolor.c jcdiffct.c jclossls.c jcmainct.c jcprepct.c
+  jcsample.c jdapistd.c jdcolor.c jddiffct.c jdlossls.c jdmainct.c jdpostct.c
+  jdsample.c jutils.c rdppm.c wrppm.c)
+
+  foreach(BITS 8 12 16)
+
+    string(REGEX REPLACE "\\.c" "-${BITS}.c" WRAPPER_FILE ${FILE})
+    if(BITS EQUAL 8)
+      set(BITS_RANGE "2 to 8")
+    elseif(BITS EQUAL 12)
+      set(BITS_RANGE "9 to 12")
+    else()
+      set(BITS_RANGE "13 to 16")
+    endif()
+
+    configure_file(${SOURCE_DIR}/template.c ${SOURCE_DIR}/${WRAPPER_FILE})
+
+  endforeach()
+endforeach()
+
+foreach(FILE jccoefct.c jcdctmgr.c jdcoefct.c jddctmgr.c jdmerge.c jfdctfst.c
+  jfdctint.c jidctflt.c jidctfst.c jidctint.c jidctred.c jquant1.c jquant2.c
+  rdcolmap.c wrgif.c)
+
+  foreach(BITS 8 12)
+
+    string(REGEX REPLACE "\\.c" "-${BITS}.c" WRAPPER_FILE ${FILE})
+    set(BITS_RANGE ${BITS})
+
+    configure_file(${SOURCE_DIR}/template.c ${SOURCE_DIR}/${WRAPPER_FILE})
+
+  endforeach()
+endforeach()
diff --git a/sharedlib/CMakeLists.txt b/sharedlib/CMakeLists.txt
index c8c92996f..55a86b097 100644
--- a/sharedlib/CMakeLists.txt
+++ b/sharedlib/CMakeLists.txt
@@ -49,7 +49,7 @@ if(MSVC_LIKE)
   set(JPEG_SRCS ${JPEG_SRCS} ${CMAKE_BINARY_DIR}/win/jpeg.rc)
 endif()
 add_library(jpeg SHARED ${JPEG_SRCS} ${DEFFILE} ${SIMD_TARGET_OBJECTS}
-  ${SIMD_OBJS} $<TARGET_OBJECTS:jpeg12> $<TARGET_OBJECTS:jpeg16>)
+  ${SIMD_OBJS})
 
 set_target_properties(jpeg PROPERTIES SOVERSION ${SO_MAJOR_VERSION}
   VERSION ${SO_MAJOR_VERSION}.${SO_AGE}.${SO_MINOR_VERSION})
@@ -86,31 +86,19 @@ endif()
 set(CDJPEG_COMPILE_FLAGS
   "-DBMP_SUPPORTED -DGIF_SUPPORTED -DPPM_SUPPORTED -DTARGA_SUPPORTED ${USE_SETMODE}")
 
-# Compile a separate version of these source files with 12-bit and 16-bit data
-# precision.
-add_library(cjpeg12 OBJECT ../src/rdppm.c)
-set_property(TARGET cjpeg12 PROPERTY COMPILE_FLAGS
-  "-DBITS_IN_JSAMPLE=12 -DGIF_SUPPORTED -DPPM_SUPPORTED")
-add_library(cjpeg16 OBJECT ../src/rdppm.c)
-set_property(TARGET cjpeg16 PROPERTY COMPILE_FLAGS
-  "-DBITS_IN_JSAMPLE=16 -DGIF_SUPPORTED -DPPM_SUPPORTED")
 add_executable(cjpeg ../src/cjpeg.c ../src/cdjpeg.c ../src/rdbmp.c
-  ../src/rdgif.c ../src/rdppm.c ../src/rdswitch.c ../src/rdtarga.c
-  $<TARGET_OBJECTS:cjpeg12> $<TARGET_OBJECTS:cjpeg16>)
+  ../src/rdgif.c
+  ../src/wrapper/rdppm-8.c ../src/wrapper/rdppm-12.c ../src/wrapper/rdppm-16.c
+  ../src/rdswitch.c ../src/rdtarga.c)
 set_property(TARGET cjpeg PROPERTY COMPILE_FLAGS ${CDJPEG_COMPILE_FLAGS})
 target_link_libraries(cjpeg jpeg)
 
-# Compile a separate version of these source files with 12-bit and 16-bit data
-# precision.
-add_library(djpeg12 OBJECT ../src/rdcolmap.c ../src/wrgif.c ../src/wrppm.c)
-set_property(TARGET djpeg12 PROPERTY COMPILE_FLAGS
-  "-DBITS_IN_JSAMPLE=12 -DGIF_SUPPORTED -DPPM_SUPPORTED")
-add_library(djpeg16 OBJECT ../src/wrppm.c)
-set_property(TARGET djpeg16 PROPERTY COMPILE_FLAGS
-  "-DBITS_IN_JSAMPLE=16 -DPPM_SUPPORTED")
-add_executable(djpeg ../src/djpeg.c ../src/cdjpeg.c ../src/rdcolmap.c
-  ../src/rdswitch.c ../src/wrbmp.c ../src/wrgif.c ../src/wrppm.c
-  ../src/wrtarga.c $<TARGET_OBJECTS:djpeg12> $<TARGET_OBJECTS:djpeg16>)
+add_executable(djpeg ../src/djpeg.c ../src/cdjpeg.c
+  ../src/wrapper/rdcolmap-8.c ../src/wrapper/rdcolmap-12.c
+  ../src/rdswitch.c ../src/wrbmp.c
+  ../src/wrapper/wrgif-8.c ../src/wrapper/wrgif-12.c
+  ../src/wrapper/wrppm-8.c ../src/wrapper/wrppm-12.c ../src/wrapper/wrppm-16.c
+  ../src/wrtarga.c)
 set_property(TARGET djpeg PROPERTY COMPILE_FLAGS ${CDJPEG_COMPILE_FLAGS})
 target_link_libraries(djpeg jpeg)
 
diff --git a/src/wrapper/jcapistd-12.c b/src/wrapper/jcapistd-12.c
new file mode 100644
index 000000000..4ec6e99d5
--- /dev/null
+++ b/src/wrapper/jcapistd-12.c
@@ -0,0 +1,14 @@
+/*
+ * jcapistd-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcapistd.c to support 9 to 12 bits of
+ * data precision.  jcapistd.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jcapistd.c"
diff --git a/src/wrapper/jcapistd-16.c b/src/wrapper/jcapistd-16.c
new file mode 100644
index 000000000..3c0cc7916
--- /dev/null
+++ b/src/wrapper/jcapistd-16.c
@@ -0,0 +1,14 @@
+/*
+ * jcapistd-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcapistd.c to support 13 to 16 bits of
+ * data precision.  jcapistd.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jcapistd.c"
diff --git a/src/wrapper/jcapistd-8.c b/src/wrapper/jcapistd-8.c
new file mode 100644
index 000000000..3fa69d9d0
--- /dev/null
+++ b/src/wrapper/jcapistd-8.c
@@ -0,0 +1,14 @@
+/*
+ * jcapistd-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcapistd.c to support 2 to 8 bits of
+ * data precision.  jcapistd.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jcapistd.c"
diff --git a/src/wrapper/jccoefct-12.c b/src/wrapper/jccoefct-12.c
new file mode 100644
index 000000000..82405e3c3
--- /dev/null
+++ b/src/wrapper/jccoefct-12.c
@@ -0,0 +1,14 @@
+/*
+ * jccoefct-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jccoefct.c to support 12 bits of
+ * data precision.  jccoefct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jccoefct.c"
diff --git a/src/wrapper/jccoefct-8.c b/src/wrapper/jccoefct-8.c
new file mode 100644
index 000000000..51d7554ab
--- /dev/null
+++ b/src/wrapper/jccoefct-8.c
@@ -0,0 +1,14 @@
+/*
+ * jccoefct-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jccoefct.c to support 8 bits of
+ * data precision.  jccoefct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jccoefct.c"
diff --git a/src/wrapper/jccolor-12.c b/src/wrapper/jccolor-12.c
new file mode 100644
index 000000000..8b66c2321
--- /dev/null
+++ b/src/wrapper/jccolor-12.c
@@ -0,0 +1,14 @@
+/*
+ * jccolor-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jccolor.c to support 9 to 12 bits of
+ * data precision.  jccolor.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jccolor.c"
diff --git a/src/wrapper/jccolor-16.c b/src/wrapper/jccolor-16.c
new file mode 100644
index 000000000..98db8eb50
--- /dev/null
+++ b/src/wrapper/jccolor-16.c
@@ -0,0 +1,14 @@
+/*
+ * jccolor-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jccolor.c to support 13 to 16 bits of
+ * data precision.  jccolor.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jccolor.c"
diff --git a/src/wrapper/jccolor-8.c b/src/wrapper/jccolor-8.c
new file mode 100644
index 000000000..5403b2fe3
--- /dev/null
+++ b/src/wrapper/jccolor-8.c
@@ -0,0 +1,14 @@
+/*
+ * jccolor-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jccolor.c to support 2 to 8 bits of
+ * data precision.  jccolor.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jccolor.c"
diff --git a/src/wrapper/jcdctmgr-12.c b/src/wrapper/jcdctmgr-12.c
new file mode 100644
index 000000000..6c5e5dfba
--- /dev/null
+++ b/src/wrapper/jcdctmgr-12.c
@@ -0,0 +1,14 @@
+/*
+ * jcdctmgr-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcdctmgr.c to support 12 bits of
+ * data precision.  jcdctmgr.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jcdctmgr.c"
diff --git a/src/wrapper/jcdctmgr-8.c b/src/wrapper/jcdctmgr-8.c
new file mode 100644
index 000000000..a2e1dcede
--- /dev/null
+++ b/src/wrapper/jcdctmgr-8.c
@@ -0,0 +1,14 @@
+/*
+ * jcdctmgr-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcdctmgr.c to support 8 bits of
+ * data precision.  jcdctmgr.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jcdctmgr.c"
diff --git a/src/wrapper/jcdiffct-12.c b/src/wrapper/jcdiffct-12.c
new file mode 100644
index 000000000..a32947481
--- /dev/null
+++ b/src/wrapper/jcdiffct-12.c
@@ -0,0 +1,14 @@
+/*
+ * jcdiffct-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcdiffct.c to support 9 to 12 bits of
+ * data precision.  jcdiffct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jcdiffct.c"
diff --git a/src/wrapper/jcdiffct-16.c b/src/wrapper/jcdiffct-16.c
new file mode 100644
index 000000000..5d6a545b9
--- /dev/null
+++ b/src/wrapper/jcdiffct-16.c
@@ -0,0 +1,14 @@
+/*
+ * jcdiffct-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcdiffct.c to support 13 to 16 bits of
+ * data precision.  jcdiffct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jcdiffct.c"
diff --git a/src/wrapper/jcdiffct-8.c b/src/wrapper/jcdiffct-8.c
new file mode 100644
index 000000000..dba423012
--- /dev/null
+++ b/src/wrapper/jcdiffct-8.c
@@ -0,0 +1,14 @@
+/*
+ * jcdiffct-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcdiffct.c to support 2 to 8 bits of
+ * data precision.  jcdiffct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jcdiffct.c"
diff --git a/src/wrapper/jclossls-12.c b/src/wrapper/jclossls-12.c
new file mode 100644
index 000000000..f4ab9a361
--- /dev/null
+++ b/src/wrapper/jclossls-12.c
@@ -0,0 +1,14 @@
+/*
+ * jclossls-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jclossls.c to support 9 to 12 bits of
+ * data precision.  jclossls.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jclossls.c"
diff --git a/src/wrapper/jclossls-16.c b/src/wrapper/jclossls-16.c
new file mode 100644
index 000000000..575666f61
--- /dev/null
+++ b/src/wrapper/jclossls-16.c
@@ -0,0 +1,14 @@
+/*
+ * jclossls-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jclossls.c to support 13 to 16 bits of
+ * data precision.  jclossls.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jclossls.c"
diff --git a/src/wrapper/jclossls-8.c b/src/wrapper/jclossls-8.c
new file mode 100644
index 000000000..71354eec7
--- /dev/null
+++ b/src/wrapper/jclossls-8.c
@@ -0,0 +1,14 @@
+/*
+ * jclossls-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jclossls.c to support 2 to 8 bits of
+ * data precision.  jclossls.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jclossls.c"
diff --git a/src/wrapper/jcmainct-12.c b/src/wrapper/jcmainct-12.c
new file mode 100644
index 000000000..c63cb4849
--- /dev/null
+++ b/src/wrapper/jcmainct-12.c
@@ -0,0 +1,14 @@
+/*
+ * jcmainct-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcmainct.c to support 9 to 12 bits of
+ * data precision.  jcmainct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jcmainct.c"
diff --git a/src/wrapper/jcmainct-16.c b/src/wrapper/jcmainct-16.c
new file mode 100644
index 000000000..8256afb93
--- /dev/null
+++ b/src/wrapper/jcmainct-16.c
@@ -0,0 +1,14 @@
+/*
+ * jcmainct-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcmainct.c to support 13 to 16 bits of
+ * data precision.  jcmainct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jcmainct.c"
diff --git a/src/wrapper/jcmainct-8.c b/src/wrapper/jcmainct-8.c
new file mode 100644
index 000000000..ffac92fde
--- /dev/null
+++ b/src/wrapper/jcmainct-8.c
@@ -0,0 +1,14 @@
+/*
+ * jcmainct-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcmainct.c to support 2 to 8 bits of
+ * data precision.  jcmainct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jcmainct.c"
diff --git a/src/wrapper/jcprepct-12.c b/src/wrapper/jcprepct-12.c
new file mode 100644
index 000000000..0970afd80
--- /dev/null
+++ b/src/wrapper/jcprepct-12.c
@@ -0,0 +1,14 @@
+/*
+ * jcprepct-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcprepct.c to support 9 to 12 bits of
+ * data precision.  jcprepct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jcprepct.c"
diff --git a/src/wrapper/jcprepct-16.c b/src/wrapper/jcprepct-16.c
new file mode 100644
index 000000000..92adbd8fa
--- /dev/null
+++ b/src/wrapper/jcprepct-16.c
@@ -0,0 +1,14 @@
+/*
+ * jcprepct-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcprepct.c to support 13 to 16 bits of
+ * data precision.  jcprepct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jcprepct.c"
diff --git a/src/wrapper/jcprepct-8.c b/src/wrapper/jcprepct-8.c
new file mode 100644
index 000000000..3616d9c88
--- /dev/null
+++ b/src/wrapper/jcprepct-8.c
@@ -0,0 +1,14 @@
+/*
+ * jcprepct-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcprepct.c to support 2 to 8 bits of
+ * data precision.  jcprepct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jcprepct.c"
diff --git a/src/wrapper/jcsample-12.c b/src/wrapper/jcsample-12.c
new file mode 100644
index 000000000..95110821a
--- /dev/null
+++ b/src/wrapper/jcsample-12.c
@@ -0,0 +1,14 @@
+/*
+ * jcsample-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcsample.c to support 9 to 12 bits of
+ * data precision.  jcsample.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jcsample.c"
diff --git a/src/wrapper/jcsample-16.c b/src/wrapper/jcsample-16.c
new file mode 100644
index 000000000..87fe293b8
--- /dev/null
+++ b/src/wrapper/jcsample-16.c
@@ -0,0 +1,14 @@
+/*
+ * jcsample-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcsample.c to support 13 to 16 bits of
+ * data precision.  jcsample.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jcsample.c"
diff --git a/src/wrapper/jcsample-8.c b/src/wrapper/jcsample-8.c
new file mode 100644
index 000000000..f3f6067e3
--- /dev/null
+++ b/src/wrapper/jcsample-8.c
@@ -0,0 +1,14 @@
+/*
+ * jcsample-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jcsample.c to support 2 to 8 bits of
+ * data precision.  jcsample.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jcsample.c"
diff --git a/src/wrapper/jdapistd-12.c b/src/wrapper/jdapistd-12.c
new file mode 100644
index 000000000..7fe49219d
--- /dev/null
+++ b/src/wrapper/jdapistd-12.c
@@ -0,0 +1,14 @@
+/*
+ * jdapistd-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdapistd.c to support 9 to 12 bits of
+ * data precision.  jdapistd.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jdapistd.c"
diff --git a/src/wrapper/jdapistd-16.c b/src/wrapper/jdapistd-16.c
new file mode 100644
index 000000000..31da5debd
--- /dev/null
+++ b/src/wrapper/jdapistd-16.c
@@ -0,0 +1,14 @@
+/*
+ * jdapistd-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdapistd.c to support 13 to 16 bits of
+ * data precision.  jdapistd.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jdapistd.c"
diff --git a/src/wrapper/jdapistd-8.c b/src/wrapper/jdapistd-8.c
new file mode 100644
index 000000000..31b256934
--- /dev/null
+++ b/src/wrapper/jdapistd-8.c
@@ -0,0 +1,14 @@
+/*
+ * jdapistd-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdapistd.c to support 2 to 8 bits of
+ * data precision.  jdapistd.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jdapistd.c"
diff --git a/src/wrapper/jdcoefct-12.c b/src/wrapper/jdcoefct-12.c
new file mode 100644
index 000000000..efeb53206
--- /dev/null
+++ b/src/wrapper/jdcoefct-12.c
@@ -0,0 +1,14 @@
+/*
+ * jdcoefct-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdcoefct.c to support 12 bits of
+ * data precision.  jdcoefct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jdcoefct.c"
diff --git a/src/wrapper/jdcoefct-8.c b/src/wrapper/jdcoefct-8.c
new file mode 100644
index 000000000..446cefcee
--- /dev/null
+++ b/src/wrapper/jdcoefct-8.c
@@ -0,0 +1,14 @@
+/*
+ * jdcoefct-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdcoefct.c to support 8 bits of
+ * data precision.  jdcoefct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jdcoefct.c"
diff --git a/src/wrapper/jdcolor-12.c b/src/wrapper/jdcolor-12.c
new file mode 100644
index 000000000..0054d22f2
--- /dev/null
+++ b/src/wrapper/jdcolor-12.c
@@ -0,0 +1,14 @@
+/*
+ * jdcolor-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdcolor.c to support 9 to 12 bits of
+ * data precision.  jdcolor.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jdcolor.c"
diff --git a/src/wrapper/jdcolor-16.c b/src/wrapper/jdcolor-16.c
new file mode 100644
index 000000000..e65ffa1ec
--- /dev/null
+++ b/src/wrapper/jdcolor-16.c
@@ -0,0 +1,14 @@
+/*
+ * jdcolor-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdcolor.c to support 13 to 16 bits of
+ * data precision.  jdcolor.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jdcolor.c"
diff --git a/src/wrapper/jdcolor-8.c b/src/wrapper/jdcolor-8.c
new file mode 100644
index 000000000..525e13e27
--- /dev/null
+++ b/src/wrapper/jdcolor-8.c
@@ -0,0 +1,14 @@
+/*
+ * jdcolor-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdcolor.c to support 2 to 8 bits of
+ * data precision.  jdcolor.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jdcolor.c"
diff --git a/src/wrapper/jddctmgr-12.c b/src/wrapper/jddctmgr-12.c
new file mode 100644
index 000000000..a6503ea2d
--- /dev/null
+++ b/src/wrapper/jddctmgr-12.c
@@ -0,0 +1,14 @@
+/*
+ * jddctmgr-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jddctmgr.c to support 12 bits of
+ * data precision.  jddctmgr.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jddctmgr.c"
diff --git a/src/wrapper/jddctmgr-8.c b/src/wrapper/jddctmgr-8.c
new file mode 100644
index 000000000..f61de79cd
--- /dev/null
+++ b/src/wrapper/jddctmgr-8.c
@@ -0,0 +1,14 @@
+/*
+ * jddctmgr-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jddctmgr.c to support 8 bits of
+ * data precision.  jddctmgr.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jddctmgr.c"
diff --git a/src/wrapper/jddiffct-12.c b/src/wrapper/jddiffct-12.c
new file mode 100644
index 000000000..a8b60f004
--- /dev/null
+++ b/src/wrapper/jddiffct-12.c
@@ -0,0 +1,14 @@
+/*
+ * jddiffct-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jddiffct.c to support 9 to 12 bits of
+ * data precision.  jddiffct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jddiffct.c"
diff --git a/src/wrapper/jddiffct-16.c b/src/wrapper/jddiffct-16.c
new file mode 100644
index 000000000..35277c828
--- /dev/null
+++ b/src/wrapper/jddiffct-16.c
@@ -0,0 +1,14 @@
+/*
+ * jddiffct-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jddiffct.c to support 13 to 16 bits of
+ * data precision.  jddiffct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jddiffct.c"
diff --git a/src/wrapper/jddiffct-8.c b/src/wrapper/jddiffct-8.c
new file mode 100644
index 000000000..8ff0731d1
--- /dev/null
+++ b/src/wrapper/jddiffct-8.c
@@ -0,0 +1,14 @@
+/*
+ * jddiffct-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jddiffct.c to support 2 to 8 bits of
+ * data precision.  jddiffct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jddiffct.c"
diff --git a/src/wrapper/jdlossls-12.c b/src/wrapper/jdlossls-12.c
new file mode 100644
index 000000000..436636867
--- /dev/null
+++ b/src/wrapper/jdlossls-12.c
@@ -0,0 +1,14 @@
+/*
+ * jdlossls-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdlossls.c to support 9 to 12 bits of
+ * data precision.  jdlossls.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jdlossls.c"
diff --git a/src/wrapper/jdlossls-16.c b/src/wrapper/jdlossls-16.c
new file mode 100644
index 000000000..89697b26d
--- /dev/null
+++ b/src/wrapper/jdlossls-16.c
@@ -0,0 +1,14 @@
+/*
+ * jdlossls-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdlossls.c to support 13 to 16 bits of
+ * data precision.  jdlossls.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jdlossls.c"
diff --git a/src/wrapper/jdlossls-8.c b/src/wrapper/jdlossls-8.c
new file mode 100644
index 000000000..0bce5f432
--- /dev/null
+++ b/src/wrapper/jdlossls-8.c
@@ -0,0 +1,14 @@
+/*
+ * jdlossls-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdlossls.c to support 2 to 8 bits of
+ * data precision.  jdlossls.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jdlossls.c"
diff --git a/src/wrapper/jdmainct-12.c b/src/wrapper/jdmainct-12.c
new file mode 100644
index 000000000..99deae350
--- /dev/null
+++ b/src/wrapper/jdmainct-12.c
@@ -0,0 +1,14 @@
+/*
+ * jdmainct-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdmainct.c to support 9 to 12 bits of
+ * data precision.  jdmainct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jdmainct.c"
diff --git a/src/wrapper/jdmainct-16.c b/src/wrapper/jdmainct-16.c
new file mode 100644
index 000000000..11164f5e5
--- /dev/null
+++ b/src/wrapper/jdmainct-16.c
@@ -0,0 +1,14 @@
+/*
+ * jdmainct-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdmainct.c to support 13 to 16 bits of
+ * data precision.  jdmainct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jdmainct.c"
diff --git a/src/wrapper/jdmainct-8.c b/src/wrapper/jdmainct-8.c
new file mode 100644
index 000000000..5f1bb6bfa
--- /dev/null
+++ b/src/wrapper/jdmainct-8.c
@@ -0,0 +1,14 @@
+/*
+ * jdmainct-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdmainct.c to support 2 to 8 bits of
+ * data precision.  jdmainct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jdmainct.c"
diff --git a/src/wrapper/jdmerge-12.c b/src/wrapper/jdmerge-12.c
new file mode 100644
index 000000000..bbf3c3723
--- /dev/null
+++ b/src/wrapper/jdmerge-12.c
@@ -0,0 +1,14 @@
+/*
+ * jdmerge-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdmerge.c to support 12 bits of
+ * data precision.  jdmerge.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jdmerge.c"
diff --git a/src/wrapper/jdmerge-8.c b/src/wrapper/jdmerge-8.c
new file mode 100644
index 000000000..5faea11dd
--- /dev/null
+++ b/src/wrapper/jdmerge-8.c
@@ -0,0 +1,14 @@
+/*
+ * jdmerge-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdmerge.c to support 8 bits of
+ * data precision.  jdmerge.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jdmerge.c"
diff --git a/src/wrapper/jdpostct-12.c b/src/wrapper/jdpostct-12.c
new file mode 100644
index 000000000..dadda1754
--- /dev/null
+++ b/src/wrapper/jdpostct-12.c
@@ -0,0 +1,14 @@
+/*
+ * jdpostct-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdpostct.c to support 9 to 12 bits of
+ * data precision.  jdpostct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jdpostct.c"
diff --git a/src/wrapper/jdpostct-16.c b/src/wrapper/jdpostct-16.c
new file mode 100644
index 000000000..12db968c1
--- /dev/null
+++ b/src/wrapper/jdpostct-16.c
@@ -0,0 +1,14 @@
+/*
+ * jdpostct-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdpostct.c to support 13 to 16 bits of
+ * data precision.  jdpostct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jdpostct.c"
diff --git a/src/wrapper/jdpostct-8.c b/src/wrapper/jdpostct-8.c
new file mode 100644
index 000000000..5227d363d
--- /dev/null
+++ b/src/wrapper/jdpostct-8.c
@@ -0,0 +1,14 @@
+/*
+ * jdpostct-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdpostct.c to support 2 to 8 bits of
+ * data precision.  jdpostct.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jdpostct.c"
diff --git a/src/wrapper/jdsample-12.c b/src/wrapper/jdsample-12.c
new file mode 100644
index 000000000..910764d71
--- /dev/null
+++ b/src/wrapper/jdsample-12.c
@@ -0,0 +1,14 @@
+/*
+ * jdsample-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdsample.c to support 9 to 12 bits of
+ * data precision.  jdsample.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jdsample.c"
diff --git a/src/wrapper/jdsample-16.c b/src/wrapper/jdsample-16.c
new file mode 100644
index 000000000..d39127a03
--- /dev/null
+++ b/src/wrapper/jdsample-16.c
@@ -0,0 +1,14 @@
+/*
+ * jdsample-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdsample.c to support 13 to 16 bits of
+ * data precision.  jdsample.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jdsample.c"
diff --git a/src/wrapper/jdsample-8.c b/src/wrapper/jdsample-8.c
new file mode 100644
index 000000000..29ad67a21
--- /dev/null
+++ b/src/wrapper/jdsample-8.c
@@ -0,0 +1,14 @@
+/*
+ * jdsample-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jdsample.c to support 2 to 8 bits of
+ * data precision.  jdsample.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jdsample.c"
diff --git a/src/wrapper/jfdctfst-12.c b/src/wrapper/jfdctfst-12.c
new file mode 100644
index 000000000..0b41d92b8
--- /dev/null
+++ b/src/wrapper/jfdctfst-12.c
@@ -0,0 +1,14 @@
+/*
+ * jfdctfst-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jfdctfst.c to support 12 bits of
+ * data precision.  jfdctfst.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jfdctfst.c"
diff --git a/src/wrapper/jfdctfst-8.c b/src/wrapper/jfdctfst-8.c
new file mode 100644
index 000000000..0296ce0ec
--- /dev/null
+++ b/src/wrapper/jfdctfst-8.c
@@ -0,0 +1,14 @@
+/*
+ * jfdctfst-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jfdctfst.c to support 8 bits of
+ * data precision.  jfdctfst.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jfdctfst.c"
diff --git a/src/wrapper/jfdctint-12.c b/src/wrapper/jfdctint-12.c
new file mode 100644
index 000000000..42ec3ef71
--- /dev/null
+++ b/src/wrapper/jfdctint-12.c
@@ -0,0 +1,14 @@
+/*
+ * jfdctint-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jfdctint.c to support 12 bits of
+ * data precision.  jfdctint.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jfdctint.c"
diff --git a/src/wrapper/jfdctint-8.c b/src/wrapper/jfdctint-8.c
new file mode 100644
index 000000000..3de9390e7
--- /dev/null
+++ b/src/wrapper/jfdctint-8.c
@@ -0,0 +1,14 @@
+/*
+ * jfdctint-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jfdctint.c to support 8 bits of
+ * data precision.  jfdctint.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jfdctint.c"
diff --git a/src/wrapper/jidctflt-12.c b/src/wrapper/jidctflt-12.c
new file mode 100644
index 000000000..f298d223f
--- /dev/null
+++ b/src/wrapper/jidctflt-12.c
@@ -0,0 +1,14 @@
+/*
+ * jidctflt-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jidctflt.c to support 12 bits of
+ * data precision.  jidctflt.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jidctflt.c"
diff --git a/src/wrapper/jidctflt-8.c b/src/wrapper/jidctflt-8.c
new file mode 100644
index 000000000..23d915378
--- /dev/null
+++ b/src/wrapper/jidctflt-8.c
@@ -0,0 +1,14 @@
+/*
+ * jidctflt-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jidctflt.c to support 8 bits of
+ * data precision.  jidctflt.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jidctflt.c"
diff --git a/src/wrapper/jidctfst-12.c b/src/wrapper/jidctfst-12.c
new file mode 100644
index 000000000..cb3fcd15a
--- /dev/null
+++ b/src/wrapper/jidctfst-12.c
@@ -0,0 +1,14 @@
+/*
+ * jidctfst-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jidctfst.c to support 12 bits of
+ * data precision.  jidctfst.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jidctfst.c"
diff --git a/src/wrapper/jidctfst-8.c b/src/wrapper/jidctfst-8.c
new file mode 100644
index 000000000..26f668189
--- /dev/null
+++ b/src/wrapper/jidctfst-8.c
@@ -0,0 +1,14 @@
+/*
+ * jidctfst-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jidctfst.c to support 8 bits of
+ * data precision.  jidctfst.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jidctfst.c"
diff --git a/src/wrapper/jidctint-12.c b/src/wrapper/jidctint-12.c
new file mode 100644
index 000000000..f985fc451
--- /dev/null
+++ b/src/wrapper/jidctint-12.c
@@ -0,0 +1,14 @@
+/*
+ * jidctint-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jidctint.c to support 12 bits of
+ * data precision.  jidctint.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jidctint.c"
diff --git a/src/wrapper/jidctint-8.c b/src/wrapper/jidctint-8.c
new file mode 100644
index 000000000..fda7fe300
--- /dev/null
+++ b/src/wrapper/jidctint-8.c
@@ -0,0 +1,14 @@
+/*
+ * jidctint-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jidctint.c to support 8 bits of
+ * data precision.  jidctint.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jidctint.c"
diff --git a/src/wrapper/jidctred-12.c b/src/wrapper/jidctred-12.c
new file mode 100644
index 000000000..832169afe
--- /dev/null
+++ b/src/wrapper/jidctred-12.c
@@ -0,0 +1,14 @@
+/*
+ * jidctred-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jidctred.c to support 12 bits of
+ * data precision.  jidctred.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jidctred.c"
diff --git a/src/wrapper/jidctred-8.c b/src/wrapper/jidctred-8.c
new file mode 100644
index 000000000..0957b0d37
--- /dev/null
+++ b/src/wrapper/jidctred-8.c
@@ -0,0 +1,14 @@
+/*
+ * jidctred-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jidctred.c to support 8 bits of
+ * data precision.  jidctred.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jidctred.c"
diff --git a/src/wrapper/jquant1-12.c b/src/wrapper/jquant1-12.c
new file mode 100644
index 000000000..7970c3d67
--- /dev/null
+++ b/src/wrapper/jquant1-12.c
@@ -0,0 +1,14 @@
+/*
+ * jquant1-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jquant1.c to support 12 bits of
+ * data precision.  jquant1.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jquant1.c"
diff --git a/src/wrapper/jquant1-8.c b/src/wrapper/jquant1-8.c
new file mode 100644
index 000000000..211f92212
--- /dev/null
+++ b/src/wrapper/jquant1-8.c
@@ -0,0 +1,14 @@
+/*
+ * jquant1-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jquant1.c to support 8 bits of
+ * data precision.  jquant1.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jquant1.c"
diff --git a/src/wrapper/jquant2-12.c b/src/wrapper/jquant2-12.c
new file mode 100644
index 000000000..566e16264
--- /dev/null
+++ b/src/wrapper/jquant2-12.c
@@ -0,0 +1,14 @@
+/*
+ * jquant2-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jquant2.c to support 12 bits of
+ * data precision.  jquant2.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jquant2.c"
diff --git a/src/wrapper/jquant2-8.c b/src/wrapper/jquant2-8.c
new file mode 100644
index 000000000..30cfe17ce
--- /dev/null
+++ b/src/wrapper/jquant2-8.c
@@ -0,0 +1,14 @@
+/*
+ * jquant2-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jquant2.c to support 8 bits of
+ * data precision.  jquant2.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jquant2.c"
diff --git a/src/wrapper/jutils-12.c b/src/wrapper/jutils-12.c
new file mode 100644
index 000000000..6620aa2d7
--- /dev/null
+++ b/src/wrapper/jutils-12.c
@@ -0,0 +1,14 @@
+/*
+ * jutils-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jutils.c to support 9 to 12 bits of
+ * data precision.  jutils.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../jutils.c"
diff --git a/src/wrapper/jutils-16.c b/src/wrapper/jutils-16.c
new file mode 100644
index 000000000..2df48891d
--- /dev/null
+++ b/src/wrapper/jutils-16.c
@@ -0,0 +1,14 @@
+/*
+ * jutils-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jutils.c to support 13 to 16 bits of
+ * data precision.  jutils.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../jutils.c"
diff --git a/src/wrapper/jutils-8.c b/src/wrapper/jutils-8.c
new file mode 100644
index 000000000..3c84956c3
--- /dev/null
+++ b/src/wrapper/jutils-8.c
@@ -0,0 +1,14 @@
+/*
+ * jutils-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling jutils.c to support 2 to 8 bits of
+ * data precision.  jutils.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../jutils.c"
diff --git a/src/wrapper/rdcolmap-12.c b/src/wrapper/rdcolmap-12.c
new file mode 100644
index 000000000..93d8b6c50
--- /dev/null
+++ b/src/wrapper/rdcolmap-12.c
@@ -0,0 +1,14 @@
+/*
+ * rdcolmap-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling rdcolmap.c to support 12 bits of
+ * data precision.  rdcolmap.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../rdcolmap.c"
diff --git a/src/wrapper/rdcolmap-8.c b/src/wrapper/rdcolmap-8.c
new file mode 100644
index 000000000..688cf256a
--- /dev/null
+++ b/src/wrapper/rdcolmap-8.c
@@ -0,0 +1,14 @@
+/*
+ * rdcolmap-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling rdcolmap.c to support 8 bits of
+ * data precision.  rdcolmap.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../rdcolmap.c"
diff --git a/src/wrapper/rdppm-12.c b/src/wrapper/rdppm-12.c
new file mode 100644
index 000000000..6ed96c090
--- /dev/null
+++ b/src/wrapper/rdppm-12.c
@@ -0,0 +1,14 @@
+/*
+ * rdppm-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling rdppm.c to support 9 to 12 bits of
+ * data precision.  rdppm.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../rdppm.c"
diff --git a/src/wrapper/rdppm-16.c b/src/wrapper/rdppm-16.c
new file mode 100644
index 000000000..710c08869
--- /dev/null
+++ b/src/wrapper/rdppm-16.c
@@ -0,0 +1,14 @@
+/*
+ * rdppm-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling rdppm.c to support 13 to 16 bits of
+ * data precision.  rdppm.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../rdppm.c"
diff --git a/src/wrapper/rdppm-8.c b/src/wrapper/rdppm-8.c
new file mode 100644
index 000000000..50ce3884c
--- /dev/null
+++ b/src/wrapper/rdppm-8.c
@@ -0,0 +1,14 @@
+/*
+ * rdppm-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling rdppm.c to support 2 to 8 bits of
+ * data precision.  rdppm.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../rdppm.c"
diff --git a/src/wrapper/template.c b/src/wrapper/template.c
new file mode 100644
index 000000000..df7f44633
--- /dev/null
+++ b/src/wrapper/template.c
@@ -0,0 +1,14 @@
+/*
+ * @WRAPPER_FILE@
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling @FILE@ to support @BITS_RANGE@ bits of
+ * data precision.  @FILE@ should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  @BITS@
+
+#include "../@FILE@"
diff --git a/src/wrapper/wrgif-12.c b/src/wrapper/wrgif-12.c
new file mode 100644
index 000000000..1e1ceeebc
--- /dev/null
+++ b/src/wrapper/wrgif-12.c
@@ -0,0 +1,14 @@
+/*
+ * wrgif-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling wrgif.c to support 12 bits of
+ * data precision.  wrgif.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../wrgif.c"
diff --git a/src/wrapper/wrgif-8.c b/src/wrapper/wrgif-8.c
new file mode 100644
index 000000000..a0045d726
--- /dev/null
+++ b/src/wrapper/wrgif-8.c
@@ -0,0 +1,14 @@
+/*
+ * wrgif-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling wrgif.c to support 8 bits of
+ * data precision.  wrgif.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../wrgif.c"
diff --git a/src/wrapper/wrppm-12.c b/src/wrapper/wrppm-12.c
new file mode 100644
index 000000000..8419c9770
--- /dev/null
+++ b/src/wrapper/wrppm-12.c
@@ -0,0 +1,14 @@
+/*
+ * wrppm-12.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling wrppm.c to support 9 to 12 bits of
+ * data precision.  wrppm.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  12
+
+#include "../wrppm.c"
diff --git a/src/wrapper/wrppm-16.c b/src/wrapper/wrppm-16.c
new file mode 100644
index 000000000..2b6c14ea9
--- /dev/null
+++ b/src/wrapper/wrppm-16.c
@@ -0,0 +1,14 @@
+/*
+ * wrppm-16.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling wrppm.c to support 13 to 16 bits of
+ * data precision.  wrppm.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  16
+
+#include "../wrppm.c"
diff --git a/src/wrapper/wrppm-8.c b/src/wrapper/wrppm-8.c
new file mode 100644
index 000000000..908dc3f80
--- /dev/null
+++ b/src/wrapper/wrppm-8.c
@@ -0,0 +1,14 @@
+/*
+ * wrppm-8.c
+ *
+ * Copyright (C) 2025, D. R. Commander.
+ * For conditions of distribution and use, see the accompanying README.ijg
+ * file.
+ *
+ * This file is a wrapper for compiling wrppm.c to support 2 to 8 bits of
+ * data precision.  wrppm.c should not be compiled directly.
+ */
+
+#define BITS_IN_JSAMPLE  8
+
+#include "../wrppm.c"
