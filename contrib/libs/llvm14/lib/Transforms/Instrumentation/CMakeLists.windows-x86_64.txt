# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

add_library(lib-Transforms-Instrumentation)


target_compile_options(lib-Transforms-Instrumentation PRIVATE
  $<IF:$<CXX_COMPILER_ID:MSVC>,,-Wno-everything>
)

target_include_directories(lib-Transforms-Instrumentation PRIVATE
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation
)

target_link_libraries(lib-Transforms-Instrumentation PUBLIC
  contrib-libs-cxxsupp
  contrib-libs-llvm14
  libs-llvm14-include
  llvm14-lib-Analysis
  llvm14-lib-IR
  llvm14-lib-MC
  llvm14-lib-ProfileData
  llvm14-lib-Support
  lib-Transforms-Utils
)

target_sources(lib-Transforms-Instrumentation PRIVATE
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/AddressSanitizer.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/BoundsChecking.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/CGProfile.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/ControlHeightReduction.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/GCOVProfiling.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/IndirectCallPromotion.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/InstrOrderFile.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/InstrProfiling.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/Instrumentation.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/MemProfiler.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/MemorySanitizer.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/PGOInstrumentation.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/PGOMemOPSizeOpt.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/PoisonChecking.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/SanitizerCoverage.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/ThreadSanitizer.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm14/lib/Transforms/Instrumentation/ValueProfileCollector.cpp
)

