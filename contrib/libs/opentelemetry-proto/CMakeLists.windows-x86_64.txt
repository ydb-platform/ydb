# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

get_built_tool_path(
  TOOL_grpc_cpp_bin
  TOOL_grpc_cpp_dependency
  contrib/tools/protoc/plugins/grpc_cpp
  grpc_cpp
)

get_built_tool_path(
  TOOL_protoc_bin
  TOOL_protoc_dependency
  contrib/tools/protoc/bin
  protoc
)

get_built_tool_path(
  TOOL_cpp_styleguide_bin
  TOOL_cpp_styleguide_dependency
  contrib/tools/protoc/plugins/cpp_styleguide
  cpp_styleguide
)

add_library(contrib-libs-opentelemetry-proto)


set_property(TARGET contrib-libs-opentelemetry-proto PROPERTY PROTO_NAMESPACE
  contrib/libs/opentelemetry-proto
)

set_property(TARGET contrib-libs-opentelemetry-proto PROPERTY PROTOC_EXTRA_OUTS
  .grpc.pb.cc
  .grpc.pb.h
)

target_include_directories(contrib-libs-opentelemetry-proto PUBLIC
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto
)

target_link_libraries(contrib-libs-opentelemetry-proto PUBLIC
  contrib-libs-cxxsupp
  yutil
  contrib-libs-grpc
  contrib-libs-protobuf
)

target_proto_messages(contrib-libs-opentelemetry-proto PRIVATE
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/collector/logs/v1/logs_service.proto
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/collector/metrics/v1/metrics_service.proto
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/collector/profiles/v1experimental/profiles_service.proto
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/collector/trace/v1/trace_service.proto
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/common/v1/common.proto
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/logs/v1/logs.proto
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/metrics/v1/metrics.proto
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/profiles/v1experimental/pprofextended.proto
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/profiles/v1experimental/profiles.proto
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/resource/v1/resource.proto
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/trace/v1/trace.proto
)

target_sources(contrib-libs-opentelemetry-proto PRIVATE
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/collector/logs/v1/logs_service.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/collector/logs/v1/logs_service.grpc.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/collector/metrics/v1/metrics_service.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/collector/metrics/v1/metrics_service.grpc.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/collector/profiles/v1experimental/profiles_service.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/collector/profiles/v1experimental/profiles_service.grpc.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/collector/trace/v1/trace_service.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/collector/trace/v1/trace_service.grpc.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/common/v1/common.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/common/v1/common.grpc.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/logs/v1/logs.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/logs/v1/logs.grpc.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/metrics/v1/metrics.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/metrics/v1/metrics.grpc.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/profiles/v1experimental/pprofextended.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/profiles/v1experimental/pprofextended.grpc.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/profiles/v1experimental/profiles.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/profiles/v1experimental/profiles.grpc.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/resource/v1/resource.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/resource/v1/resource.grpc.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/trace/v1/trace.pb.h
  ${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto/opentelemetry/proto/trace/v1/trace.grpc.pb.h
)


target_proto_outs(contrib-libs-opentelemetry-proto
  --cpp_out=${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto
  --cpp_styleguide_out=${PROJECT_BINARY_DIR}/contrib/libs/opentelemetry-proto
)

target_proto_addincls(contrib-libs-opentelemetry-proto
  ./contrib/libs/opentelemetry-proto
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto
  ${PROJECT_BINARY_DIR}
  ${PROJECT_SOURCE_DIR}
  ${PROJECT_SOURCE_DIR}/contrib/libs/opentelemetry-proto
  ${PROJECT_SOURCE_DIR}/contrib/libs/protobuf/src
  ${PROJECT_BINARY_DIR}
  ${PROJECT_SOURCE_DIR}/contrib/libs/protobuf/src
)

target_proto_plugin(contrib-libs-opentelemetry-proto
  grpc_cpp
  ${PROJECT_BINARY_DIR}/contrib/tools/protoc/plugins/grpc_cpp/grpc_cpp.exe
)
