From c767a91536942a39497afc65c1e320852d3a0c0f Mon Sep 17 00:00:00 2001
From: "Isaev, Ilya" <ilya.isaev@intel.com>
Date: Thu, 31 Oct 2024 17:28:58 +0100
Subject: [PATCH] Fix flow_graph tests build when compiling with GCC 13.3

Signed-off-by: Isaev, Ilya <ilya.isaev@intel.com>
---
 include/oneapi/tbb/detail/_flow_graph_impl.h | 2 +-
 include/oneapi/tbb/flow_graph.h              | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/include/oneapi/tbb/detail/_flow_graph_impl.h b/include/oneapi/tbb/detail/_flow_graph_impl.h
index 19e00a8ef1..55063b93e1 100644
--- a/include/oneapi/tbb/detail/_flow_graph_impl.h
+++ b/include/oneapi/tbb/detail/_flow_graph_impl.h
@@ -347,7 +347,7 @@ class graph : no_copy, public graph_proxy {
         caught_exception = false;
         try_call([this] {
             my_task_arena->execute([this] {
-                wait(my_wait_context_vertex.get_context(), *my_context);
+                d1::wait(my_wait_context_vertex.get_context(), *my_context);
             });
             cancelled = my_context->is_group_execution_cancelled();
         }).on_exception([this] {
diff --git a/include/oneapi/tbb/flow_graph.h b/include/oneapi/tbb/flow_graph.h
index 20916fa7c2..5b438faabf 100644
--- a/include/oneapi/tbb/flow_graph.h
+++ b/include/oneapi/tbb/flow_graph.h
@@ -305,7 +305,7 @@ class receiver {
         bool res = internal_try_put(t, message_metainfo{message_metainfo::waiters_type{&msg_wait_vertex}});
         if (res) {
             __TBB_ASSERT(graph_reference().my_context != nullptr, "No wait_context associated with the Flow Graph");
-            wait(msg_wait_vertex.get_context(), *graph_reference().my_context);
+            d1::wait(msg_wait_vertex.get_context(), *graph_reference().my_context);
         }
         return res;
     }
