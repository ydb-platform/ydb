{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2017-10-11",
    "endpointPrefix":"chatbot",
    "jsonVersion":"1.1",
    "protocol":"rest-json",
    "serviceFullName":"AWS Chatbot",
    "serviceId":"chatbot",
    "signatureVersion":"v4",
    "uid":"chatbot-2017-10-11"
  },
  "operations":{
    "CreateChimeWebhookConfiguration":{
      "name":"CreateChimeWebhookConfiguration",
      "http":{
        "method":"POST",
        "requestUri":"/create-chime-webhook-configuration",
        "responseCode":201
      },
      "input":{"shape":"CreateChimeWebhookConfigurationRequest"},
      "output":{"shape":"CreateChimeWebhookConfigurationResult"},
      "errors":[
        {"shape":"InvalidParameterException"},
        {"shape":"LimitExceededException"},
        {"shape":"InvalidRequestException"},
        {"shape":"CreateChimeWebhookConfigurationException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"Creates Chime Webhook Configuration"
    },
    "CreateMicrosoftTeamsChannelConfiguration":{
      "name":"CreateMicrosoftTeamsChannelConfiguration",
      "http":{
        "method":"POST",
        "requestUri":"/create-ms-teams-channel-configuration",
        "responseCode":201
      },
      "input":{"shape":"CreateTeamsChannelConfigurationRequest"},
      "output":{"shape":"CreateTeamsChannelConfigurationResult"},
      "errors":[
        {"shape":"InvalidParameterException"},
        {"shape":"LimitExceededException"},
        {"shape":"InvalidRequestException"},
        {"shape":"CreateTeamsChannelConfigurationException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"Creates MS Teams Channel Configuration"
    },
    "CreateSlackChannelConfiguration":{
      "name":"CreateSlackChannelConfiguration",
      "http":{
        "method":"POST",
        "requestUri":"/create-slack-channel-configuration",
        "responseCode":201
      },
      "input":{"shape":"CreateSlackChannelConfigurationRequest"},
      "output":{"shape":"CreateSlackChannelConfigurationResult"},
      "errors":[
        {"shape":"InvalidParameterException"},
        {"shape":"LimitExceededException"},
        {"shape":"InvalidRequestException"},
        {"shape":"CreateSlackChannelConfigurationException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"Creates Slack Channel Configuration"
    },
    "DeleteChimeWebhookConfiguration":{
      "name":"DeleteChimeWebhookConfiguration",
      "http":{
        "method":"POST",
        "requestUri":"/delete-chime-webhook-configuration",
        "responseCode":204
      },
      "input":{"shape":"DeleteChimeWebhookConfigurationRequest"},
      "output":{"shape":"DeleteChimeWebhookConfigurationResult"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidRequestException"},
        {"shape":"DeleteChimeWebhookConfigurationException"}
      ],
      "documentation":"Deletes a Chime Webhook Configuration"
    },
    "DeleteMicrosoftTeamsChannelConfiguration":{
      "name":"DeleteMicrosoftTeamsChannelConfiguration",
      "http":{
        "method":"POST",
        "requestUri":"/delete-ms-teams-channel-configuration",
        "responseCode":204
      },
      "input":{"shape":"DeleteTeamsChannelConfigurationRequest"},
      "output":{"shape":"DeleteTeamsChannelConfigurationResult"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidRequestException"},
        {"shape":"DeleteTeamsChannelConfigurationException"}
      ],
      "documentation":"Deletes MS Teams Channel Configuration"
    },
    "DeleteMicrosoftTeamsConfiguredTeam":{
      "name":"DeleteMicrosoftTeamsConfiguredTeam",
      "http":{
        "method":"POST",
        "requestUri":"/delete-ms-teams-configured-teams",
        "responseCode":204
      },
      "input":{"shape":"DeleteTeamsConfiguredTeamRequest"},
      "output":{"shape":"DeleteTeamsConfiguredTeamResult"},
      "errors":[
        {"shape":"InvalidParameterException"},
        {"shape":"DeleteTeamsConfiguredTeamException"}
      ],
      "documentation":"Deletes the Microsoft Teams team authorization allowing for channels to be configured in that Microsoft Teams team. Note that the Microsoft Teams team must have no channels configured to remove it."
    },
    "DeleteMicrosoftTeamsUserIdentity":{
      "name":"DeleteMicrosoftTeamsUserIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/delete-ms-teams-user-identity",
        "responseCode":204
      },
      "input":{"shape":"DeleteMicrosoftTeamsUserIdentityRequest"},
      "output":{"shape":"DeleteMicrosoftTeamsUserIdentityResult"},
      "errors":[
        {"shape":"InvalidParameterException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"DeleteMicrosoftTeamsUserIdentityException"}
      ],
      "documentation":"Deletes a Teams user identity"
    },
    "DeleteSlackChannelConfiguration":{
      "name":"DeleteSlackChannelConfiguration",
      "http":{
        "method":"POST",
        "requestUri":"/delete-slack-channel-configuration",
        "responseCode":204
      },
      "input":{"shape":"DeleteSlackChannelConfigurationRequest"},
      "output":{"shape":"DeleteSlackChannelConfigurationResult"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidRequestException"},
        {"shape":"DeleteSlackChannelConfigurationException"}
      ],
      "documentation":"Deletes Slack Channel Configuration"
    },
    "DeleteSlackUserIdentity":{
      "name":"DeleteSlackUserIdentity",
      "http":{
        "method":"POST",
        "requestUri":"/delete-slack-user-identity",
        "responseCode":204
      },
      "input":{"shape":"DeleteSlackUserIdentityRequest"},
      "output":{"shape":"DeleteSlackUserIdentityResult"},
      "errors":[
        {"shape":"InvalidParameterException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"DeleteSlackUserIdentityException"}
      ],
      "documentation":"Deletes a Slack user identity"
    },
    "DeleteSlackWorkspaceAuthorization":{
      "name":"DeleteSlackWorkspaceAuthorization",
      "http":{
        "method":"POST",
        "requestUri":"/delete-slack-workspace-authorization",
        "responseCode":204
      },
      "input":{"shape":"DeleteSlackWorkspaceAuthorizationRequest"},
      "output":{"shape":"DeleteSlackWorkspaceAuthorizationResult"},
      "errors":[
        {"shape":"InvalidParameterException"},
        {"shape":"DeleteSlackWorkspaceAuthorizationFault"}
      ],
      "documentation":"Deletes the Slack workspace authorization that allows channels to be configured in that workspace. This requires all configured channels in the workspace to be deleted."
    },
    "DescribeChimeWebhookConfigurations":{
      "name":"DescribeChimeWebhookConfigurations",
      "http":{
        "method":"POST",
        "requestUri":"/describe-chime-webhook-configurations",
        "responseCode":200
      },
      "input":{"shape":"DescribeChimeWebhookConfigurationsRequest"},
      "output":{"shape":"DescribeChimeWebhookConfigurationsResult"},
      "errors":[
        {"shape":"DescribeChimeWebhookConfigurationsException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidRequestException"}
      ],
      "documentation":"Lists Chime Webhook Configurations optionally filtered by ChatConfigurationArn"
    },
    "DescribeSlackChannelConfigurations":{
      "name":"DescribeSlackChannelConfigurations",
      "http":{
        "method":"POST",
        "requestUri":"/describe-slack-channel-configurations",
        "responseCode":200
      },
      "input":{"shape":"DescribeSlackChannelConfigurationsRequest"},
      "output":{"shape":"DescribeSlackChannelConfigurationsResult"},
      "errors":[
        {"shape":"DescribeSlackChannelConfigurationsException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidRequestException"}
      ],
      "documentation":"Lists Slack Channel Configurations optionally filtered by ChatConfigurationArn"
    },
    "DescribeSlackUserIdentities":{
      "name":"DescribeSlackUserIdentities",
      "http":{
        "method":"POST",
        "requestUri":"/describe-slack-user-identities",
        "responseCode":200
      },
      "input":{"shape":"DescribeSlackUserIdentitiesRequest"},
      "output":{"shape":"DescribeSlackUserIdentitiesResult"},
      "errors":[
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidRequestException"},
        {"shape":"DescribeSlackUserIdentitiesException"}
      ],
      "documentation":"Lists all Slack user identities with a mapped role."
    },
    "DescribeSlackWorkspaces":{
      "name":"DescribeSlackWorkspaces",
      "http":{
        "method":"POST",
        "requestUri":"/describe-slack-workspaces",
        "responseCode":200
      },
      "input":{"shape":"DescribeSlackWorkspacesRequest"},
      "output":{"shape":"DescribeSlackWorkspacesResult"},
      "errors":[
        {"shape":"DescribeSlackWorkspacesException"},
        {"shape":"InvalidRequestException"},
        {"shape":"InvalidParameterException"}
      ],
      "documentation":"Lists all authorized Slack Workspaces for AWS Account"
    },
    "GetAccountPreferences":{
      "name":"GetAccountPreferences",
      "http":{
        "method":"POST",
        "requestUri":"/get-account-preferences",
        "responseCode":200
      },
      "input":{"shape":"GetAccountPreferencesRequest"},
      "output":{"shape":"GetAccountPreferencesResult"},
      "errors":[
        {"shape":"GetAccountPreferencesException"},
        {"shape":"InvalidRequestException"}
      ],
      "documentation":"Get Chatbot account level preferences"
    },
    "GetMicrosoftTeamsChannelConfiguration":{
      "name":"GetMicrosoftTeamsChannelConfiguration",
      "http":{
        "method":"POST",
        "requestUri":"/get-ms-teams-channel-configuration",
        "responseCode":200
      },
      "input":{"shape":"GetTeamsChannelConfigurationRequest"},
      "output":{"shape":"GetTeamsChannelConfigurationResult"},
      "errors":[
        {"shape":"GetTeamsChannelConfigurationException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidRequestException"}
      ],
      "documentation":"Get a single MS Teams Channel Configurations"
    },
    "ListMicrosoftTeamsChannelConfigurations":{
      "name":"ListMicrosoftTeamsChannelConfigurations",
      "http":{
        "method":"POST",
        "requestUri":"/list-ms-teams-channel-configurations",
        "responseCode":200
      },
      "input":{"shape":"ListTeamsChannelConfigurationsRequest"},
      "output":{"shape":"ListTeamsChannelConfigurationsResult"},
      "errors":[
        {"shape":"ListTeamsChannelConfigurationsException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidRequestException"}
      ],
      "documentation":"Lists MS Teams Channel Configurations optionally filtered by TeamId"
    },
    "ListMicrosoftTeamsConfiguredTeams":{
      "name":"ListMicrosoftTeamsConfiguredTeams",
      "http":{
        "method":"POST",
        "requestUri":"/list-ms-teams-configured-teams",
        "responseCode":200
      },
      "input":{"shape":"ListMicrosoftTeamsConfiguredTeamsRequest"},
      "output":{"shape":"ListMicrosoftTeamsConfiguredTeamsResult"},
      "errors":[
        {"shape":"ListMicrosoftTeamsConfiguredTeamsException"},
        {"shape":"InvalidRequestException"},
        {"shape":"InvalidParameterException"}
      ],
      "documentation":"Lists all authorized MS teams for AWS Account"
    },
    "ListMicrosoftTeamsUserIdentities":{
      "name":"ListMicrosoftTeamsUserIdentities",
      "http":{
        "method":"POST",
        "requestUri":"/list-ms-teams-user-identities",
        "responseCode":200
      },
      "input":{"shape":"ListMicrosoftTeamsUserIdentitiesRequest"},
      "output":{"shape":"ListMicrosoftTeamsUserIdentitiesResult"},
      "errors":[
        {"shape":"ListMicrosoftTeamsUserIdentitiesException"},
        {"shape":"InvalidRequestException"},
        {"shape":"InvalidParameterException"}
      ],
      "documentation":"Lists all Microsoft Teams user identities with a mapped role."
    },
    "UpdateAccountPreferences":{
      "name":"UpdateAccountPreferences",
      "http":{
        "method":"POST",
        "requestUri":"/update-account-preferences",
        "responseCode":200
      },
      "input":{"shape":"UpdateAccountPreferencesRequest"},
      "output":{"shape":"UpdateAccountPreferencesResult"},
      "errors":[
        {"shape":"UpdateAccountPreferencesException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidRequestException"}
      ],
      "documentation":"Update Chatbot account level preferences"
    },
    "UpdateChimeWebhookConfiguration":{
      "name":"UpdateChimeWebhookConfiguration",
      "http":{
        "method":"POST",
        "requestUri":"/update-chime-webhook-configuration",
        "responseCode":200
      },
      "input":{"shape":"UpdateChimeWebhookConfigurationRequest"},
      "output":{"shape":"UpdateChimeWebhookConfigurationResult"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidRequestException"},
        {"shape":"UpdateChimeWebhookConfigurationException"}
      ],
      "documentation":"Updates a Chime Webhook Configuration"
    },
    "UpdateMicrosoftTeamsChannelConfiguration":{
      "name":"UpdateMicrosoftTeamsChannelConfiguration",
      "http":{
        "method":"POST",
        "requestUri":"/update-ms-teams-channel-configuration",
        "responseCode":200
      },
      "input":{"shape":"UpdateTeamsChannelConfigurationRequest"},
      "output":{"shape":"UpdateTeamsChannelConfigurationResult"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidRequestException"},
        {"shape":"UpdateTeamsChannelConfigurationException"}
      ],
      "documentation":"Updates MS Teams Channel Configuration"
    },
    "UpdateSlackChannelConfiguration":{
      "name":"UpdateSlackChannelConfiguration",
      "http":{
        "method":"POST",
        "requestUri":"/update-slack-channel-configuration",
        "responseCode":200
      },
      "input":{"shape":"UpdateSlackChannelConfigurationRequest"},
      "output":{"shape":"UpdateSlackChannelConfigurationResult"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidRequestException"},
        {"shape":"UpdateSlackChannelConfigurationException"}
      ],
      "documentation":"Updates Slack Channel Configuration"
    }
  },
  "shapes":{
    "AccountPreferences":{
      "type":"structure",
      "members":{
        "UserAuthorizationRequired":{
          "shape":"BooleanAccountPreference",
          "documentation":"Enables use of a user role requirement in your chat configuration."
        },
        "TrainingDataCollectionEnabled":{
          "shape":"BooleanAccountPreference",
          "documentation":"Turns on training data collection. This helps improve the AWS Chatbot experience by allowing AWS Chatbot to store and use your customer information, such as AWS Chatbot configurations, notifications, user inputs, AWS Chatbot generated responses, and interaction data. This data helps us to continuously improve and develop Artificial Intelligence (AI) technologies. Your data is not shared with any third parties and is protected using sophisticated controls to prevent unauthorized access and misuse. AWS Chatbot does not store or use interactions in chat channels with Amazon Q for training AWS Chatbot’s AI technologies."
        }
      },
      "documentation":"Preferences which apply for AWS Chatbot usage in the calling AWS account."
    },
    "Arn":{
      "type":"string",
      "max":1224,
      "min":12,
      "pattern":"^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$"
    },
    "AwsUserIdentity":{
      "type":"string",
      "max":1101,
      "min":15,
      "pattern":"^arn:aws:(iam|sts)::[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$"
    },
    "BooleanAccountPreference":{"type":"boolean"},
    "ChatConfigurationArn":{
      "type":"string",
      "max":1169,
      "min":19,
      "pattern":"^arn:aws:(wheatley|chatbot):[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$"
    },
    "ChimeWebhookConfiguration":{
      "type":"structure",
      "required":[
        "WebhookDescription",
        "ChatConfigurationArn",
        "IamRoleArn",
        "SnsTopicArns"
      ],
      "members":{
        "WebhookDescription":{
          "shape":"ChimeWebhookDescription",
          "documentation":"Description of the webhook. Recommend using the convention `RoomName/WebhookName`. See Chime setup tutorial for more details: https://docs.aws.amazon.com/chatbot/latest/adminguide/chime-setup.html."
        },
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the ChimeWebhookConfiguration."
        },
        "IamRoleArn":{
          "shape":"Arn",
          "documentation":"The ARN of the IAM role that defines the permissions for AWS Chatbot. This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see IAM Policies for AWS Chatbot."
        },
        "SnsTopicArns":{
          "shape":"SnsTopicArnList",
          "documentation":"The ARNs of the SNS topics that deliver notifications to AWS Chatbot."
        },
        "ConfigurationName":{
          "shape":"ConfigurationName",
          "documentation":"The name of the configuration."
        },
        "LoggingLevel":{
          "shape":"CustomerCwLogLevel",
          "documentation":"Specifies the logging level for this configuration. This property affects the log entries pushed to Amazon CloudWatch Logs.Logging levels include ERROR, INFO, or NONE."
        }
      },
      "documentation":"An AWS Chatbot configuration for Amazon Chime."
    },
    "ChimeWebhookConfigurationList":{
      "type":"list",
      "member":{"shape":"ChimeWebhookConfiguration"}
    },
    "ChimeWebhookDescription":{
      "type":"string",
      "max":255,
      "min":1
    },
    "ChimeWebhookUrl":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^https://hooks\\.chime\\.aws/incomingwebhooks/[A-Za-z0-9\\-]+?\\?token=[A-Za-z0-9\\-]+$"
    },
    "ConfigurationName":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^[A-Za-z0-9-_]+$"
    },
    "ConfiguredTeam":{
      "type":"structure",
      "required":[
        "TenantId",
        "TeamId"
      ],
      "members":{
        "TenantId":{
          "shape":"UUID",
          "documentation":"The ID of the Microsoft Teams tenant."
        },
        "TeamId":{
          "shape":"UUID",
          "documentation":"The ID of the Microsoft Team authorized with AWS Chatbot. To get the team ID, you must perform the initial authorization flow with Microsoft Teams in the AWS Chatbot console. Then you can copy and paste the team ID from the console. For more details, see steps 1-4 in Get started with Microsoft Teams in the AWS Chatbot Administrator Guide."
        },
        "TeamName":{
          "shape":"UUID",
          "documentation":"The name of the Microsoft Teams Team.",
          "box":true
        }
      },
      "documentation":"A Microsoft Teams team that has been authorized with AWS Chatbot."
    },
    "ConfiguredTeamsList":{
      "type":"list",
      "member":{"shape":"ConfiguredTeam"}
    },
    "ConflictException":{
      "type":"structure",
      "members":{
      },
      "documentation":"There was an issue processing your request.",
      "error":{"httpStatusCode":409},
      "exception":true
    },
    "CreateChimeWebhookConfigurationException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "CreateChimeWebhookConfigurationRequest":{
      "type":"structure",
      "required":[
        "WebhookDescription",
        "WebhookUrl",
        "SnsTopicArns",
        "IamRoleArn",
        "ConfigurationName"
      ],
      "members":{
        "WebhookDescription":{
          "shape":"ChimeWebhookDescription",
          "documentation":"Description of the webhook. Recommend using the convention `RoomName/WebhookName`. See Chime setup tutorial for more details: https://docs.aws.amazon.com/chatbot/latest/adminguide/chime-setup.html."
        },
        "WebhookUrl":{
          "shape":"ChimeWebhookUrl",
          "documentation":"URL for the Chime webhook."
        },
        "SnsTopicArns":{
          "shape":"SnsTopicArnList",
          "documentation":"The ARNs of the SNS topics that deliver notifications to AWS Chatbot."
        },
        "IamRoleArn":{
          "shape":"Arn",
          "documentation":"This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see IAM Policies for AWS Chatbot."
        },
        "ConfigurationName":{
          "shape":"ConfigurationName",
          "documentation":"The name of the configuration."
        },
        "LoggingLevel":{
          "shape":"CustomerCwLogLevel",
          "documentation":"Logging levels include ERROR, INFO, or NONE."
        }
      }
    },
    "CreateChimeWebhookConfigurationResult":{
      "type":"structure",
      "members":{
        "WebhookConfiguration":{
          "shape":"ChimeWebhookConfiguration",
          "documentation":"Chime webhook configuration."
        }
      }
    },
    "CreateSlackChannelConfigurationException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "CreateSlackChannelConfigurationRequest":{
      "type":"structure",
      "required":[
        "SlackTeamId",
        "SlackChannelId",
        "IamRoleArn",
        "ConfigurationName"
      ],
      "members":{
        "SlackTeamId":{
          "shape":"SlackTeamId",
          "documentation":"The ID of the Slack workspace authorized with AWS Chatbot."
        },
        "SlackChannelId":{
          "shape":"SlackChannelId",
          "documentation":"The ID of the Slack channel. To get the ID, open Slack, right click on the channel name in the left pane, then choose Copy Link. The channel ID is the 9-character string at the end of the URL. For example, ABCBBLZZZ."
        },
        "SlackChannelName":{
          "shape":"SlackChannelDisplayName",
          "documentation":"The name of the Slack Channel."
        },
        "SnsTopicArns":{
          "shape":"SnsTopicArnList",
          "documentation":"The ARNs of the SNS topics that deliver notifications to AWS Chatbot."
        },
        "IamRoleArn":{
          "shape":"Arn",
          "documentation":"The ARN of the IAM role that defines the permissions for AWS Chatbot. This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see IAM Policies for AWS Chatbot."
        },
        "ConfigurationName":{
          "shape":"ConfigurationName",
          "documentation":"The name of the configuration."
        },
        "LoggingLevel":{
          "shape":"CustomerCwLogLevel",
          "documentation":"Logging levels include ERROR, INFO, or NONE."
        },
        "GuardrailPolicyArns":{
          "shape":"GuardrailPolicyArnList",
          "documentation":"The list of IAM policy ARNs that are applied as channel guardrails. The AWS managed 'AdministratorAccess' policy is applied by default if this is not set."
        },
        "UserAuthorizationRequired":{
          "shape":"BooleanAccountPreference",
          "documentation":"Enables use of a user role requirement in your chat configuration."
        }
      }
    },
    "CreateSlackChannelConfigurationResult":{
      "type":"structure",
      "members":{
        "ChannelConfiguration":{
          "shape":"SlackChannelConfiguration",
          "documentation":"The configuration for a Slack channel configured with AWS Chatbot."
        }
      }
    },
    "CreateTeamsChannelConfigurationException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "CreateTeamsChannelConfigurationRequest":{
      "type":"structure",
      "required":[
        "ChannelId",
        "TeamId",
        "TenantId",
        "IamRoleArn",
        "ConfigurationName"
      ],
      "members":{
        "ChannelId":{
          "shape":"TeamsChannelId",
          "documentation":"The ID of the Microsoft Teams channel."
        },
        "ChannelName":{
          "shape":"TeamsChannelName",
          "documentation":"The name of the Microsoft Teams channel."
        },
        "TeamId":{
          "shape":"UUID",
          "documentation":"The ID of the Microsoft Team authorized with AWS Chatbot. To get the team ID, you must perform the initial authorization flow with Microsoft Teams in the AWS Chatbot console. Then you can copy and paste the team ID from the console. For more details, see steps 1-4 in Get started with Microsoft Teams in the AWS Chatbot Administrator Guide."
        },
        "TeamName":{
          "shape":"TeamName",
          "documentation":"The name of the Microsoft Teams Team."
        },
        "TenantId":{
          "shape":"UUID",
          "documentation":"The ID of the Microsoft Teams tenant."
        },
        "SnsTopicArns":{
          "shape":"SnsTopicArnList",
          "documentation":"The ARNs of the SNS topics that deliver notifications to AWS Chatbot."
        },
        "IamRoleArn":{
          "shape":"Arn",
          "documentation":"The ARN of the IAM role that defines the permissions for AWS Chatbot. This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see IAM Policies for AWS Chatbot."
        },
        "ConfigurationName":{
          "shape":"ConfigurationName",
          "documentation":"The name of the configuration."
        },
        "LoggingLevel":{
          "shape":"CustomerCwLogLevel",
          "documentation":"Logging levels include ERROR, INFO, or NONE."
        },
        "GuardrailPolicyArns":{
          "shape":"GuardrailPolicyArnList",
          "documentation":"The list of IAM policy ARNs that are applied as channel guardrails. The AWS managed 'AdministratorAccess' policy is applied by default if this is not set."
        },
        "UserAuthorizationRequired":{
          "shape":"BooleanAccountPreference",
          "documentation":"Enables use of a user role requirement in your chat configuration."
        }
      }
    },
    "CreateTeamsChannelConfigurationResult":{
      "type":"structure",
      "members":{
        "ChannelConfiguration":{
          "shape":"TeamsChannelConfiguration",
          "documentation":"The configuration for a Microsoft Teams channel configured with AWS Chatbot."
        }
      }
    },
    "CustomerCwLogLevel":{
      "type":"string",
      "max":5,
      "min":4,
      "pattern":"^(ERROR|INFO|NONE)$"
    },
    "DeleteChimeWebhookConfigurationException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "DeleteChimeWebhookConfigurationRequest":{
      "type":"structure",
      "required":["ChatConfigurationArn"],
      "members":{
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the ChimeWebhookConfiguration to delete."
        }
      }
    },
    "DeleteChimeWebhookConfigurationResult":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteMicrosoftTeamsUserIdentityException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "DeleteMicrosoftTeamsUserIdentityRequest":{
      "type":"structure",
      "required":[
        "ChatConfigurationArn",
        "UserId"
      ],
      "members":{
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the MicrosoftTeamsChannelConfiguration associated with the user identity to delete."
        },
        "UserId":{
          "shape":"UUID",
          "documentation":"Id from Microsoft Teams for user."
        }
      }
    },
    "DeleteMicrosoftTeamsUserIdentityResult":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteSlackChannelConfigurationException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "DeleteSlackChannelConfigurationRequest":{
      "type":"structure",
      "required":["ChatConfigurationArn"],
      "members":{
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the SlackChannelConfiguration to delete."
        }
      }
    },
    "DeleteSlackChannelConfigurationResult":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteSlackUserIdentityException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "DeleteSlackUserIdentityRequest":{
      "type":"structure",
      "required":[
        "ChatConfigurationArn",
        "SlackTeamId",
        "SlackUserId"
      ],
      "members":{
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the SlackChannelConfiguration associated with the user identity to delete."
        },
        "SlackTeamId":{
          "shape":"SlackTeamId",
          "documentation":"The ID of the Slack workspace authorized with AWS Chatbot."
        },
        "SlackUserId":{
          "shape":"SlackUserId",
          "documentation":"The ID of the user in Slack."
        }
      }
    },
    "DeleteSlackUserIdentityResult":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteSlackWorkspaceAuthorizationFault":{
      "type":"structure",
      "members":{
      },
      "documentation":"There was an issue deleting your Slack workspace.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "DeleteSlackWorkspaceAuthorizationRequest":{
      "type":"structure",
      "required":["SlackTeamId"],
      "members":{
        "SlackTeamId":{
          "shape":"SlackTeamId",
          "documentation":"The ID of the Slack workspace authorized with AWS Chatbot."
        }
      }
    },
    "DeleteSlackWorkspaceAuthorizationResult":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteTeamsChannelConfigurationException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "DeleteTeamsChannelConfigurationRequest":{
      "type":"structure",
      "required":["ChatConfigurationArn"],
      "members":{
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the MicrosoftTeamsChannelConfiguration to delete."
        }
      }
    },
    "DeleteTeamsChannelConfigurationResult":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteTeamsConfiguredTeamException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "DeleteTeamsConfiguredTeamRequest":{
      "type":"structure",
      "required":["TeamId"],
      "members":{
        "TeamId":{
          "shape":"UUID",
          "documentation":"The ID of the Microsoft Team authorized with AWS Chatbot. To get the team ID, you must perform the initial authorization flow with Microsoft Teams in the AWS Chatbot console. Then you can copy and paste the team ID from the console. For more details, see steps 1-4 in Get started with Microsoft Teams in the AWS Chatbot Administrator Guide."
        }
      }
    },
    "DeleteTeamsConfiguredTeamResult":{
      "type":"structure",
      "members":{
      }
    },
    "DescribeChimeWebhookConfigurationsException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "DescribeChimeWebhookConfigurationsRequest":{
      "type":"structure",
      "members":{
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.",
          "box":true
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.",
          "box":true
        },
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"An optional ARN of a ChimeWebhookConfiguration to describe.",
          "box":true
        }
      }
    },
    "DescribeChimeWebhookConfigurationsResult":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults."
        },
        "WebhookConfigurations":{
          "shape":"ChimeWebhookConfigurationList",
          "documentation":"A list of Chime webhooks associated with the account."
        }
      }
    },
    "DescribeSlackChannelConfigurationsException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "DescribeSlackChannelConfigurationsRequest":{
      "type":"structure",
      "members":{
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.",
          "box":true
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.",
          "box":true
        },
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"An optional ARN of a SlackChannelConfiguration to describe.",
          "box":true
        }
      }
    },
    "DescribeSlackChannelConfigurationsResult":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults."
        },
        "SlackChannelConfigurations":{
          "shape":"SlackChannelConfigurationList",
          "documentation":"A list of Slack channel configurations."
        }
      }
    },
    "DescribeSlackUserIdentitiesException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "DescribeSlackUserIdentitiesRequest":{
      "type":"structure",
      "members":{
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the SlackChannelConfiguration associated with the user identities to describe."
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults."
        },
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved."
        }
      }
    },
    "DescribeSlackUserIdentitiesResult":{
      "type":"structure",
      "members":{
        "SlackUserIdentities":{
          "shape":"SlackUserIdentitiesList",
          "documentation":"A list of Slack User Identities."
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults."
        }
      }
    },
    "DescribeSlackWorkspacesException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "DescribeSlackWorkspacesRequest":{
      "type":"structure",
      "members":{
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved."
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults."
        }
      }
    },
    "DescribeSlackWorkspacesResult":{
      "type":"structure",
      "members":{
        "SlackWorkspaces":{
          "shape":"SlackWorkspacesList",
          "documentation":"A list of Slack Workspaces registered with AWS Chatbot."
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults."
        }
      }
    },
    "GetAccountPreferencesException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "GetAccountPreferencesRequest":{
      "type":"structure",
      "members":{
      }
    },
    "GetAccountPreferencesResult":{
      "type":"structure",
      "members":{
        "AccountPreferences":{
          "shape":"AccountPreferences",
          "documentation":"Preferences which apply for AWS Chatbot usage in the calling AWS account."
        }
      }
    },
    "GetTeamsChannelConfigurationException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "GetTeamsChannelConfigurationRequest":{
      "type":"structure",
      "required":["ChatConfigurationArn"],
      "members":{
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the MicrosoftTeamsChannelConfiguration to retrieve."
        }
      }
    },
    "GetTeamsChannelConfigurationResult":{
      "type":"structure",
      "members":{
        "ChannelConfiguration":{
          "shape":"TeamsChannelConfiguration",
          "documentation":"The configuration for a Microsoft Teams channel configured with AWS Chatbot."
        }
      }
    },
    "GuardrailPolicyArn":{
      "type":"string",
      "max":1163,
      "min":11,
      "pattern":"^(^$|(?!.*\\/aws-service-role\\/.*)arn:aws:iam:[A-Za-z0-9_\\/.-]{0,63}:[A-Za-z0-9_\\/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_\\/+=,@.-]{0,1023})$"
    },
    "GuardrailPolicyArnList":{
      "type":"list",
      "member":{"shape":"GuardrailPolicyArn"}
    },
    "InvalidParameterException":{
      "type":"structure",
      "members":{
      },
      "documentation":"Your request input doesn't meet the constraints that AWS Chatbot requires.",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "InvalidRequestException":{
      "type":"structure",
      "members":{
      },
      "documentation":"Your request input doesn't meet the constraints that AWS Chatbot requires.",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "LimitExceededException":{
      "type":"structure",
      "members":{
      },
      "documentation":"You have exceeded a service limit for AWS Chatbot.",
      "error":{"httpStatusCode":403},
      "exception":true
    },
    "ListMicrosoftTeamsConfiguredTeamsException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "ListMicrosoftTeamsConfiguredTeamsRequest":{
      "type":"structure",
      "members":{
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved."
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults."
        }
      }
    },
    "ListMicrosoftTeamsConfiguredTeamsResult":{
      "type":"structure",
      "members":{
        "ConfiguredTeams":{
          "shape":"ConfiguredTeamsList",
          "documentation":"A list of teams in Microsoft Teams that have been configured with AWS Chatbot."
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults."
        }
      }
    },
    "ListMicrosoftTeamsUserIdentitiesException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "ListMicrosoftTeamsUserIdentitiesRequest":{
      "type":"structure",
      "members":{
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the MicrosoftTeamsChannelConfiguration associated with the user identities to list."
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults."
        },
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved."
        }
      }
    },
    "ListMicrosoftTeamsUserIdentitiesResult":{
      "type":"structure",
      "members":{
        "TeamsUserIdentities":{
          "shape":"TeamsUserIdentitiesList",
          "documentation":"User level permissions associated to a channel configuration."
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults."
        }
      }
    },
    "ListTeamsChannelConfigurationsException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "ListTeamsChannelConfigurationsRequest":{
      "type":"structure",
      "members":{
        "MaxResults":{
          "shape":"MaxResults",
          "documentation":"The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.",
          "box":true
        },
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.",
          "box":true
        },
        "TeamId":{
          "shape":"UUID",
          "documentation":"The ID of the Microsoft Team authorized with AWS Chatbot. To get the team ID, you must perform the initial authorization flow with Microsoft Teams in the AWS Chatbot console. Then you can copy and paste the team ID from the console. For more details, see steps 1-4 in Get started with Microsoft Teams in the AWS Chatbot Administrator Guide.",
          "box":true
        }
      }
    },
    "ListTeamsChannelConfigurationsResult":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"PaginationToken",
          "documentation":"An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults."
        },
        "TeamChannelConfigurations":{
          "shape":"TeamChannelConfigurationsList",
          "documentation":"A list of AWS Chatbot channel configurations for Microsoft Teams."
        }
      }
    },
    "MaxResults":{
      "type":"integer",
      "max":100,
      "min":1
    },
    "PaginationToken":{
      "type":"string",
      "max":1276,
      "min":1,
      "pattern":"^[a-zA-Z0-9=\\/+_.\\-,#:\\\\\"{}]{4,1276}$"
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We were not able to find the resource for your request.",
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "SlackChannelConfiguration":{
      "type":"structure",
      "required":[
        "SlackTeamName",
        "SlackTeamId",
        "SlackChannelId",
        "SlackChannelName",
        "ChatConfigurationArn",
        "IamRoleArn",
        "SnsTopicArns"
      ],
      "members":{
        "SlackTeamName":{
          "shape":"SlackTeamName",
          "documentation":"Name of the Slack Workspace."
        },
        "SlackTeamId":{
          "shape":"SlackTeamId",
          "documentation":"The ID of the Slack workspace authorized with AWS Chatbot."
        },
        "SlackChannelId":{
          "shape":"SlackChannelId",
          "documentation":"The ID of the Slack channel. To get the ID, open Slack, right click on the channel name in the left pane, then choose Copy Link. The channel ID is the 9-character string at the end of the URL. For example, ABCBBLZZZ."
        },
        "SlackChannelName":{
          "shape":"SlackChannelDisplayName",
          "documentation":"The name of the Slack Channel."
        },
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the SlackChannelConfiguration."
        },
        "IamRoleArn":{
          "shape":"Arn",
          "documentation":"The ARN of the IAM role that defines the permissions for AWS Chatbot. This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see IAM Policies for AWS Chatbot."
        },
        "SnsTopicArns":{
          "shape":"SnsTopicArnList",
          "documentation":"The ARNs of the SNS topics that deliver notifications to AWS Chatbot.",
          "box":true
        },
        "ConfigurationName":{
          "shape":"ConfigurationName",
          "documentation":"The name of the configuration."
        },
        "LoggingLevel":{
          "shape":"CustomerCwLogLevel",
          "documentation":"Logging levels include ERROR, INFO, or NONE."
        },
        "GuardrailPolicyArns":{
          "shape":"GuardrailPolicyArnList",
          "documentation":"The list of IAM policy ARNs that are applied as channel guardrails. The AWS managed 'AdministratorAccess' policy is applied by default if this is not set."
        },
        "UserAuthorizationRequired":{
          "shape":"BooleanAccountPreference",
          "documentation":"Enables use of a user role requirement in your chat configuration."
        }
      },
      "documentation":"An AWS Chatbot configuration for Slack."
    },
    "SlackChannelConfigurationList":{
      "type":"list",
      "member":{"shape":"SlackChannelConfiguration"}
    },
    "SlackChannelDisplayName":{
      "type":"string",
      "max":255,
      "min":1
    },
    "SlackChannelId":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[A-Za-z0-9]+$"
    },
    "SlackTeamId":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[0-9A-Z]{1,255}$"
    },
    "SlackTeamName":{
      "type":"string",
      "max":255,
      "min":1
    },
    "SlackUserId":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^(.*)$"
    },
    "SlackUserIdentitiesList":{
      "type":"list",
      "member":{"shape":"SlackUserIdentity"}
    },
    "SlackUserIdentity":{
      "type":"structure",
      "required":[
        "IamRoleArn",
        "ChatConfigurationArn",
        "SlackTeamId",
        "SlackUserId"
      ],
      "members":{
        "IamRoleArn":{
          "shape":"Arn",
          "documentation":"The ARN of the IAM role that defines the permissions for AWS Chatbot. This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see IAM Policies for AWS Chatbot."
        },
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the SlackChannelConfiguration associated with the user identity."
        },
        "SlackTeamId":{
          "shape":"SlackTeamId",
          "documentation":"The ID of the Slack workspace authorized with AWS Chatbot."
        },
        "SlackUserId":{
          "shape":"SlackUserId",
          "documentation":"The ID of the user in Slack."
        },
        "AwsUserIdentity":{
          "shape":"AwsUserIdentity",
          "documentation":"The AWS user identity ARN used to associate a Slack User Identity with an IAM Role."
        }
      },
      "documentation":"Identifes a User level permission for a channel configuration."
    },
    "SlackWorkspace":{
      "type":"structure",
      "required":[
        "SlackTeamId",
        "SlackTeamName"
      ],
      "members":{
        "SlackTeamId":{
          "shape":"SlackTeamId",
          "documentation":"The ID of the Slack workspace authorized with AWS Chatbot."
        },
        "SlackTeamName":{
          "shape":"SlackTeamName",
          "documentation":"Name of the Slack Workspace."
        }
      },
      "documentation":"A Slack Workspace."
    },
    "SlackWorkspacesList":{
      "type":"list",
      "member":{"shape":"SlackWorkspace"}
    },
    "SnsTopicArnList":{
      "type":"list",
      "member":{"shape":"Arn"}
    },
    "String":{"type":"string"},
    "TeamChannelConfigurationsList":{
      "type":"list",
      "member":{"shape":"TeamsChannelConfiguration"}
    },
    "TeamName":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^(.*)$"
    },
    "TeamsChannelConfiguration":{
      "type":"structure",
      "required":[
        "ChannelId",
        "TeamId",
        "TenantId",
        "ChatConfigurationArn",
        "IamRoleArn",
        "SnsTopicArns"
      ],
      "members":{
        "ChannelId":{
          "shape":"TeamsChannelId",
          "documentation":"The ID of the Microsoft Teams channel."
        },
        "ChannelName":{
          "shape":"TeamsChannelName",
          "documentation":"The name of the Microsoft Teams channel."
        },
        "TeamId":{
          "shape":"UUID",
          "documentation":"The ID of the Microsoft Team authorized with AWS Chatbot. To get the team ID, you must perform the initial authorization flow with Microsoft Teams in the AWS Chatbot console. Then you can copy and paste the team ID from the console. For more details, see steps 1-4 in Get started with Microsoft Teams in the AWS Chatbot Administrator Guide."
        },
        "TeamName":{
          "shape":"String",
          "documentation":"The name of the Microsoft Teams Team."
        },
        "TenantId":{
          "shape":"UUID",
          "documentation":"The ID of the Microsoft Teams tenant."
        },
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the MicrosoftTeamsChannelConfiguration."
        },
        "IamRoleArn":{
          "shape":"Arn",
          "documentation":"The ARN of the IAM role that defines the permissions for AWS Chatbot. This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see IAM Policies for AWS Chatbot."
        },
        "SnsTopicArns":{
          "shape":"SnsTopicArnList",
          "documentation":"The ARNs of the SNS topics that deliver notifications to AWS Chatbot.",
          "box":true
        },
        "ConfigurationName":{
          "shape":"ConfigurationName",
          "documentation":"The name of the configuration."
        },
        "LoggingLevel":{
          "shape":"CustomerCwLogLevel",
          "documentation":"Logging levels include ERROR, INFO, or NONE."
        },
        "GuardrailPolicyArns":{
          "shape":"GuardrailPolicyArnList",
          "documentation":"The list of IAM policy ARNs that are applied as channel guardrails. The AWS managed 'AdministratorAccess' policy is applied by default if this is not set."
        },
        "UserAuthorizationRequired":{
          "shape":"BooleanAccountPreference",
          "documentation":"Enables use of a user role requirement in your chat configuration."
        }
      },
      "documentation":"An AWS Chatbot configuration for Microsoft Teams."
    },
    "TeamsChannelId":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^([a-zA-Z0-9-_=+\\/.,])*%3[aA]([a-zA-Z0-9-_=+\\/.,])*%40([a-zA-Z0-9-_=+\\/.,])*$"
    },
    "TeamsChannelName":{
      "type":"string",
      "max":1000,
      "min":1,
      "pattern":"^(.*)$"
    },
    "TeamsUserIdentitiesList":{
      "type":"list",
      "member":{"shape":"TeamsUserIdentity"}
    },
    "TeamsUserIdentity":{
      "type":"structure",
      "required":[
        "IamRoleArn",
        "ChatConfigurationArn",
        "TeamId"
      ],
      "members":{
        "IamRoleArn":{
          "shape":"Arn",
          "documentation":"The ARN of the IAM role that defines the permissions for AWS Chatbot. This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see IAM Policies for AWS Chatbot."
        },
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the MicrosoftTeamsChannelConfiguration associated with the user identity."
        },
        "TeamId":{
          "shape":"UUID",
          "documentation":"The ID of the Microsoft Team authorized with AWS Chatbot. To get the team ID, you must perform the initial authorization flow with Microsoft Teams in the AWS Chatbot console. Then you can copy and paste the team ID from the console. For more details, see steps 1-4 in Get started with Microsoft Teams in the AWS Chatbot Administrator Guide."
        },
        "UserId":{
          "shape":"UUID",
          "documentation":"Id from Microsoft Teams for user."
        },
        "AwsUserIdentity":{
          "shape":"AwsUserIdentity",
          "documentation":"The AWS user identity ARN used to associate a Microsoft Teams User Identity with an IAM Role."
        },
        "TeamsChannelId":{
          "shape":"TeamsChannelId",
          "documentation":"The ID of the Microsoft Teams channel."
        },
        "TeamsTenantId":{
          "shape":"UUID",
          "documentation":"The ID of the Microsoft Teams tenant."
        }
      },
      "documentation":"Identifes a user level permission for a channel configuration."
    },
    "UUID":{
      "type":"string",
      "max":36,
      "min":36,
      "pattern":"^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$"
    },
    "UpdateAccountPreferencesException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "UpdateAccountPreferencesRequest":{
      "type":"structure",
      "members":{
        "UserAuthorizationRequired":{
          "shape":"BooleanAccountPreference",
          "documentation":"Enables use of a user role requirement in your chat configuration."
        },
        "TrainingDataCollectionEnabled":{
          "shape":"BooleanAccountPreference",
          "documentation":"Turns on training data collection. This helps improve the AWS Chatbot experience by allowing AWS Chatbot to store and use your customer information, such as AWS Chatbot configurations, notifications, user inputs, AWS Chatbot generated responses, and interaction data. This data helps us to continuously improve and develop Artificial Intelligence (AI) technologies. Your data is not shared with any third parties and is protected using sophisticated controls to prevent unauthorized access and misuse. AWS Chatbot does not store or use interactions in chat channels with Amazon Q for training AWS Chatbot’s AI technologies."
        }
      }
    },
    "UpdateAccountPreferencesResult":{
      "type":"structure",
      "members":{
        "AccountPreferences":{
          "shape":"AccountPreferences",
          "documentation":"Preferences which apply for AWS Chatbot usage in the calling AWS account."
        }
      }
    },
    "UpdateChimeWebhookConfigurationException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "UpdateChimeWebhookConfigurationRequest":{
      "type":"structure",
      "required":["ChatConfigurationArn"],
      "members":{
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the ChimeWebhookConfiguration to update."
        },
        "WebhookDescription":{
          "shape":"ChimeWebhookDescription",
          "documentation":"Description of the webhook. Recommend using the convention `RoomName/WebhookName`. See Chime setup tutorial for more details: https://docs.aws.amazon.com/chatbot/latest/adminguide/chime-setup.html."
        },
        "WebhookUrl":{
          "shape":"ChimeWebhookUrl",
          "documentation":"URL for the Chime webhook."
        },
        "SnsTopicArns":{
          "shape":"SnsTopicArnList",
          "documentation":"The ARNs of the SNS topics that deliver notifications to AWS Chatbot."
        },
        "IamRoleArn":{
          "shape":"Arn",
          "documentation":"The ARN of the IAM role that defines the permissions for AWS Chatbot. This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see IAM Policies for AWS Chatbot."
        },
        "LoggingLevel":{
          "shape":"CustomerCwLogLevel",
          "documentation":"Logging levels include ERROR, INFO, or NONE."
        }
      }
    },
    "UpdateChimeWebhookConfigurationResult":{
      "type":"structure",
      "members":{
        "WebhookConfiguration":{
          "shape":"ChimeWebhookConfiguration",
          "documentation":"Chime webhook configuration."
        }
      }
    },
    "UpdateSlackChannelConfigurationException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "UpdateSlackChannelConfigurationRequest":{
      "type":"structure",
      "required":[
        "ChatConfigurationArn",
        "SlackChannelId"
      ],
      "members":{
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the SlackChannelConfiguration to update."
        },
        "SlackChannelId":{
          "shape":"SlackChannelId",
          "documentation":"The ID of the Slack channel. To get the ID, open Slack, right click on the channel name in the left pane, then choose Copy Link. The channel ID is the 9-character string at the end of the URL. For example, ABCBBLZZZ."
        },
        "SlackChannelName":{
          "shape":"SlackChannelDisplayName",
          "documentation":"The name of the Slack Channel."
        },
        "SnsTopicArns":{
          "shape":"SnsTopicArnList",
          "documentation":"The ARNs of the SNS topics that deliver notifications to AWS Chatbot."
        },
        "IamRoleArn":{
          "shape":"Arn",
          "documentation":"The ARN of the IAM role that defines the permissions for AWS Chatbot. This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see IAM Policies for AWS Chatbot."
        },
        "LoggingLevel":{
          "shape":"CustomerCwLogLevel",
          "documentation":"Logging levels include ERROR, INFO, or NONE."
        },
        "GuardrailPolicyArns":{
          "shape":"GuardrailPolicyArnList",
          "documentation":"The list of IAM policy ARNs that are applied as channel guardrails. The AWS managed 'AdministratorAccess' policy is applied by default if this is not set."
        },
        "UserAuthorizationRequired":{
          "shape":"BooleanAccountPreference",
          "documentation":"Enables use of a user role requirement in your chat configuration."
        }
      }
    },
    "UpdateSlackChannelConfigurationResult":{
      "type":"structure",
      "members":{
        "ChannelConfiguration":{
          "shape":"SlackChannelConfiguration",
          "documentation":"The configuration for a Slack channel configured with AWS Chatbot."
        }
      }
    },
    "UpdateTeamsChannelConfigurationException":{
      "type":"structure",
      "members":{
      },
      "documentation":"We can’t process your request right now because of a server issue. Try again later.",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "UpdateTeamsChannelConfigurationRequest":{
      "type":"structure",
      "required":[
        "ChatConfigurationArn",
        "ChannelId"
      ],
      "members":{
        "ChatConfigurationArn":{
          "shape":"ChatConfigurationArn",
          "documentation":"The ARN of the MicrosoftTeamsChannelConfiguration to update."
        },
        "ChannelId":{
          "shape":"TeamsChannelId",
          "documentation":"The ID of the Microsoft Teams channel."
        },
        "ChannelName":{
          "shape":"TeamsChannelName",
          "documentation":"The name of the Microsoft Teams channel."
        },
        "SnsTopicArns":{
          "shape":"SnsTopicArnList",
          "documentation":"The ARNs of the SNS topics that deliver notifications to AWS Chatbot."
        },
        "IamRoleArn":{
          "shape":"Arn",
          "documentation":"The ARN of the IAM role that defines the permissions for AWS Chatbot. This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see IAM Policies for AWS Chatbot."
        },
        "LoggingLevel":{
          "shape":"CustomerCwLogLevel",
          "documentation":"Logging levels include ERROR, INFO, or NONE."
        },
        "GuardrailPolicyArns":{
          "shape":"GuardrailPolicyArnList",
          "documentation":"The list of IAM policy ARNs that are applied as channel guardrails. The AWS managed 'AdministratorAccess' policy is applied by default if this is not set."
        },
        "UserAuthorizationRequired":{
          "shape":"BooleanAccountPreference",
          "documentation":"Enables use of a user role requirement in your chat configuration."
        }
      }
    },
    "UpdateTeamsChannelConfigurationResult":{
      "type":"structure",
      "members":{
        "ChannelConfiguration":{
          "shape":"TeamsChannelConfiguration",
          "documentation":"The configuration for a Microsoft Teams channel configured with AWS Chatbot."
        }
      }
    }
  },
  "documentation":"AWS Chatbot API"
}
