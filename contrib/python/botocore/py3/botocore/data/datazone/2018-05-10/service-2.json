{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2018-05-10",
    "endpointPrefix":"datazone",
    "jsonVersion":"1.1",
    "protocol":"rest-json",
    "serviceFullName":"Amazon DataZone",
    "serviceId":"DataZone",
    "signatureVersion":"v4",
    "signingName":"datazone",
    "uid":"datazone-2018-05-10"
  },
  "operations":{
    "AcceptPredictions":{
      "name":"AcceptPredictions",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{identifier}/accept-predictions",
        "responseCode":200
      },
      "input":{"shape":"AcceptPredictionsInput"},
      "output":{"shape":"AcceptPredictionsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Accepts automatically generated business-friendly metadata for your Amazon DataZone assets.</p>",
      "idempotent":true
    },
    "AcceptSubscriptionRequest":{
      "name":"AcceptSubscriptionRequest",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests/{identifier}/accept",
        "responseCode":200
      },
      "input":{"shape":"AcceptSubscriptionRequestInput"},
      "output":{"shape":"AcceptSubscriptionRequestOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Accepts a subscription request to a specific asset. </p>",
      "idempotent":true
    },
    "CancelMetadataGenerationRun":{
      "name":"CancelMetadataGenerationRun",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/metadata-generation-runs/{identifier}/cancel",
        "responseCode":200
      },
      "input":{"shape":"CancelMetadataGenerationRunInput"},
      "output":{"shape":"CancelMetadataGenerationRunOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Cancels the metadata generation run.</p>"
    },
    "CancelSubscription":{
      "name":"CancelSubscription",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/subscriptions/{identifier}/cancel",
        "responseCode":200
      },
      "input":{"shape":"CancelSubscriptionInput"},
      "output":{"shape":"CancelSubscriptionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Cancels the subscription to the specified asset.</p>",
      "idempotent":true
    },
    "CreateAsset":{
      "name":"CreateAsset",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/assets",
        "responseCode":201
      },
      "input":{"shape":"CreateAssetInput"},
      "output":{"shape":"CreateAssetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an asset in Amazon DataZone catalog.</p>",
      "idempotent":true
    },
    "CreateAssetRevision":{
      "name":"CreateAssetRevision",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{identifier}/revisions",
        "responseCode":200
      },
      "input":{"shape":"CreateAssetRevisionInput"},
      "output":{"shape":"CreateAssetRevisionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a revision of the asset.</p>",
      "idempotent":true
    },
    "CreateAssetType":{
      "name":"CreateAssetType",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/asset-types",
        "responseCode":201
      },
      "input":{"shape":"CreateAssetTypeInput"},
      "output":{"shape":"CreateAssetTypeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a custom asset type.</p>"
    },
    "CreateDataSource":{
      "name":"CreateDataSource",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources",
        "responseCode":201
      },
      "input":{"shape":"CreateDataSourceInput"},
      "output":{"shape":"CreateDataSourceOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an Amazon DataZone data source.</p>",
      "idempotent":true
    },
    "CreateDomain":{
      "name":"CreateDomain",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains",
        "responseCode":201
      },
      "input":{"shape":"CreateDomainInput"},
      "output":{"shape":"CreateDomainOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an Amazon DataZone domain.</p>",
      "idempotent":true
    },
    "CreateEnvironment":{
      "name":"CreateEnvironment",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/environments",
        "responseCode":201
      },
      "input":{"shape":"CreateEnvironmentInput"},
      "output":{"shape":"CreateEnvironmentOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Create an Amazon DataZone environment.</p>"
    },
    "CreateEnvironmentProfile":{
      "name":"CreateEnvironmentProfile",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-profiles",
        "responseCode":201
      },
      "input":{"shape":"CreateEnvironmentProfileInput"},
      "output":{"shape":"CreateEnvironmentProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an Amazon DataZone environment profile.</p>"
    },
    "CreateFormType":{
      "name":"CreateFormType",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/form-types",
        "responseCode":201
      },
      "input":{"shape":"CreateFormTypeInput"},
      "output":{"shape":"CreateFormTypeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a metadata form type.</p>"
    },
    "CreateGlossary":{
      "name":"CreateGlossary",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/glossaries",
        "responseCode":201
      },
      "input":{"shape":"CreateGlossaryInput"},
      "output":{"shape":"CreateGlossaryOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an Amazon DataZone business glossary.</p>",
      "idempotent":true
    },
    "CreateGlossaryTerm":{
      "name":"CreateGlossaryTerm",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/glossary-terms",
        "responseCode":201
      },
      "input":{"shape":"CreateGlossaryTermInput"},
      "output":{"shape":"CreateGlossaryTermOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a business glossary term.</p>",
      "idempotent":true
    },
    "CreateGroupProfile":{
      "name":"CreateGroupProfile",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/group-profiles",
        "responseCode":201
      },
      "input":{"shape":"CreateGroupProfileInput"},
      "output":{"shape":"CreateGroupProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a group profile in Amazon DataZone.</p>",
      "idempotent":true
    },
    "CreateListingChangeSet":{
      "name":"CreateListingChangeSet",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/listings/change-set",
        "responseCode":200
      },
      "input":{"shape":"CreateListingChangeSetInput"},
      "output":{"shape":"CreateListingChangeSetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Publishes a listing (a record of an asset at a given time) or removes a listing from the catalog. </p>"
    },
    "CreateProject":{
      "name":"CreateProject",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/projects",
        "responseCode":201
      },
      "input":{"shape":"CreateProjectInput"},
      "output":{"shape":"CreateProjectOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an Amazon DataZone project.</p>"
    },
    "CreateProjectMembership":{
      "name":"CreateProjectMembership",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/projects/{projectIdentifier}/createMembership",
        "responseCode":201
      },
      "input":{"shape":"CreateProjectMembershipInput"},
      "output":{"shape":"CreateProjectMembershipOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a project membership in Amazon DataZone.</p>"
    },
    "CreateSubscriptionGrant":{
      "name":"CreateSubscriptionGrant",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-grants",
        "responseCode":200
      },
      "input":{"shape":"CreateSubscriptionGrantInput"},
      "output":{"shape":"CreateSubscriptionGrantOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a subsscription grant in Amazon DataZone.</p>"
    },
    "CreateSubscriptionRequest":{
      "name":"CreateSubscriptionRequest",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests",
        "responseCode":200
      },
      "input":{"shape":"CreateSubscriptionRequestInput"},
      "output":{"shape":"CreateSubscriptionRequestOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a subscription request in Amazon DataZone.</p>"
    },
    "CreateSubscriptionTarget":{
      "name":"CreateSubscriptionTarget",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/subscription-targets",
        "responseCode":200
      },
      "input":{"shape":"CreateSubscriptionTargetInput"},
      "output":{"shape":"CreateSubscriptionTargetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a subscription target in Amazon DataZone.</p>"
    },
    "CreateUserProfile":{
      "name":"CreateUserProfile",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/user-profiles",
        "responseCode":201
      },
      "input":{"shape":"CreateUserProfileInput"},
      "output":{"shape":"CreateUserProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a user profile in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteAsset":{
      "name":"DeleteAsset",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteAssetInput"},
      "output":{"shape":"DeleteAssetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Delets an asset in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteAssetType":{
      "name":"DeleteAssetType",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/asset-types/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteAssetTypeInput"},
      "output":{"shape":"DeleteAssetTypeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes an asset type in Amazon DataZone.</p>"
    },
    "DeleteDataSource":{
      "name":"DeleteDataSource",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"DeleteDataSourceInput"},
      "output":{"shape":"DeleteDataSourceOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a data source in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteDomain":{
      "name":"DeleteDomain",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{identifier}",
        "responseCode":202
      },
      "input":{"shape":"DeleteDomainInput"},
      "output":{"shape":"DeleteDomainOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a Amazon DataZone domain.</p>",
      "idempotent":true
    },
    "DeleteEnvironment":{
      "name":"DeleteEnvironment",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteEnvironmentInput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes an environment in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteEnvironmentBlueprintConfiguration":{
      "name":"DeleteEnvironmentBlueprintConfiguration",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprint-configurations/{environmentBlueprintIdentifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteEnvironmentBlueprintConfigurationInput"},
      "output":{"shape":"DeleteEnvironmentBlueprintConfigurationOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes the blueprint configuration in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteEnvironmentProfile":{
      "name":"DeleteEnvironmentProfile",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-profiles/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteEnvironmentProfileInput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes an environment profile in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteFormType":{
      "name":"DeleteFormType",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/form-types/{formTypeIdentifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteFormTypeInput"},
      "output":{"shape":"DeleteFormTypeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Delets and metadata form type in Amazon DataZone.</p>"
    },
    "DeleteGlossary":{
      "name":"DeleteGlossary",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/glossaries/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteGlossaryInput"},
      "output":{"shape":"DeleteGlossaryOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a business glossary in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteGlossaryTerm":{
      "name":"DeleteGlossaryTerm",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/glossary-terms/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteGlossaryTermInput"},
      "output":{"shape":"DeleteGlossaryTermOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a business glossary term in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteListing":{
      "name":"DeleteListing",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/listings/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteListingInput"},
      "output":{"shape":"DeleteListingOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a listing (a record of an asset at a given time).</p>",
      "idempotent":true
    },
    "DeleteProject":{
      "name":"DeleteProject",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/projects/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteProjectInput"},
      "output":{"shape":"DeleteProjectOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a project in Amazon DataZone. </p>",
      "idempotent":true
    },
    "DeleteProjectMembership":{
      "name":"DeleteProjectMembership",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/projects/{projectIdentifier}/deleteMembership",
        "responseCode":204
      },
      "input":{"shape":"DeleteProjectMembershipInput"},
      "output":{"shape":"DeleteProjectMembershipOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes project membership in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteSubscriptionGrant":{
      "name":"DeleteSubscriptionGrant",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-grants/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"DeleteSubscriptionGrantInput"},
      "output":{"shape":"DeleteSubscriptionGrantOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes and subscription grant in Amazon DataZone.</p>"
    },
    "DeleteSubscriptionRequest":{
      "name":"DeleteSubscriptionRequest",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteSubscriptionRequestInput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a subscription request in Amazon DataZone.</p>"
    },
    "DeleteSubscriptionTarget":{
      "name":"DeleteSubscriptionTarget",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/subscription-targets/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteSubscriptionTargetInput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a subscription target in Amazon DataZone.</p>"
    },
    "DeleteTimeSeriesDataPoints":{
      "name":"DeleteTimeSeriesDataPoints",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/time-series-data-points",
        "responseCode":204
      },
      "input":{"shape":"DeleteTimeSeriesDataPointsInput"},
      "output":{"shape":"DeleteTimeSeriesDataPointsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes the specified time series form for the specified asset. </p>",
      "idempotent":true
    },
    "GetAsset":{
      "name":"GetAsset",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetAssetInput"},
      "output":{"shape":"GetAssetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone asset.</p>"
    },
    "GetAssetType":{
      "name":"GetAssetType",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/asset-types/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetAssetTypeInput"},
      "output":{"shape":"GetAssetTypeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone asset type.</p>"
    },
    "GetDataSource":{
      "name":"GetDataSource",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetDataSourceInput"},
      "output":{"shape":"GetDataSourceOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone data source.</p>"
    },
    "GetDataSourceRun":{
      "name":"GetDataSourceRun",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/data-source-runs/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetDataSourceRunInput"},
      "output":{"shape":"GetDataSourceRunOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone data source run.</p>"
    },
    "GetDomain":{
      "name":"GetDomain",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetDomainInput"},
      "output":{"shape":"GetDomainOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone domain.</p>"
    },
    "GetEnvironment":{
      "name":"GetEnvironment",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetEnvironmentInput"},
      "output":{"shape":"GetEnvironmentOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone environment.</p>"
    },
    "GetEnvironmentBlueprint":{
      "name":"GetEnvironmentBlueprint",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprints/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetEnvironmentBlueprintInput"},
      "output":{"shape":"GetEnvironmentBlueprintOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone blueprint.</p>"
    },
    "GetEnvironmentBlueprintConfiguration":{
      "name":"GetEnvironmentBlueprintConfiguration",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprint-configurations/{environmentBlueprintIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"GetEnvironmentBlueprintConfigurationInput"},
      "output":{"shape":"GetEnvironmentBlueprintConfigurationOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the blueprint configuration in Amazon DataZone.</p>"
    },
    "GetEnvironmentProfile":{
      "name":"GetEnvironmentProfile",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-profiles/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetEnvironmentProfileInput"},
      "output":{"shape":"GetEnvironmentProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an evinronment profile in Amazon DataZone.</p>"
    },
    "GetFormType":{
      "name":"GetFormType",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/form-types/{formTypeIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"GetFormTypeInput"},
      "output":{"shape":"GetFormTypeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a metadata form type in Amazon DataZone.</p>"
    },
    "GetGlossary":{
      "name":"GetGlossary",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/glossaries/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetGlossaryInput"},
      "output":{"shape":"GetGlossaryOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a business glossary in Amazon DataZone.</p>"
    },
    "GetGlossaryTerm":{
      "name":"GetGlossaryTerm",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/glossary-terms/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetGlossaryTermInput"},
      "output":{"shape":"GetGlossaryTermOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a business glossary term in Amazon DataZone.</p>"
    },
    "GetGroupProfile":{
      "name":"GetGroupProfile",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/group-profiles/{groupIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"GetGroupProfileInput"},
      "output":{"shape":"GetGroupProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a group profile in Amazon DataZone.</p>"
    },
    "GetIamPortalLoginUrl":{
      "name":"GetIamPortalLoginUrl",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/get-portal-login-url",
        "responseCode":200
      },
      "input":{"shape":"GetIamPortalLoginUrlInput"},
      "output":{"shape":"GetIamPortalLoginUrlOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the data portal URL for the specified Amazon DataZone domain.</p>"
    },
    "GetListing":{
      "name":"GetListing",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/listings/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetListingInput"},
      "output":{"shape":"GetListingOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a listing (a record of an asset at a given time).</p>"
    },
    "GetMetadataGenerationRun":{
      "name":"GetMetadataGenerationRun",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/metadata-generation-runs/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetMetadataGenerationRunInput"},
      "output":{"shape":"GetMetadataGenerationRunOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a metadata generation run in Amazon DataZone.</p>"
    },
    "GetProject":{
      "name":"GetProject",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/projects/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetProjectInput"},
      "output":{"shape":"GetProjectOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a project in Amazon DataZone.</p>"
    },
    "GetSubscription":{
      "name":"GetSubscription",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/subscriptions/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetSubscriptionInput"},
      "output":{"shape":"GetSubscriptionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a subscription in Amazon DataZone.</p>"
    },
    "GetSubscriptionGrant":{
      "name":"GetSubscriptionGrant",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-grants/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetSubscriptionGrantInput"},
      "output":{"shape":"GetSubscriptionGrantOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the subscription grant in Amazon DataZone.</p>"
    },
    "GetSubscriptionRequestDetails":{
      "name":"GetSubscriptionRequestDetails",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetSubscriptionRequestDetailsInput"},
      "output":{"shape":"GetSubscriptionRequestDetailsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the details of the specified subscription request.</p>"
    },
    "GetSubscriptionTarget":{
      "name":"GetSubscriptionTarget",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/subscription-targets/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetSubscriptionTargetInput"},
      "output":{"shape":"GetSubscriptionTargetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the subscription target in Amazon DataZone.</p>"
    },
    "GetTimeSeriesDataPoint":{
      "name":"GetTimeSeriesDataPoint",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/time-series-data-points/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetTimeSeriesDataPointInput"},
      "output":{"shape":"GetTimeSeriesDataPointOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the existing data point for the asset.</p>"
    },
    "GetUserProfile":{
      "name":"GetUserProfile",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/user-profiles/{userIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"GetUserProfileInput"},
      "output":{"shape":"GetUserProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a user profile in Amazon DataZone.</p>"
    },
    "ListAssetRevisions":{
      "name":"ListAssetRevisions",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{identifier}/revisions",
        "responseCode":200
      },
      "input":{"shape":"ListAssetRevisionsInput"},
      "output":{"shape":"ListAssetRevisionsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists the revisions for the asset.</p>"
    },
    "ListDataSourceRunActivities":{
      "name":"ListDataSourceRunActivities",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/data-source-runs/{identifier}/activities",
        "responseCode":200
      },
      "input":{"shape":"ListDataSourceRunActivitiesInput"},
      "output":{"shape":"ListDataSourceRunActivitiesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists data source run activities.</p>"
    },
    "ListDataSourceRuns":{
      "name":"ListDataSourceRuns",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources/{dataSourceIdentifier}/runs",
        "responseCode":200
      },
      "input":{"shape":"ListDataSourceRunsInput"},
      "output":{"shape":"ListDataSourceRunsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists data source runs in Amazon DataZone.</p>"
    },
    "ListDataSources":{
      "name":"ListDataSources",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources",
        "responseCode":200
      },
      "input":{"shape":"ListDataSourcesInput"},
      "output":{"shape":"ListDataSourcesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists data sources in Amazon DataZone.</p>"
    },
    "ListDomains":{
      "name":"ListDomains",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains",
        "responseCode":200
      },
      "input":{"shape":"ListDomainsInput"},
      "output":{"shape":"ListDomainsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists Amazon DataZone domains.</p>"
    },
    "ListEnvironmentBlueprintConfigurations":{
      "name":"ListEnvironmentBlueprintConfigurations",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprint-configurations",
        "responseCode":200
      },
      "input":{"shape":"ListEnvironmentBlueprintConfigurationsInput"},
      "output":{"shape":"ListEnvironmentBlueprintConfigurationsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists blueprint configurations for a Amazon DataZone environment.</p>"
    },
    "ListEnvironmentBlueprints":{
      "name":"ListEnvironmentBlueprints",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprints",
        "responseCode":200
      },
      "input":{"shape":"ListEnvironmentBlueprintsInput"},
      "output":{"shape":"ListEnvironmentBlueprintsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists blueprints in an Amazon DataZone environment.</p>"
    },
    "ListEnvironmentProfiles":{
      "name":"ListEnvironmentProfiles",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-profiles",
        "responseCode":200
      },
      "input":{"shape":"ListEnvironmentProfilesInput"},
      "output":{"shape":"ListEnvironmentProfilesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists Amazon DataZone environment profiles.</p>"
    },
    "ListEnvironments":{
      "name":"ListEnvironments",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environments",
        "responseCode":200
      },
      "input":{"shape":"ListEnvironmentsInput"},
      "output":{"shape":"ListEnvironmentsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists Amazon DataZone environments.</p>"
    },
    "ListMetadataGenerationRuns":{
      "name":"ListMetadataGenerationRuns",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/metadata-generation-runs",
        "responseCode":200
      },
      "input":{"shape":"ListMetadataGenerationRunsInput"},
      "output":{"shape":"ListMetadataGenerationRunsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists all metadata generation runs.</p>"
    },
    "ListNotifications":{
      "name":"ListNotifications",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/notifications",
        "responseCode":200
      },
      "input":{"shape":"ListNotificationsInput"},
      "output":{"shape":"ListNotificationsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists all Amazon DataZone notifications.</p>"
    },
    "ListProjectMemberships":{
      "name":"ListProjectMemberships",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/projects/{projectIdentifier}/memberships",
        "responseCode":200
      },
      "input":{"shape":"ListProjectMembershipsInput"},
      "output":{"shape":"ListProjectMembershipsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists all members of the specified project.</p>"
    },
    "ListProjects":{
      "name":"ListProjects",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/projects",
        "responseCode":200
      },
      "input":{"shape":"ListProjectsInput"},
      "output":{"shape":"ListProjectsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists Amazon DataZone projects.</p>"
    },
    "ListSubscriptionGrants":{
      "name":"ListSubscriptionGrants",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-grants",
        "responseCode":200
      },
      "input":{"shape":"ListSubscriptionGrantsInput"},
      "output":{"shape":"ListSubscriptionGrantsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists subscription grants.</p>"
    },
    "ListSubscriptionRequests":{
      "name":"ListSubscriptionRequests",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests",
        "responseCode":200
      },
      "input":{"shape":"ListSubscriptionRequestsInput"},
      "output":{"shape":"ListSubscriptionRequestsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists Amazon DataZone subscription requests.</p>"
    },
    "ListSubscriptionTargets":{
      "name":"ListSubscriptionTargets",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/subscription-targets",
        "responseCode":200
      },
      "input":{"shape":"ListSubscriptionTargetsInput"},
      "output":{"shape":"ListSubscriptionTargetsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists subscription targets in Amazon DataZone.</p>"
    },
    "ListSubscriptions":{
      "name":"ListSubscriptions",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/subscriptions",
        "responseCode":200
      },
      "input":{"shape":"ListSubscriptionsInput"},
      "output":{"shape":"ListSubscriptionsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists subscriptions in Amazon DataZone.</p>"
    },
    "ListTagsForResource":{
      "name":"ListTagsForResource",
      "http":{
        "method":"GET",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"ListTagsForResourceRequest"},
      "output":{"shape":"ListTagsForResourceResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists tags for the specified resource in Amazon DataZone.</p>"
    },
    "ListTimeSeriesDataPoints":{
      "name":"ListTimeSeriesDataPoints",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/time-series-data-points",
        "responseCode":200
      },
      "input":{"shape":"ListTimeSeriesDataPointsInput"},
      "output":{"shape":"ListTimeSeriesDataPointsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists time series data points.</p>"
    },
    "PostTimeSeriesDataPoints":{
      "name":"PostTimeSeriesDataPoints",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/time-series-data-points",
        "responseCode":201
      },
      "input":{"shape":"PostTimeSeriesDataPointsInput"},
      "output":{"shape":"PostTimeSeriesDataPointsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Posts time series data points to Amazon DataZone for the specified asset.</p>",
      "idempotent":true
    },
    "PutEnvironmentBlueprintConfiguration":{
      "name":"PutEnvironmentBlueprintConfiguration",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprint-configurations/{environmentBlueprintIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"PutEnvironmentBlueprintConfigurationInput"},
      "output":{"shape":"PutEnvironmentBlueprintConfigurationOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Writes the configuration for the specified environment blueprint in Amazon DataZone.</p>",
      "idempotent":true
    },
    "RejectPredictions":{
      "name":"RejectPredictions",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{identifier}/reject-predictions",
        "responseCode":200
      },
      "input":{"shape":"RejectPredictionsInput"},
      "output":{"shape":"RejectPredictionsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Rejects automatically generated business-friendly metadata for your Amazon DataZone assets.</p>",
      "idempotent":true
    },
    "RejectSubscriptionRequest":{
      "name":"RejectSubscriptionRequest",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests/{identifier}/reject",
        "responseCode":200
      },
      "input":{"shape":"RejectSubscriptionRequestInput"},
      "output":{"shape":"RejectSubscriptionRequestOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Rejects the specified subscription request.</p>",
      "idempotent":true
    },
    "RevokeSubscription":{
      "name":"RevokeSubscription",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/subscriptions/{identifier}/revoke",
        "responseCode":200
      },
      "input":{"shape":"RevokeSubscriptionInput"},
      "output":{"shape":"RevokeSubscriptionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Revokes a specified subscription in Amazon DataZone.</p>",
      "idempotent":true
    },
    "Search":{
      "name":"Search",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/search",
        "responseCode":200
      },
      "input":{"shape":"SearchInput"},
      "output":{"shape":"SearchOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Searches for assets in Amazon DataZone.</p>"
    },
    "SearchGroupProfiles":{
      "name":"SearchGroupProfiles",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/search-group-profiles",
        "responseCode":200
      },
      "input":{"shape":"SearchGroupProfilesInput"},
      "output":{"shape":"SearchGroupProfilesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Searches group profiles in Amazon DataZone.</p>"
    },
    "SearchListings":{
      "name":"SearchListings",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/listings/search",
        "responseCode":200
      },
      "input":{"shape":"SearchListingsInput"},
      "output":{"shape":"SearchListingsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Searches listings (records of an asset at a given time) in Amazon DataZone.</p>"
    },
    "SearchTypes":{
      "name":"SearchTypes",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/types-search",
        "responseCode":200
      },
      "input":{"shape":"SearchTypesInput"},
      "output":{"shape":"SearchTypesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Searches for types in Amazon DataZone.</p>"
    },
    "SearchUserProfiles":{
      "name":"SearchUserProfiles",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/search-user-profiles",
        "responseCode":200
      },
      "input":{"shape":"SearchUserProfilesInput"},
      "output":{"shape":"SearchUserProfilesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Searches user profiles in Amazon DataZone.</p>"
    },
    "StartDataSourceRun":{
      "name":"StartDataSourceRun",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources/{dataSourceIdentifier}/runs",
        "responseCode":200
      },
      "input":{"shape":"StartDataSourceRunInput"},
      "output":{"shape":"StartDataSourceRunOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Start the run of the specified data source in Amazon DataZone.</p>",
      "idempotent":true
    },
    "StartMetadataGenerationRun":{
      "name":"StartMetadataGenerationRun",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/metadata-generation-runs",
        "responseCode":200
      },
      "input":{"shape":"StartMetadataGenerationRunInput"},
      "output":{"shape":"StartMetadataGenerationRunOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Starts the metadata generation run.</p>",
      "idempotent":true
    },
    "TagResource":{
      "name":"TagResource",
      "http":{
        "method":"POST",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"TagResourceRequest"},
      "output":{"shape":"TagResourceResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Tags a resource in Amazon DataZone.</p>"
    },
    "UntagResource":{
      "name":"UntagResource",
      "http":{
        "method":"DELETE",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"UntagResourceRequest"},
      "output":{"shape":"UntagResourceResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Untags a resource in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateDataSource":{
      "name":"UpdateDataSource",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateDataSourceInput"},
      "output":{"shape":"UpdateDataSourceOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified data source in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateDomain":{
      "name":"UpdateDomain",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateDomainInput"},
      "output":{"shape":"UpdateDomainOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates a Amazon DataZone domain.</p>",
      "idempotent":true
    },
    "UpdateEnvironment":{
      "name":"UpdateEnvironment",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateEnvironmentInput"},
      "output":{"shape":"UpdateEnvironmentOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified environment in Amazon DataZone.</p>"
    },
    "UpdateEnvironmentProfile":{
      "name":"UpdateEnvironmentProfile",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-profiles/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateEnvironmentProfileInput"},
      "output":{"shape":"UpdateEnvironmentProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified environment profile in Amazon DataZone.</p>"
    },
    "UpdateGlossary":{
      "name":"UpdateGlossary",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/glossaries/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateGlossaryInput"},
      "output":{"shape":"UpdateGlossaryOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the business glossary in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateGlossaryTerm":{
      "name":"UpdateGlossaryTerm",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/glossary-terms/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateGlossaryTermInput"},
      "output":{"shape":"UpdateGlossaryTermOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates a business glossary term in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateGroupProfile":{
      "name":"UpdateGroupProfile",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/group-profiles/{groupIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateGroupProfileInput"},
      "output":{"shape":"UpdateGroupProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified group profile in Amazon DataZone.</p>"
    },
    "UpdateProject":{
      "name":"UpdateProject",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/projects/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateProjectInput"},
      "output":{"shape":"UpdateProjectOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified project in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateSubscriptionGrantStatus":{
      "name":"UpdateSubscriptionGrantStatus",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-grants/{identifier}/status/{assetIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateSubscriptionGrantStatusInput"},
      "output":{"shape":"UpdateSubscriptionGrantStatusOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the status of the specified subscription grant status in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateSubscriptionRequest":{
      "name":"UpdateSubscriptionRequest",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateSubscriptionRequestInput"},
      "output":{"shape":"UpdateSubscriptionRequestOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates a specified subscription request in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateSubscriptionTarget":{
      "name":"UpdateSubscriptionTarget",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/subscription-targets/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateSubscriptionTargetInput"},
      "output":{"shape":"UpdateSubscriptionTargetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified subscription target in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateUserProfile":{
      "name":"UpdateUserProfile",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/user-profiles/{userIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateUserProfileInput"},
      "output":{"shape":"UpdateUserProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified user profile in Amazon DataZone.</p>"
    }
  },
  "shapes":{
    "AcceptChoice":{
      "type":"structure",
      "required":["predictionTarget"],
      "members":{
        "editedValue":{
          "shape":"EditedValue",
          "documentation":"<p>The edit of the prediction.</p>"
        },
        "predictionChoice":{
          "shape":"Integer",
          "documentation":"<p>Specifies the prediction (aka, the automatically generated piece of metadata) that can be accepted.</p>"
        },
        "predictionTarget":{
          "shape":"String",
          "documentation":"<p>Specifies the target (for example, a column name) where a prediction can be accepted.</p>"
        }
      },
      "documentation":"<p>Specifies the prediction (aka, the automatically generated piece of metadata) and the target (for example, a column name) that can be accepted.</p>"
    },
    "AcceptChoices":{
      "type":"list",
      "member":{"shape":"AcceptChoice"}
    },
    "AcceptPredictionsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "acceptChoices":{
          "shape":"AcceptChoices",
          "documentation":"<p>Specifies the prediction (aka, the automatically generated piece of metadata) and the target (for example, a column name) that can be accepted.</p>"
        },
        "acceptRule":{
          "shape":"AcceptRule",
          "documentation":"<p>Specifies the rule (or the conditions) under which a prediction can be accepted.</p>"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier to ensure idempotency of the request. This field is automatically populated if not provided.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>The identifier of the asset.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision that is to be made to the asset.</p>",
          "location":"querystring",
          "locationName":"revision"
        }
      }
    },
    "AcceptPredictionsOutput":{
      "type":"structure",
      "required":[
        "assetId",
        "domainId",
        "revision"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the asset.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision that is to be made to the asset.</p>"
        }
      }
    },
    "AcceptRule":{
      "type":"structure",
      "members":{
        "rule":{
          "shape":"AcceptRuleBehavior",
          "documentation":"<p>Specifies whether you want to accept the top prediction for all targets or none.</p>"
        },
        "threshold":{
          "shape":"Float",
          "documentation":"<p>The confidence score that specifies the condition at which a prediction can be accepted.</p>"
        }
      },
      "documentation":"<p>Specifies the rule and the threshold under which a prediction can be accepted.</p>"
    },
    "AcceptRuleBehavior":{
      "type":"string",
      "enum":[
        "ALL",
        "NONE"
      ]
    },
    "AcceptSubscriptionRequestInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>A description that specifies the reason for accepting the specified subscription request.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The Amazon DataZone domain where the specified subscription request is being accepted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The unique identifier of the subscription request that is to be accepted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "AcceptSubscriptionRequestOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "requestReason",
        "status",
        "subscribedListings",
        "subscribedPrincipals",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp that specifies when the subscription request was accepted.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>Specifies the Amazon DataZone user that accepted the specified subscription request.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>Specifies the reason for accepting the subscription request.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The unique identifier of the Amazon DataZone domain where the specified subscription request was accepted.</p>"
        },
        "id":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>Specifies the reason for requesting a subscription to the asset.</p>"
        },
        "reviewerId":{
          "shape":"String",
          "documentation":"<p>Specifes the ID of the Amazon DataZone user who reviewed the subscription request.</p>"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>Specifies the status of the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"AcceptSubscriptionRequestOutputSubscribedListingsList",
          "documentation":"<p>Specifies the asset for which the subscription request was created.</p>"
        },
        "subscribedPrincipals":{
          "shape":"AcceptSubscriptionRequestOutputSubscribedPrincipalsList",
          "documentation":"<p>Specifies the Amazon DataZone users who are subscribed to the asset specified in the subscription request.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>Specifies the timestamp when subscription request was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>Specifies the Amazon DataZone user who updated the subscription request.</p>"
        }
      }
    },
    "AcceptSubscriptionRequestOutputSubscribedListingsList":{
      "type":"list",
      "member":{"shape":"SubscribedListing"},
      "max":1,
      "min":1
    },
    "AcceptSubscriptionRequestOutputSubscribedPrincipalsList":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipal"},
      "max":1,
      "min":1
    },
    "AccessDeniedException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>You do not have sufficient access to perform this action.</p>",
      "error":{
        "httpStatusCode":403,
        "senderFault":true
      },
      "exception":true
    },
    "ActionLink":{
      "type":"string",
      "sensitive":true
    },
    "ApplicableAssetTypes":{
      "type":"list",
      "member":{"shape":"TypeName"}
    },
    "AssetId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "AssetIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "AssetItem":{
      "type":"structure",
      "required":[
        "domainId",
        "identifier",
        "name",
        "owningProjectId",
        "typeIdentifier",
        "typeRevision"
      ],
      "members":{
        "additionalAttributes":{
          "shape":"AssetItemAdditionalAttributes",
          "documentation":"<p>The additional attributes of a Amazon DataZone inventory asset. </p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the Amazon DataZone inventory asset was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the inventory asset.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of an Amazon DataZone inventory asset.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the inventory asset exists.</p>"
        },
        "externalIdentifier":{
          "shape":"ExternalIdentifier",
          "documentation":"<p>The external identifier of the Amazon DataZone inventory asset.</p>"
        },
        "firstRevisionCreatedAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the first revision of the inventory asset was created.</p>"
        },
        "firstRevisionCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the first revision of the inventory asset.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms attached to the Amazon DataZone inventory asset.</p>"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>the identifier of the Amazon DataZone inventory asset.</p>"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>The name of the Amazon DataZone inventory asset.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project that owns the inventory asset.</p>"
        },
        "typeIdentifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The identifier of the asset type of the specified Amazon DataZone inventory asset.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the inventory asset type.</p>"
        }
      },
      "documentation":"<p>A Amazon DataZone inventory asset.</p>"
    },
    "AssetItemAdditionalAttributes":{
      "type":"structure",
      "members":{
        "formsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The forms included in the additional attributes of an inventory asset.</p>"
        },
        "latestTimeSeriesDataPointFormsOutput":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The latest time series data points forms included in the additional attributes of an asset.</p>"
        },
        "readOnlyFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The read-only forms included in the additional attributes of an inventory asset.</p>"
        }
      },
      "documentation":"<p>The additional attributes of an inventory asset.</p>"
    },
    "AssetListing":{
      "type":"structure",
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of an asset published in an Amazon DataZone catalog. </p>"
        },
        "assetRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of an asset published in an Amazon DataZone catalog. </p>"
        },
        "assetType":{
          "shape":"TypeName",
          "documentation":"<p>The type of an asset published in an Amazon DataZone catalog. </p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when an asset published in an Amazon DataZone catalog was created. </p>"
        },
        "forms":{
          "shape":"Forms",
          "documentation":"<p>The metadata forms attached to an asset published in an Amazon DataZone catalog. </p>"
        },
        "glossaryTerms":{
          "shape":"DetailedGlossaryTerms",
          "documentation":"<p>The glossary terms attached to an asset published in an Amazon DataZone catalog. </p>"
        },
        "latestTimeSeriesDataPointForms":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The latest time series data points forms included in the additional attributes of an asset.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project where an asset published in an Amazon DataZone catalog exists. </p>"
        }
      },
      "documentation":"<p>An asset published in an Amazon DataZone catalog.</p>"
    },
    "AssetListingDetails":{
      "type":"structure",
      "required":[
        "listingId",
        "listingStatus"
      ],
      "members":{
        "listingId":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of an asset published in an Amazon DataZone catalog. </p>"
        },
        "listingStatus":{
          "shape":"ListingStatus",
          "documentation":"<p>The status of an asset published in an Amazon DataZone catalog. </p>"
        }
      },
      "documentation":"<p>The details of an asset published in an Amazon DataZone catalog. </p>"
    },
    "AssetListingItem":{
      "type":"structure",
      "members":{
        "additionalAttributes":{
          "shape":"AssetListingItemAdditionalAttributes",
          "documentation":"<p>The additional attributes of an asset published in an Amazon DataZone catalog.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when an asset published in an Amazon DataZone catalog was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of an asset published in an Amazon DataZone catalog.</p>"
        },
        "entityId":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of the inventory asset.</p>"
        },
        "entityRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the inventory asset.</p>"
        },
        "entityType":{
          "shape":"TypeName",
          "documentation":"<p>The type of the inventory asset.</p>"
        },
        "glossaryTerms":{
          "shape":"DetailedGlossaryTerms",
          "documentation":"<p>Glossary terms attached to the inventory asset.</p>"
        },
        "listingCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the listing.</p>"
        },
        "listingId":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of the listing (asset published in Amazon DataZone catalog).</p>"
        },
        "listingRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the listing (asset published in Amazon DataZone catalog).</p>"
        },
        "listingUpdatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the listing.</p>"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>The name of the inventory asset.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that owns the inventory asset.</p>"
        }
      },
      "documentation":"<p>The details of an asset published in an Amazon DataZone catalog.</p>"
    },
    "AssetListingItemAdditionalAttributes":{
      "type":"structure",
      "members":{
        "forms":{
          "shape":"Forms",
          "documentation":"<p>The metadata forms that form additional attributes of the metadata asset.</p>"
        },
        "latestTimeSeriesDataPointForms":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The latest time series data points forms included in the additional attributes of an asset.</p>"
        }
      },
      "documentation":"<p>Additional attributes of an inventory asset.</p>"
    },
    "AssetName":{
      "type":"string",
      "max":256,
      "min":1,
      "sensitive":true
    },
    "AssetRevision":{
      "type":"structure",
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when an inventory asset revison was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the asset revision.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The Amazon DataZone user who created the inventory asset.</p>"
        },
        "id":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of the inventory asset revision.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision details of the inventory asset.</p>"
        }
      },
      "documentation":"<p>The revision of an inventory asset.</p>"
    },
    "AssetRevisions":{
      "type":"list",
      "member":{"shape":"AssetRevision"}
    },
    "AssetTargetNameMap":{
      "type":"structure",
      "required":[
        "assetId",
        "targetName"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of the inventory asset.</p>"
        },
        "targetName":{
          "shape":"String",
          "documentation":"<p>The target name in the asset target name map.</p>"
        }
      },
      "documentation":"<p>The name map for assets.</p>"
    },
    "AssetTargetNames":{
      "type":"list",
      "member":{"shape":"AssetTargetNameMap"}
    },
    "AssetTypeIdentifier":{
      "type":"string",
      "max":513,
      "min":1,
      "pattern":"^(?!\\.)[\\w\\.]*\\w$"
    },
    "AssetTypeItem":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "name",
        "owningProjectId",
        "revision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the asset type was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the asset type.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the asset type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain where the asset type exists.</p>"
        },
        "formsOutput":{
          "shape":"FormsOutputMap",
          "documentation":"<p>The forms included in the details of the asset type.</p>"
        },
        "name":{
          "shape":"TypeName",
          "documentation":"<p>The name of the asset type.</p>"
        },
        "originDomainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain where the asset type was originally created.</p>"
        },
        "originProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project where the asset type exists.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project that owns the asset type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset type.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the asset type was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the asset type.</p>"
        }
      },
      "documentation":"<p>The details of the asset type.</p>"
    },
    "Attribute":{
      "type":"string",
      "max":128,
      "min":1
    },
    "AuthType":{
      "type":"string",
      "enum":[
        "IAM_IDC",
        "DISABLED"
      ]
    },
    "AuthorizedPrincipalIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9:/_-]*$"
    },
    "AuthorizedPrincipalIdentifiers":{
      "type":"list",
      "member":{"shape":"AuthorizedPrincipalIdentifier"},
      "max":10,
      "min":1
    },
    "AwsAccountId":{
      "type":"string",
      "pattern":"^\\d{12}$"
    },
    "AwsRegion":{
      "type":"string",
      "pattern":"^[a-z]{2}-[a-z]{4,10}-\\d$"
    },
    "Boolean":{
      "type":"boolean",
      "box":true
    },
    "BusinessNameGenerationConfiguration":{
      "type":"structure",
      "members":{
        "enabled":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the business name generation is enabled.</p>"
        }
      },
      "documentation":"<p>The configuration of the business name generation.</p>"
    },
    "CancelMetadataGenerationRunInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the metadata generation run is to be cancelled.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"MetadataGenerationRunIdentifier",
          "documentation":"<p>The ID of the metadata generation run.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "CancelMetadataGenerationRunOutput":{
      "type":"structure",
      "members":{
      }
    },
    "CancelSubscriptionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The unique identifier of the Amazon DataZone domain where the subscription request is being cancelled.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionId",
          "documentation":"<p>The unique identifier of the subscription that is being cancelled.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "CancelSubscriptionOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "status",
        "subscribedListing",
        "subscribedPrincipal",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp that specifies when the request to cancel the subscription was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>Specifies the Amazon DataZone user who is cancelling the subscription.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The unique identifier of the Amazon DataZone domain where the subscription is being cancelled.</p>"
        },
        "id":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subscription.</p>"
        },
        "retainPermissions":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the permissions to the asset are retained after the subscription is cancelled.</p>"
        },
        "status":{
          "shape":"SubscriptionStatus",
          "documentation":"<p>The status of the request to cancel the subscription.</p>"
        },
        "subscribedListing":{
          "shape":"SubscribedListing",
          "documentation":"<p>The asset to which a subscription is being cancelled.</p>"
        },
        "subscribedPrincipal":{
          "shape":"SubscribedPrincipal",
          "documentation":"<p>The Amazon DataZone user who is made a subscriber to the specified asset by the subscription that is being cancelled.</p>"
        },
        "subscriptionRequestId":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The unique ID of the subscripton request for the subscription that is being cancelled.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp that specifies when the subscription was cancelled.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user that cancelled the subscription.</p>"
        }
      }
    },
    "ChangeAction":{
      "type":"string",
      "enum":[
        "PUBLISH",
        "UNPUBLISH"
      ]
    },
    "ClientToken":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^[\\x21-\\x7E]+$"
    },
    "CloudFormationProperties":{
      "type":"structure",
      "required":["templateUrl"],
      "members":{
        "templateUrl":{
          "shape":"String",
          "documentation":"<p>The template URL of the cloud formation provisioning properties of the environment blueprint.</p>"
        }
      },
      "documentation":"<p>Part of the provisioning properties of the environment blueprint.</p>"
    },
    "ConfigurableActionParameter":{
      "type":"structure",
      "members":{
        "key":{
          "shape":"String",
          "documentation":"<p>The key of the configurable action parameter.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value of the configurable action parameter.</p>"
        }
      },
      "documentation":"<p>The details of the parameters for the configurable environment action.</p>"
    },
    "ConfigurableActionParameterList":{
      "type":"list",
      "member":{"shape":"ConfigurableActionParameter"}
    },
    "ConfigurableActionTypeAuthorization":{
      "type":"string",
      "enum":[
        "IAM",
        "HTTPS"
      ]
    },
    "ConfigurableEnvironmentAction":{
      "type":"structure",
      "required":[
        "parameters",
        "type"
      ],
      "members":{
        "auth":{
          "shape":"ConfigurableActionTypeAuthorization",
          "documentation":"<p>The authentication type of a configurable action of a Amazon DataZone environment. </p>"
        },
        "parameters":{
          "shape":"ConfigurableActionParameterList",
          "documentation":"<p>The parameters of a configurable action in a Amazon DataZone environment.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of a configurable action in a Amazon DataZone environment.</p>"
        }
      },
      "documentation":"<p>The configurable action of a Amazon DataZone environment.</p>"
    },
    "ConflictException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>There is a conflict while performing this action.</p>",
      "error":{
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true
    },
    "CreateAssetInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "name",
        "owningProjectIdentifier",
        "typeIdentifier"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>Asset description.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>Amazon DataZone domain where the asset is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "externalIdentifier":{
          "shape":"ExternalIdentifier",
          "documentation":"<p>The external identifier of the asset.</p>"
        },
        "formsInput":{
          "shape":"FormInputList",
          "documentation":"<p>Metadata forms attached to the asset.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>Glossary terms attached to the asset.</p>"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>Asset name.</p>"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The unique identifier of the project that owns this asset.</p>"
        },
        "predictionConfiguration":{
          "shape":"PredictionConfiguration",
          "documentation":"<p>The configuration of the automatically generated business-friendly metadata for the asset.</p>"
        },
        "typeIdentifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The unique identifier of this asset's type.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of this asset's type.</p>"
        }
      }
    },
    "CreateAssetOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "id",
        "name",
        "owningProjectId",
        "revision",
        "typeIdentifier",
        "typeRevision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the asset was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user that created this asset in the catalog.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the created asset.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset was created.</p>"
        },
        "externalIdentifier":{
          "shape":"ExternalIdentifier",
          "documentation":"<p>The external identifier of the asset.</p>"
        },
        "firstRevisionCreatedAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the first revision of the asset took place.</p>"
        },
        "firstRevisionCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user that made the first revision of the asset.</p>"
        },
        "formsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms that are attached to the created asset.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms that are attached to the created asset.</p>"
        },
        "id":{
          "shape":"AssetId",
          "documentation":"<p>The unique identifier of the created asset.</p>"
        },
        "latestTimeSeriesDataPointFormsOutput":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The latest data point that was imported into the time series form for the asset. </p>"
        },
        "listing":{
          "shape":"AssetListingDetails",
          "documentation":"<p>The details of an asset published in an Amazon DataZone catalog.</p>"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>The name of the created asset.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project that owns the created asset. </p>"
        },
        "predictionConfiguration":{
          "shape":"PredictionConfiguration",
          "documentation":"<p>The configuration of the automatically generated business-friendly metadata for the asset.</p>"
        },
        "readOnlyFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The read-only metadata forms that are attached to the created asset.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset.</p>"
        },
        "typeIdentifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The identifier of the created asset type.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision type of the asset.</p>"
        }
      }
    },
    "CreateAssetRevisionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier",
        "name"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The revised description of the asset.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The unique identifier of the domain where the asset is being revised.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "formsInput":{
          "shape":"FormInputList",
          "documentation":"<p>The metadata forms to be attached to the asset as part of asset revision.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms to be attached to the asset as part of asset revision.</p>"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>The identifier of the asset.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>Te revised name of the asset.</p>"
        },
        "predictionConfiguration":{
          "shape":"PredictionConfiguration",
          "documentation":"<p>The configuration of the automatically generated business-friendly metadata for the asset.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision type of the asset.</p>"
        }
      }
    },
    "CreateAssetRevisionOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "id",
        "name",
        "owningProjectId",
        "revision",
        "typeIdentifier",
        "typeRevision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the asset revision occured.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who performed the asset revision.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The revised asset description.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The unique identifier of the Amazon DataZone domain where the asset was revised.</p>"
        },
        "externalIdentifier":{
          "shape":"ExternalIdentifier",
          "documentation":"<p>The external identifier of the asset.</p>"
        },
        "firstRevisionCreatedAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the first asset revision occured.</p>"
        },
        "firstRevisionCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who performed the first asset revision.</p>"
        },
        "formsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms that were attached to the asset as part of the asset revision.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms that were attached to the asset as part of asset revision.</p>"
        },
        "id":{
          "shape":"AssetId",
          "documentation":"<p>The unique identifier of the asset revision.</p>"
        },
        "latestTimeSeriesDataPointFormsOutput":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The latest data point that was imported into the time series form for the asset. </p>"
        },
        "listing":{
          "shape":"AssetListingDetails",
          "documentation":"<p>The details of an asset published in an Amazon DataZone catalog. </p>"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>The revised name of the asset.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The unique identifier of the revised project that owns the asset.</p>"
        },
        "predictionConfiguration":{
          "shape":"PredictionConfiguration",
          "documentation":"<p>The configuration of the automatically generated business-friendly metadata for the asset.</p>"
        },
        "readOnlyFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The read-only metadata forms that were attached to the asset as part of the asset revision.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset.</p>"
        },
        "typeIdentifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The identifier of the revision type.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision type of the asset.</p>"
        }
      }
    },
    "CreateAssetTypeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "formsInput",
        "name",
        "owningProjectIdentifier"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The descripton of the custom asset type.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The unique identifier of the Amazon DataZone domain where the custom asset type is being created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "formsInput":{
          "shape":"FormsInputMap",
          "documentation":"<p>The metadata forms that are to be attached to the custom asset type.</p>"
        },
        "name":{
          "shape":"TypeName",
          "documentation":"<p>The name of the custom asset type.</p>"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project that is to own the custom asset type.</p>"
        }
      }
    },
    "CreateAssetTypeOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "name",
        "revision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the asset type is to be created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who creates this custom asset type.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the custom asset type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset type was created.</p>"
        },
        "formsOutput":{
          "shape":"FormsOutputMap",
          "documentation":"<p>The metadata forms that are attached to the asset type.</p>"
        },
        "name":{
          "shape":"TypeName",
          "documentation":"<p>The name of the asset type.</p>"
        },
        "originDomainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where the asset type was originally created.</p>"
        },
        "originProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project where the asset type was originally created.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project that currently owns this asset type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the custom asset type.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the custom type was created.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user that created the custom asset type.</p>"
        }
      }
    },
    "CreateDataSourceInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "name",
        "projectIdentifier",
        "type"
      ],
      "members":{
        "assetFormsInput":{
          "shape":"FormInputList",
          "documentation":"<p>The metadata forms that are to be attached to the assets that this data source works with.</p>"
        },
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "configuration":{
          "shape":"DataSourceConfigurationInput",
          "documentation":"<p>Specifies the configuration of the data source. It can be set to either <code>glueRunConfiguration</code> or <code>redshiftRunConfiguration</code>.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the data source.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where the data source is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>Specifies whether the data source is enabled.</p>"
        },
        "environmentIdentifier":{
          "shape":"String",
          "documentation":"<p>The unique identifier of the Amazon DataZone environment to which the data source publishes assets. </p>"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name of the data source.</p>"
        },
        "projectIdentifier":{
          "shape":"String",
          "documentation":"<p>The identifier of the Amazon DataZone project in which you want to add this data source.</p>"
        },
        "publishOnImport":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.</p>"
        },
        "recommendation":{
          "shape":"RecommendationConfiguration",
          "documentation":"<p>Specifies whether the business name generation is to be enabled for this data source.</p>"
        },
        "schedule":{
          "shape":"ScheduleConfiguration",
          "documentation":"<p>The schedule of the data source runs.</p>"
        },
        "type":{
          "shape":"DataSourceType",
          "documentation":"<p>The type of the data source.</p>"
        }
      }
    },
    "CreateDataSourceOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentId",
        "id",
        "name",
        "projectId"
      ],
      "members":{
        "assetFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms attached to the assets that this data source creates.</p>"
        },
        "configuration":{
          "shape":"DataSourceConfigurationOutput",
          "documentation":"<p>Specifies the configuration of the data source. It can be set to either <code>glueRunConfiguration</code> or <code>redshiftRunConfiguration</code>.</p>"
        },
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the data source.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data source is created.</p>"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>Specifies whether the data source is enabled.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The unique identifier of the Amazon DataZone environment to which the data source publishes assets. </p>"
        },
        "errorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"DataSourceId",
          "documentation":"<p>The unique identifier of the data source.</p>"
        },
        "lastRunAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp that specifies when the data source was last run.</p>"
        },
        "lastRunErrorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "lastRunStatus":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the last run of this data source.</p>"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name of the data source.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project to which the data source is added.</p>"
        },
        "publishOnImport":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.</p>"
        },
        "recommendation":{
          "shape":"RecommendationConfiguration",
          "documentation":"<p>Specifies whether the business name generation is to be enabled for this data source.</p>"
        },
        "schedule":{
          "shape":"ScheduleConfiguration",
          "documentation":"<p>The schedule of the data source runs.</p>"
        },
        "status":{
          "shape":"DataSourceStatus",
          "documentation":"<p>The status of the data source.</p>"
        },
        "type":{
          "shape":"DataSourceType",
          "documentation":"<p>The type of the data source.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was updated.</p>"
        }
      }
    },
    "CreateDomainInput":{
      "type":"structure",
      "required":[
        "domainExecutionRole",
        "name"
      ],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the Amazon DataZone domain.</p>"
        },
        "domainExecutionRole":{
          "shape":"RoleArn",
          "documentation":"<p>The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the Amazon Web Services account that houses the Amazon DataZone domain.</p>"
        },
        "kmsKeyIdentifier":{
          "shape":"KmsKeyArn",
          "documentation":"<p>The identifier of the Amazon Web Services Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data. </p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the Amazon DataZone domain.</p>"
        },
        "singleSignOn":{
          "shape":"SingleSignOn",
          "documentation":"<p>The single-sign on configuration of the Amazon DataZone domain.</p>"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>The tags specified for the Amazon DataZone domain.</p>"
        }
      }
    },
    "CreateDomainOutput":{
      "type":"structure",
      "required":["id"],
      "members":{
        "arn":{
          "shape":"String",
          "documentation":"<p>The ARN of the Amazon DataZone domain.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the Amazon DataZone domain.</p>"
        },
        "domainExecutionRole":{
          "shape":"RoleArn",
          "documentation":"<p>The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the Amazon Web Services account that houses the Amazon DataZone domain.</p>"
        },
        "id":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>"
        },
        "kmsKeyIdentifier":{
          "shape":"KmsKeyArn",
          "documentation":"<p>The identifier of the Amazon Web Services Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data. </p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the Amazon DataZone domain.</p>"
        },
        "portalUrl":{
          "shape":"String",
          "documentation":"<p>The URL of the data portal for this Amazon DataZone domain.</p>"
        },
        "singleSignOn":{
          "shape":"SingleSignOn",
          "documentation":"<p>The single-sign on configuration of the Amazon DataZone domain.</p>"
        },
        "status":{
          "shape":"DomainStatus",
          "documentation":"<p>The status of the Amazon DataZone domain.</p>"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>The tags specified for the Amazon DataZone domain.</p>"
        }
      }
    },
    "CreateEnvironmentInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentProfileIdentifier",
        "name",
        "projectIdentifier"
      ],
      "members":{
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the Amazon DataZone environment.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the environment is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentProfileIdentifier":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The identifier of the environment profile that is used to create this Amazon DataZone environment.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms that can be used in this Amazon DataZone environment.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the Amazon DataZone environment.</p>"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project in which this environment is created.</p>"
        },
        "userParameters":{
          "shape":"EnvironmentParametersList",
          "documentation":"<p>The user parameters of this Amazon DataZone environment.</p>"
        }
      }
    },
    "CreateEnvironmentOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "environmentProfileId",
        "name",
        "projectId",
        "provider"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The Amazon Web Services account in which the Amazon DataZone environment is created.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region in which the Amazon DataZone environment is created.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created this environment.</p>"
        },
        "deploymentProperties":{
          "shape":"DeploymentProperties",
          "documentation":"<p>The deployment properties of this Amazon DataZone environment.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone environment.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the environment is created.</p>"
        },
        "environmentActions":{
          "shape":"EnvironmentActionList",
          "documentation":"<p>The configurable actions of this Amazon DataZone environment.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint with which this Amazon DataZone environment was created.</p>"
        },
        "environmentProfileId":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The ID of the environment profile with which this Amazon DataZone environment was created.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms that can be used in this Amazon DataZone environment.</p>"
        },
        "id":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of this Amazon DataZone environment.</p>"
        },
        "lastDeployment":{
          "shape":"Deployment",
          "documentation":"<p>The details of the last deployment of this Amazon DataZone environment.</p>"
        },
        "name":{
          "shape":"EnvironmentName",
          "documentation":"<p>The name of this environment.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project in which this environment is created.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of this Amazon DataZone environment.</p>"
        },
        "provisionedResources":{
          "shape":"ResourceList",
          "documentation":"<p>The provisioned resources of this Amazon DataZone environment.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties of this Amazon DataZone environment.</p>"
        },
        "status":{
          "shape":"EnvironmentStatus",
          "documentation":"<p>The status of this Amazon DataZone environment.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this environment was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters of this Amazon DataZone environment.</p>"
        }
      }
    },
    "CreateEnvironmentProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentBlueprintIdentifier",
        "name",
        "projectIdentifier"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The Amazon Web Services account in which the Amazon DataZone environment is created.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region in which this environment profile is created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone environment profile.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this environment profile is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentBlueprintIdentifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint with which this environment profile is created.</p>"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p>The name of this Amazon DataZone environment profile.</p>"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project in which to create the environment profile.</p>"
        },
        "userParameters":{
          "shape":"EnvironmentParametersList",
          "documentation":"<p>The user parameters of this Amazon DataZone environment profile.</p>"
        }
      }
    },
    "CreateEnvironmentProfileOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "environmentBlueprintId",
        "id",
        "name"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The Amazon Web Services account ID in which this Amazon DataZone environment profile is created.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region in which this Amazon DataZone environment profile is created.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this environment profile was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created this environment profile.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone environment profile.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this environment profile is created.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint with which this environment profile is created.</p>"
        },
        "id":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The ID of this Amazon DataZone environment profile.</p>"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p>The name of this Amazon DataZone environment profile.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project in which this environment profile is created.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this environment profile was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters of this Amazon DataZone environment profile.</p>"
        }
      }
    },
    "CreateFormTypeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "model",
        "name",
        "owningProjectIdentifier"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone metadata form type.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this metadata form type is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "model":{
          "shape":"Model",
          "documentation":"<p>The model of this Amazon DataZone metadata form type.</p>"
        },
        "name":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of this Amazon DataZone metadata form type.</p>"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project that owns this metadata form type.</p>"
        },
        "status":{
          "shape":"FormTypeStatus",
          "documentation":"<p>The status of this Amazon DataZone metadata form type.</p>"
        }
      }
    },
    "CreateFormTypeOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "name",
        "revision"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone metadata form type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this metadata form type is created.</p>"
        },
        "name":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of this Amazon DataZone metadata form type.</p>"
        },
        "originDomainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this metadata form type was originally created.</p>"
        },
        "originProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project in which this Amazon DataZone metadata form type was originally created.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns this Amazon DataZone metadata form type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of this Amazon DataZone metadata form type.</p>"
        }
      }
    },
    "CreateGlossaryInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "name",
        "owningProjectIdentifier"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"GlossaryDescription",
          "documentation":"<p>The description of this business glossary.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "name":{
          "shape":"GlossaryName",
          "documentation":"<p>The name of this business glossary.</p>"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that currently owns business glossary.</p>"
        },
        "status":{
          "shape":"GlossaryStatus",
          "documentation":"<p>The status of this business glossary.</p>"
        }
      }
    },
    "CreateGlossaryOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId"
      ],
      "members":{
        "description":{
          "shape":"GlossaryDescription",
          "documentation":"<p>The description of this business glossary.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary is created.</p>"
        },
        "id":{
          "shape":"GlossaryId",
          "documentation":"<p>The ID of this business glossary.</p>"
        },
        "name":{
          "shape":"GlossaryName",
          "documentation":"<p>The name of this business glossary.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that currently owns this business glossary.</p>"
        },
        "status":{
          "shape":"GlossaryStatus",
          "documentation":"<p>The status of this business glossary.</p>"
        }
      }
    },
    "CreateGlossaryTermInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "glossaryIdentifier",
        "name"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary term is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "glossaryIdentifier":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The ID of the business glossary in which this term is created.</p>"
        },
        "longDescription":{
          "shape":"LongDescription",
          "documentation":"<p>The long description of this business glossary term.</p>"
        },
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name of this business glossary term.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The short description of this business glossary term.</p>"
        },
        "status":{
          "shape":"GlossaryTermStatus",
          "documentation":"<p>The status of this business glossary term.</p>"
        },
        "termRelations":{
          "shape":"TermRelations",
          "documentation":"<p>The term relations of this business glossary term.</p>"
        }
      }
    },
    "CreateGlossaryTermOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "glossaryId",
        "id",
        "name",
        "status"
      ],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary term is created.</p>"
        },
        "glossaryId":{
          "shape":"GlossaryId",
          "documentation":"<p>The ID of the business glossary in which this term is created.</p>"
        },
        "id":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The ID of this business glossary term.</p>"
        },
        "longDescription":{
          "shape":"LongDescription",
          "documentation":"<p>The long description of this business glossary term.</p>"
        },
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name of this business glossary term.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The short description of this business glossary term.</p>"
        },
        "status":{
          "shape":"GlossaryTermStatus",
          "documentation":"<p>The status of this business glossary term.</p>"
        },
        "termRelations":{
          "shape":"TermRelations",
          "documentation":"<p>The term relations of this business glossary term.</p>"
        }
      }
    },
    "CreateGroupProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "groupIdentifier"
      ],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p> A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the group profile is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "groupIdentifier":{
          "shape":"GroupIdentifier",
          "documentation":"<p>The identifier of the group for which the group profile is created.</p>"
        }
      }
    },
    "CreateGroupProfileOutput":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the group profile is created.</p>"
        },
        "groupName":{
          "shape":"GroupProfileName",
          "documentation":"<p>The name of the group for which group profile is created.</p>"
        },
        "id":{
          "shape":"GroupProfileId",
          "documentation":"<p>The identifier of the group profile.</p>"
        },
        "status":{
          "shape":"GroupProfileStatus",
          "documentation":"<p>The status of the group profile.</p>"
        }
      }
    },
    "CreateListingChangeSetInput":{
      "type":"structure",
      "required":[
        "action",
        "domainIdentifier",
        "entityIdentifier",
        "entityType"
      ],
      "members":{
        "action":{
          "shape":"ChangeAction",
          "documentation":"<p>Specifies whether to publish or unpublish a listing.</p>"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of the asset.</p>"
        },
        "entityRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of an asset.</p>"
        },
        "entityType":{
          "shape":"EntityType",
          "documentation":"<p>The type of an entity.</p>"
        }
      }
    },
    "CreateListingChangeSetOutput":{
      "type":"structure",
      "required":[
        "listingId",
        "listingRevision",
        "status"
      ],
      "members":{
        "listingId":{
          "shape":"ListingId",
          "documentation":"<p>The ID of the listing (a record of an asset at a given time).</p>"
        },
        "listingRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of a listing.</p>"
        },
        "status":{
          "shape":"ListingStatus",
          "documentation":"<p>Specifies the status of the listing.</p>"
        }
      }
    },
    "CreateProjectInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "name"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the Amazon DataZone project.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this project is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms that can be used in this Amazon DataZone project.</p>"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of the Amazon DataZone project.</p>"
        }
      }
    },
    "CreateProjectMembershipInput":{
      "type":"structure",
      "required":[
        "designation",
        "domainIdentifier",
        "member",
        "projectIdentifier"
      ],
      "members":{
        "designation":{
          "shape":"UserDesignation",
          "documentation":"<p>The designation of the project membership.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which project membership is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "member":{
          "shape":"Member",
          "documentation":"<p>The project member whose project membership was created.</p>"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project for which this project membership was created.</p>",
          "location":"uri",
          "locationName":"projectIdentifier"
        }
      }
    },
    "CreateProjectMembershipOutput":{
      "type":"structure",
      "members":{
      }
    },
    "CreateProjectOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the project.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the project.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the project was created.</p>"
        },
        "failureReasons":{
          "shape":"FailureReasons",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms that can be used in the project.</p>"
        },
        "id":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was last updated.</p>"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of the project.</p>"
        },
        "projectStatus":{
          "shape":"ProjectStatus",
          "documentation":"<p>The status of the Amazon DataZone project that was created.</p>"
        }
      }
    },
    "CreateSubscriptionGrantInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "grantedEntity",
        "subscriptionTargetIdentifier"
      ],
      "members":{
        "assetTargetNames":{
          "shape":"AssetTargetNames",
          "documentation":"<p>The names of the assets for which the subscription grant is created.</p>"
        },
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription grant is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment in which the subscription grant is created.</p>"
        },
        "grantedEntity":{
          "shape":"GrantedEntityInput",
          "documentation":"<p>The entity to which the subscription is to be granted.</p>"
        },
        "subscriptionTargetIdentifier":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target for which the subscription grant is created.</p>"
        }
      }
    },
    "CreateSubscriptionGrantOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "grantedEntity",
        "id",
        "status",
        "subscriptionTargetId",
        "updatedAt"
      ],
      "members":{
        "assets":{
          "shape":"SubscribedAssets",
          "documentation":"<p>The assets for which the subscription grant is created.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>A timestamp of when the subscription grant is created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription grant.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription grant is created.</p>"
        },
        "grantedEntity":{
          "shape":"GrantedEntity",
          "documentation":"<p>The entity to which the subscription is granted.</p>"
        },
        "id":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The ID of the subscription grant.</p>"
        },
        "status":{
          "shape":"SubscriptionGrantOverallStatus",
          "documentation":"<p>The status of the subscription grant.</p>"
        },
        "subscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subscription grant.</p>"
        },
        "subscriptionTargetId":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target for which the subscription grant is created.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>A timestamp of when the subscription grant was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription grant.</p>"
        }
      }
    },
    "CreateSubscriptionRequestInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "requestReason",
        "subscribedListings",
        "subscribedPrincipals"
      ],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription request is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"SubscribedListingInputs",
          "documentation":"<p>The published asset for which the subscription grant is to be created.</p>"
        },
        "subscribedPrincipals":{
          "shape":"SubscribedPrincipalInputs",
          "documentation":"<p>The Amazon DataZone principals for whom the subscription request is created.</p>"
        }
      }
    },
    "CreateSubscriptionRequestOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "requestReason",
        "status",
        "subscribedListings",
        "subscribedPrincipals",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>A timestamp of when the subscription request is created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription request.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>The decision comment of the subscription request.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in whcih the subscription request is created.</p>"
        },
        "id":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The ID of the subscription request.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the subscription request.</p>"
        },
        "reviewerId":{
          "shape":"String",
          "documentation":"<p>The ID of the reviewer of the subscription request.</p>"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>The status of the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"CreateSubscriptionRequestOutputSubscribedListingsList",
          "documentation":"<p>The published asset for which the subscription grant is to be created.</p>"
        },
        "subscribedPrincipals":{
          "shape":"CreateSubscriptionRequestOutputSubscribedPrincipalsList",
          "documentation":"<p>The subscribed principals of the subscription request.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription request was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription request.</p>"
        }
      }
    },
    "CreateSubscriptionRequestOutputSubscribedListingsList":{
      "type":"list",
      "member":{"shape":"SubscribedListing"},
      "max":1,
      "min":1
    },
    "CreateSubscriptionRequestOutputSubscribedPrincipalsList":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipal"},
      "max":1,
      "min":1
    },
    "CreateSubscriptionTargetInput":{
      "type":"structure",
      "required":[
        "applicableAssetTypes",
        "authorizedPrincipals",
        "domainIdentifier",
        "environmentIdentifier",
        "manageAccessRole",
        "name",
        "subscriptionTargetConfig",
        "type"
      ],
      "members":{
        "applicableAssetTypes":{
          "shape":"ApplicableAssetTypes",
          "documentation":"<p>The asset types that can be included in the subscription target.</p>"
        },
        "authorizedPrincipals":{
          "shape":"AuthorizedPrincipalIdentifiers",
          "documentation":"<p>The authorized principals of the subscription target.</p>"
        },
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which subscription target is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment in which subscription target is created.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "manageAccessRole":{
          "shape":"String",
          "documentation":"<p>The manage access role that is used to create the subscription target.</p>"
        },
        "name":{
          "shape":"SubscriptionTargetName",
          "documentation":"<p>The name of the subscription target.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the subscription target.</p>"
        },
        "subscriptionTargetConfig":{
          "shape":"SubscriptionTargetForms",
          "documentation":"<p>The configuration of the subscription target.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of the subscription target.</p>"
        }
      }
    },
    "CreateSubscriptionTargetOutput":{
      "type":"structure",
      "required":[
        "applicableAssetTypes",
        "authorizedPrincipals",
        "createdAt",
        "createdBy",
        "domainId",
        "environmentId",
        "id",
        "manageAccessRole",
        "name",
        "projectId",
        "provider",
        "subscriptionTargetConfig",
        "type"
      ],
      "members":{
        "applicableAssetTypes":{
          "shape":"ApplicableAssetTypes",
          "documentation":"<p>The asset types that can be included in the subscription target.</p>"
        },
        "authorizedPrincipals":{
          "shape":"AuthorizedPrincipalIdentifiers",
          "documentation":"<p>The authorised principals of the subscription target.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription target was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription target.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription target was created.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment in which the subscription target was created.</p>"
        },
        "id":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target.</p>"
        },
        "manageAccessRole":{
          "shape":"String",
          "documentation":"<p>The manage access role with which the subscription target was created.</p>"
        },
        "name":{
          "shape":"SubscriptionTargetName",
          "documentation":"<p>The name of the subscription target.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>???</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the subscription target.</p>"
        },
        "subscriptionTargetConfig":{
          "shape":"SubscriptionTargetForms",
          "documentation":"<p>The configuration of the subscription target.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of the subscription target.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription target was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription target.</p>"
        }
      }
    },
    "CreateUserProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "userIdentifier"
      ],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a user profile is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "userIdentifier":{
          "shape":"UserIdentifier",
          "documentation":"<p>The identifier of the user for which the user profile is created.</p>"
        },
        "userType":{
          "shape":"UserType",
          "documentation":"<p>The user type of the user for which the user profile is created.</p>"
        }
      }
    },
    "CreateUserProfileOutput":{
      "type":"structure",
      "members":{
        "details":{"shape":"UserProfileDetails"},
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a user profile is created.</p>"
        },
        "id":{
          "shape":"UserProfileId",
          "documentation":"<p>The identifier of the user profile.</p>"
        },
        "status":{
          "shape":"UserProfileStatus",
          "documentation":"<p>The status of the user profile.</p>"
        },
        "type":{
          "shape":"UserProfileType",
          "documentation":"<p>The type of the user profile.</p>"
        }
      }
    },
    "CreatedAt":{"type":"timestamp"},
    "CreatedBy":{"type":"string"},
    "CronString":{
      "type":"string",
      "max":256,
      "min":1,
      "pattern":"cron\\((\\b[0-5]?[0-9]\\b) (\\b2[0-3]\\b|\\b[0-1]?[0-9]\\b) (.*){1,5} (.*){1,5} (.*){1,5} (.*){1,5}\\)"
    },
    "CustomParameter":{
      "type":"structure",
      "required":[
        "fieldType",
        "keyName"
      ],
      "members":{
        "defaultValue":{
          "shape":"String",
          "documentation":"<p>The default value of the parameter.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the parameter.</p>"
        },
        "fieldType":{
          "shape":"String",
          "documentation":"<p>The filed type of the parameter.</p>"
        },
        "isEditable":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the parameter is editable.</p>"
        },
        "isOptional":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the custom parameter is optional.</p>"
        },
        "keyName":{
          "shape":"CustomParameterKeyNameString",
          "documentation":"<p>The key name of the parameter.</p>"
        }
      },
      "documentation":"<p>The details of user parameters of an environment blueprint.</p>"
    },
    "CustomParameterKeyNameString":{
      "type":"string",
      "pattern":"^[a-zA-Z_][a-zA-Z0-9_]*$"
    },
    "CustomParameterList":{
      "type":"list",
      "member":{"shape":"CustomParameter"}
    },
    "DataAssetActivityStatus":{
      "type":"string",
      "enum":[
        "FAILED",
        "PUBLISHING_FAILED",
        "SUCCEEDED_CREATED",
        "SUCCEEDED_UPDATED",
        "SKIPPED_ALREADY_IMPORTED",
        "SKIPPED_ARCHIVED",
        "SKIPPED_NO_ACCESS",
        "UNCHANGED"
      ]
    },
    "DataPointIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{0,36}$"
    },
    "DataProductDescription":{
      "type":"string",
      "max":4096,
      "min":1,
      "sensitive":true
    },
    "DataProductId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "DataProductItem":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p/>"
        },
        "itemId":{
          "shape":"DataProductId",
          "documentation":"<p/>"
        }
      },
      "documentation":"<p/>"
    },
    "DataProductItems":{
      "type":"list",
      "member":{"shape":"DataProductItem"},
      "max":100,
      "min":0
    },
    "DataProductName":{
      "type":"string",
      "max":64,
      "min":1,
      "sensitive":true
    },
    "DataProductSummary":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p/>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p/>"
        },
        "dataProductItems":{
          "shape":"DataProductItems",
          "documentation":"<p/>"
        },
        "description":{
          "shape":"DataProductDescription",
          "documentation":"<p/>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p/>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p/>"
        },
        "id":{
          "shape":"DataProductId",
          "documentation":"<p/>"
        },
        "name":{
          "shape":"DataProductName",
          "documentation":"<p/>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p/>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p/>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p/>"
        }
      },
      "documentation":"<p/>"
    },
    "DataSourceConfigurationInput":{
      "type":"structure",
      "members":{
        "glueRunConfiguration":{
          "shape":"GlueRunConfigurationInput",
          "documentation":"<p>The configuration of the Amazon Web Services Glue data source.</p>"
        },
        "redshiftRunConfiguration":{
          "shape":"RedshiftRunConfigurationInput",
          "documentation":"<p>The configuration of the Amazon Redshift data source.</p>"
        }
      },
      "documentation":"<p>The configuration of the data source.</p>",
      "union":true
    },
    "DataSourceConfigurationOutput":{
      "type":"structure",
      "members":{
        "glueRunConfiguration":{
          "shape":"GlueRunConfigurationOutput",
          "documentation":"<p>The configuration of the Amazon Web Services Glue data source.</p>"
        },
        "redshiftRunConfiguration":{
          "shape":"RedshiftRunConfigurationOutput",
          "documentation":"<p>The configuration of the Amazon Redshift data source.</p>"
        }
      },
      "documentation":"<p>The configuration of the data source.</p>",
      "union":true
    },
    "DataSourceErrorMessage":{
      "type":"structure",
      "required":["errorType"],
      "members":{
        "errorDetail":{
          "shape":"String",
          "documentation":"<p>The details of the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "errorType":{
          "shape":"DataSourceErrorType",
          "documentation":"<p>The type of the error message that is returned if the operation cannot be successfully completed.</p>"
        }
      },
      "documentation":"<p>The details of the error message that is returned if the operation cannot be successfully completed.</p>"
    },
    "DataSourceErrorType":{
      "type":"string",
      "enum":[
        "ACCESS_DENIED_EXCEPTION",
        "CONFLICT_EXCEPTION",
        "INTERNAL_SERVER_EXCEPTION",
        "RESOURCE_NOT_FOUND_EXCEPTION",
        "SERVICE_QUOTA_EXCEEDED_EXCEPTION",
        "THROTTLING_EXCEPTION",
        "VALIDATION_EXCEPTION"
      ]
    },
    "DataSourceId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "DataSourceRunActivities":{
      "type":"list",
      "member":{"shape":"DataSourceRunActivity"}
    },
    "DataSourceRunActivity":{
      "type":"structure",
      "required":[
        "createdAt",
        "dataAssetStatus",
        "dataSourceRunId",
        "database",
        "projectId",
        "technicalName",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when data source run activity was created.</p>"
        },
        "dataAssetId":{
          "shape":"String",
          "documentation":"<p>The identifier of the asset included in the data source run activity.</p>"
        },
        "dataAssetStatus":{
          "shape":"DataAssetActivityStatus",
          "documentation":"<p>The status of the asset included in the data source run activity.</p>"
        },
        "dataSourceRunId":{
          "shape":"DataSourceRunId",
          "documentation":"<p>The identifier of the data source for the data source run activity.</p>"
        },
        "database":{
          "shape":"Name",
          "documentation":"<p>The database included in the data source run activity.</p>"
        },
        "errorMessage":{"shape":"DataSourceErrorMessage"},
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The project ID included in the data source run activity.</p>"
        },
        "technicalDescription":{
          "shape":"Description",
          "documentation":"<p>The technical description included in the data source run activity.</p>"
        },
        "technicalName":{
          "shape":"Name",
          "documentation":"<p>The technical name included in the data source run activity.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when data source run activity was updated.</p>"
        }
      },
      "documentation":"<p>The activity details of the data source run.</p>"
    },
    "DataSourceRunId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "DataSourceRunStatus":{
      "type":"string",
      "enum":[
        "REQUESTED",
        "RUNNING",
        "FAILED",
        "PARTIALLY_SUCCEEDED",
        "SUCCESS"
      ]
    },
    "DataSourceRunSummaries":{
      "type":"list",
      "member":{"shape":"DataSourceRunSummary"}
    },
    "DataSourceRunSummary":{
      "type":"structure",
      "required":[
        "createdAt",
        "dataSourceId",
        "id",
        "projectId",
        "status",
        "type",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when a data source run was created.</p>"
        },
        "dataSourceId":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source of the data source run.</p>"
        },
        "errorMessage":{"shape":"DataSourceErrorMessage"},
        "id":{
          "shape":"DataSourceRunId",
          "documentation":"<p>The identifier of the data source run.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The project ID of the data source run.</p>"
        },
        "runStatisticsForAssets":{"shape":"RunStatisticsForAssets"},
        "startedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when a data source run was started.</p>"
        },
        "status":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the data source run.</p>"
        },
        "stoppedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when a data source run was stopped.</p>"
        },
        "type":{
          "shape":"DataSourceRunType",
          "documentation":"<p>The type of the data source run.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when a data source run was updated.</p>"
        }
      },
      "documentation":"<p>The details of a data source run.</p>"
    },
    "DataSourceRunType":{
      "type":"string",
      "enum":[
        "PRIORITIZED",
        "SCHEDULED"
      ]
    },
    "DataSourceStatus":{
      "type":"string",
      "enum":[
        "CREATING",
        "FAILED_CREATION",
        "READY",
        "UPDATING",
        "FAILED_UPDATE",
        "RUNNING",
        "DELETING",
        "FAILED_DELETION"
      ]
    },
    "DataSourceSummaries":{
      "type":"list",
      "member":{"shape":"DataSourceSummary"}
    },
    "DataSourceSummary":{
      "type":"structure",
      "required":[
        "dataSourceId",
        "domainId",
        "environmentId",
        "name",
        "status",
        "type"
      ],
      "members":{
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was created.</p>"
        },
        "dataSourceId":{
          "shape":"DataSourceId",
          "documentation":"<p>The ID of the data source.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data source exists.</p>"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>Specifies whether the data source is enabled.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment in which the data source exists.</p>"
        },
        "lastRunAssetCount":{
          "shape":"Integer",
          "documentation":"<p>The count of the assets created during the last data source run.</p>"
        },
        "lastRunAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source run was last performed.</p>"
        },
        "lastRunErrorMessage":{"shape":"DataSourceErrorMessage"},
        "lastRunStatus":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the last data source run.</p>"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name of the data source.</p>"
        },
        "schedule":{"shape":"ScheduleConfiguration"},
        "status":{
          "shape":"DataSourceStatus",
          "documentation":"<p>The status of the data source.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of the data source.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was updated.</p>"
        }
      },
      "documentation":"<p>The details of the data source.</p>"
    },
    "DataSourceType":{
      "type":"string",
      "max":256,
      "min":1
    },
    "DateTime":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "DecisionComment":{
      "type":"string",
      "max":4096,
      "min":1,
      "sensitive":true
    },
    "DeleteAssetInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>The identifier of the asset that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteAssetOutput":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteAssetTypeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset type is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The identifier of the asset type that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteAssetTypeOutput":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteDataSourceInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"clientToken"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data source is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteDataSourceOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentId",
        "id",
        "name",
        "projectId"
      ],
      "members":{
        "assetFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The asset data forms associated with this data source.</p>"
        },
        "configuration":{
          "shape":"DataSourceConfigurationOutput",
          "documentation":"<p>The configuration of the data source that is deleted.</p>"
        },
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when this data source was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the data source that is deleted.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data source is deleted.</p>"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>The enable setting of the data source that specifies whether the data source is enabled or disabled.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environemnt associated with this data source.</p>"
        },
        "errorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"DataSourceId",
          "documentation":"<p>The ID of the data source that is deleted.</p>"
        },
        "lastRunAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was last run.</p>"
        },
        "lastRunErrorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "lastRunStatus":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the last run of this data source.</p>"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name of the data source that is deleted.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project in which this data source exists and from which it's deleted.</p>"
        },
        "publishOnImport":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.</p>"
        },
        "schedule":{
          "shape":"ScheduleConfiguration",
          "documentation":"<p>The schedule of runs for this data source.</p>"
        },
        "status":{
          "shape":"DataSourceStatus",
          "documentation":"<p>The status of this data source.</p>"
        },
        "type":{
          "shape":"DataSourceType",
          "documentation":"<p>The type of this data source.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when this data source was updated.</p>"
        }
      }
    },
    "DeleteDomainInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"clientToken"
        },
        "identifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon Web Services domain that is to be deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "skipDeletionCheck":{
          "shape":"Boolean",
          "documentation":"<p>Specifies the optional flag to delete all child entities within the domain.</p>",
          "location":"querystring",
          "locationName":"skipDeletionCheck"
        }
      }
    },
    "DeleteDomainOutput":{
      "type":"structure",
      "required":["status"],
      "members":{
        "status":{
          "shape":"DomainStatus",
          "documentation":"<p>The status of the domain.</p>"
        }
      }
    },
    "DeleteEnvironmentBlueprintConfigurationInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentBlueprintIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the blueprint configuration is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentBlueprintIdentifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint the configuration of which is deleted.</p>",
          "location":"uri",
          "locationName":"environmentBlueprintIdentifier"
        }
      }
    },
    "DeleteEnvironmentBlueprintConfigurationOutput":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteEnvironmentInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the environment is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment that is to be deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteEnvironmentProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the environment profile is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The ID of the environment profile that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteFormTypeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "formTypeIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the metadata form type is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "formTypeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The ID of the metadata form type that is deleted.</p>",
          "location":"uri",
          "locationName":"formTypeIdentifier"
        }
      }
    },
    "DeleteFormTypeOutput":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteGlossaryInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the business glossary is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"GlossaryId",
          "documentation":"<p>The ID of the business glossary that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteGlossaryOutput":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteGlossaryTermInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the business glossary term is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The ID of the business glossary term that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteGlossaryTermOutput":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteListingInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ListingId",
          "documentation":"<p>The ID of the listing to be deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteListingOutput":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteProjectInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the project is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that is to be deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "skipDeletionCheck":{
          "shape":"Boolean",
          "documentation":"<p>Specifies the optional flag to delete all child entities within the project.</p>",
          "location":"querystring",
          "locationName":"skipDeletionCheck"
        }
      }
    },
    "DeleteProjectMembershipInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "member",
        "projectIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where project membership is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "member":{
          "shape":"Member",
          "documentation":"<p>The project member whose project membership is deleted.</p>"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project the membership to which is deleted.</p>",
          "location":"uri",
          "locationName":"projectIdentifier"
        }
      }
    },
    "DeleteProjectMembershipOutput":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteProjectOutput":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteSubscriptionGrantInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where the subscription grant is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The ID of the subscription grant that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteSubscriptionGrantOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "grantedEntity",
        "id",
        "status",
        "subscriptionTargetId",
        "updatedAt"
      ],
      "members":{
        "assets":{
          "shape":"SubscribedAssets",
          "documentation":"<p>The assets for which the subsctiption grant that is deleted gave access.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription grant that is deleted was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription grant that is deleted.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription grant is deleted.</p>"
        },
        "grantedEntity":{
          "shape":"GrantedEntity",
          "documentation":"<p>The entity to which the subscription is deleted.</p>"
        },
        "id":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The ID of the subscription grant that is deleted.</p>"
        },
        "status":{
          "shape":"SubscriptionGrantOverallStatus",
          "documentation":"<p>The status of the subscription grant that is deleted.</p>"
        },
        "subscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subsctiption whose subscription grant is to be deleted.</p>"
        },
        "subscriptionTargetId":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target associated with the subscription grant that is deleted.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription grant that is deleted was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription grant that is deleted.</p>"
        }
      }
    },
    "DeleteSubscriptionRequestInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription request is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The ID of the subscription request that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteSubscriptionTargetInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription target is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the Amazon DataZone environment in which the subscription target is deleted.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteTimeSeriesDataPointsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "formName"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier to ensure idempotency of the request. This field is automatically populated if not provided.</p>",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"clientToken"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain that houses the asset for which you want to delete a time series form.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of the asset for which you want to delete a time series form.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"TimeSeriesEntityType",
          "documentation":"<p>The type of the asset for which you want to delete a time series form.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series form that you want to delete.</p>",
          "location":"querystring",
          "locationName":"formName"
        }
      }
    },
    "DeleteTimeSeriesDataPointsOutput":{
      "type":"structure",
      "members":{
      }
    },
    "Deployment":{
      "type":"structure",
      "members":{
        "deploymentId":{
          "shape":"String",
          "documentation":"<p>The identifier of the last deployment of the environment.</p>"
        },
        "deploymentStatus":{
          "shape":"DeploymentStatus",
          "documentation":"<p>The status of the last deployment of the environment.</p>"
        },
        "deploymentType":{
          "shape":"DeploymentType",
          "documentation":"<p>The type of the last deployment of the environment.</p>"
        },
        "failureReason":{
          "shape":"EnvironmentError",
          "documentation":"<p>The failure reason of the last deployment of the environment.</p>"
        },
        "isDeploymentComplete":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the last deployment of the environment is complete.</p>"
        },
        "messages":{
          "shape":"DeploymentMessagesList",
          "documentation":"<p>The messages of the last deployment of the environment.</p>"
        }
      },
      "documentation":"<p>The details of the last deployment of the environment.</p>"
    },
    "DeploymentMessage":{"type":"string"},
    "DeploymentMessagesList":{
      "type":"list",
      "member":{"shape":"DeploymentMessage"}
    },
    "DeploymentProperties":{
      "type":"structure",
      "members":{
        "endTimeoutMinutes":{
          "shape":"DeploymentPropertiesEndTimeoutMinutesInteger",
          "documentation":"<p>The end timeout of the environment blueprint deployment.</p>"
        },
        "startTimeoutMinutes":{
          "shape":"DeploymentPropertiesStartTimeoutMinutesInteger",
          "documentation":"<p>The start timeout of the environment blueprint deployment.</p>"
        }
      },
      "documentation":"<p>The deployment properties of the Amazon DataZone blueprint.</p>"
    },
    "DeploymentPropertiesEndTimeoutMinutesInteger":{
      "type":"integer",
      "box":true,
      "max":225,
      "min":1
    },
    "DeploymentPropertiesStartTimeoutMinutesInteger":{
      "type":"integer",
      "box":true,
      "max":225,
      "min":1
    },
    "DeploymentStatus":{
      "type":"string",
      "enum":[
        "IN_PROGRESS",
        "SUCCESSFUL",
        "FAILED",
        "PENDING_DEPLOYMENT"
      ]
    },
    "DeploymentType":{
      "type":"string",
      "enum":[
        "CREATE",
        "UPDATE",
        "DELETE"
      ]
    },
    "Description":{
      "type":"string",
      "max":2048,
      "min":0,
      "sensitive":true
    },
    "DetailedGlossaryTerm":{
      "type":"structure",
      "members":{
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name of a glossary term attached to the inventory asset.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The shoft description of a glossary term attached to the inventory asset.</p>"
        }
      },
      "documentation":"<p>Details of a glossary term attached to the inventory asset.</p>"
    },
    "DetailedGlossaryTerms":{
      "type":"list",
      "member":{"shape":"DetailedGlossaryTerm"}
    },
    "DomainDescription":{
      "type":"string",
      "sensitive":true
    },
    "DomainId":{
      "type":"string",
      "pattern":"^dzd[-_][a-zA-Z0-9_-]{1,36}$"
    },
    "DomainName":{
      "type":"string",
      "sensitive":true
    },
    "DomainStatus":{
      "type":"string",
      "enum":[
        "CREATING",
        "AVAILABLE",
        "CREATION_FAILED",
        "DELETING",
        "DELETED",
        "DELETION_FAILED"
      ]
    },
    "DomainSummaries":{
      "type":"list",
      "member":{"shape":"DomainSummary"}
    },
    "DomainSummary":{
      "type":"structure",
      "required":[
        "arn",
        "createdAt",
        "id",
        "managedAccountId",
        "name",
        "status"
      ],
      "members":{
        "arn":{
          "shape":"String",
          "documentation":"<p>The ARN of the Amazon DataZone domain.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>A timestamp of when a Amazon DataZone domain was created.</p>"
        },
        "description":{
          "shape":"DomainDescription",
          "documentation":"<p>A description of an Amazon DataZone domain.</p>"
        },
        "id":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain.</p>"
        },
        "lastUpdatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>A timestamp of when a Amazon DataZone domain was last updated.</p>"
        },
        "managedAccountId":{
          "shape":"String",
          "documentation":"<p>The identifier of the Amazon Web Services account that manages the domain.</p>"
        },
        "name":{
          "shape":"DomainName",
          "documentation":"<p>A name of an Amazon DataZone domain.</p>"
        },
        "portalUrl":{
          "shape":"String",
          "documentation":"<p>The data portal URL for the Amazon DataZone domain.</p>"
        },
        "status":{
          "shape":"DomainStatus",
          "documentation":"<p>The status of the Amazon DataZone domain.</p>"
        }
      },
      "documentation":"<p>A summary of a Amazon DataZone domain.</p>"
    },
    "EditedValue":{
      "type":"string",
      "max":5000,
      "min":1,
      "sensitive":true
    },
    "EnableSetting":{
      "type":"string",
      "enum":[
        "ENABLED",
        "DISABLED"
      ]
    },
    "EnabledRegionList":{
      "type":"list",
      "member":{"shape":"RegionName"},
      "min":0
    },
    "EntityId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "EntityIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "EntityType":{
      "type":"string",
      "enum":["ASSET"]
    },
    "EnvironmentActionList":{
      "type":"list",
      "member":{"shape":"ConfigurableEnvironmentAction"}
    },
    "EnvironmentBlueprintConfigurationItem":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentBlueprintId"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when an environment blueprint was created.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which an environment blueprint exists.</p>"
        },
        "enabledRegions":{
          "shape":"EnabledRegionList",
          "documentation":"<p>The enabled Amazon Web Services Regions specified in a blueprint configuration.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the environment blueprint.</p>"
        },
        "manageAccessRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the manage access role specified in the environment blueprint configuration.</p>"
        },
        "provisioningRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the provisioning role specified in the environment blueprint configuration.</p>"
        },
        "regionalParameters":{
          "shape":"RegionalParameterMap",
          "documentation":"<p>The regional parameters of the environment blueprint.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment blueprint was updated.</p>"
        }
      },
      "documentation":"<p>The configuration details of an environment blueprint.</p>"
    },
    "EnvironmentBlueprintConfigurations":{
      "type":"list",
      "member":{"shape":"EnvironmentBlueprintConfigurationItem"}
    },
    "EnvironmentBlueprintId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "EnvironmentBlueprintName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[\\w -]+$"
    },
    "EnvironmentBlueprintSummaries":{
      "type":"list",
      "member":{"shape":"EnvironmentBlueprintSummary"}
    },
    "EnvironmentBlueprintSummary":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "provider",
        "provisioningProperties"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when an environment blueprint was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of a blueprint.</p>"
        },
        "id":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the blueprint.</p>"
        },
        "name":{
          "shape":"EnvironmentBlueprintName",
          "documentation":"<p>The name of the blueprint.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the blueprint.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties of the blueprint.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the blueprint was enabled.</p>"
        }
      },
      "documentation":"<p>The details of an environment blueprint summary.</p>"
    },
    "EnvironmentError":{
      "type":"structure",
      "required":["message"],
      "members":{
        "code":{
          "shape":"String",
          "documentation":"<p>The error code for the failure reason for the environment deployment.</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>The error message for the failure reason for the environment deployment.</p>"
        }
      },
      "documentation":"<p>The failure reasons for the environment deployment.</p>"
    },
    "EnvironmentId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "EnvironmentName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[\\w -]+$",
      "sensitive":true
    },
    "EnvironmentParameter":{
      "type":"structure",
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of an environment profile parameter.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value of an environment profile parameter.</p>"
        }
      },
      "documentation":"<p>The parameter details of an evironment profile.</p>"
    },
    "EnvironmentParametersList":{
      "type":"list",
      "member":{"shape":"EnvironmentParameter"}
    },
    "EnvironmentProfileId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "EnvironmentProfileName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[\\w -]+$",
      "sensitive":true
    },
    "EnvironmentProfileSummaries":{
      "type":"list",
      "member":{"shape":"EnvironmentProfileSummary"}
    },
    "EnvironmentProfileSummary":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "environmentBlueprintId",
        "id",
        "name"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The identifier of an Amazon Web Services account in which an environment profile exists.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services Region in which an environment profile exists.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when an environment profile was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created the environment profile.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the environment profile.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the environment profile exists.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of a blueprint with which an environment profile is created.</p>"
        },
        "id":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The identifier of the environment profile.</p>"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p>The name of the environment profile.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of a project in which an environment profile exists.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment profile was updated.</p>"
        }
      },
      "documentation":"<p>The details of an environment profile.</p>"
    },
    "EnvironmentStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "CREATING",
        "UPDATING",
        "DELETING",
        "CREATE_FAILED",
        "UPDATE_FAILED",
        "DELETE_FAILED",
        "VALIDATION_FAILED",
        "SUSPENDED",
        "DISABLED",
        "EXPIRED",
        "DELETED",
        "INACCESSIBLE"
      ]
    },
    "EnvironmentSummaries":{
      "type":"list",
      "member":{"shape":"EnvironmentSummary"}
    },
    "EnvironmentSummary":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "environmentProfileId",
        "name",
        "projectId",
        "provider"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The identifier of the Amazon Web Services account in which an environment exists.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services Region in which an environment exists.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created the environment.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the environment.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the environment exists.</p>"
        },
        "environmentProfileId":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The identifier of the environment profile with which the environment was created.</p>"
        },
        "id":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment.</p>"
        },
        "name":{
          "shape":"EnvironmentName",
          "documentation":"<p>The name of the environment.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project in which the environment exists.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the environment.</p>"
        },
        "status":{
          "shape":"EnvironmentStatus",
          "documentation":"<p>The status of the environment.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment was updated.</p>"
        }
      },
      "documentation":"<p>The details of an environment.</p>"
    },
    "ErrorMessage":{"type":"string"},
    "ExternalIdentifier":{
      "type":"string",
      "max":256,
      "min":1,
      "sensitive":true
    },
    "FailureCause":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>The description of the error message.</p>"
        }
      },
      "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
    },
    "FailureReasons":{
      "type":"list",
      "member":{"shape":"ProjectDeletionError"}
    },
    "Filter":{
      "type":"structure",
      "required":[
        "attribute",
        "value"
      ],
      "members":{
        "attribute":{
          "shape":"Attribute",
          "documentation":"<p>A search filter attribute in Amazon DataZone.</p>"
        },
        "value":{
          "shape":"FilterValueString",
          "documentation":"<p>A search filter value in Amazon DataZone.</p>"
        }
      },
      "documentation":"<p>A search filter in Amazon DataZone.</p>"
    },
    "FilterClause":{
      "type":"structure",
      "members":{
        "and":{
          "shape":"FilterList",
          "documentation":"<p>The 'and' search filter clause in Amazon DataZone.</p>"
        },
        "filter":{
          "shape":"Filter",
          "documentation":"<p>A search filter in Amazon DataZone.</p>"
        },
        "or":{
          "shape":"FilterList",
          "documentation":"<p>The 'or' search filter clause in Amazon DataZone.</p>"
        }
      },
      "documentation":"<p>A search filter clause in Amazon DataZone.</p>",
      "union":true
    },
    "FilterExpression":{
      "type":"structure",
      "required":[
        "expression",
        "type"
      ],
      "members":{
        "expression":{
          "shape":"FilterExpressionExpressionString",
          "documentation":"<p>The search filter expression.</p>"
        },
        "type":{
          "shape":"FilterExpressionType",
          "documentation":"<p>The search filter explresison type.</p>"
        }
      },
      "documentation":"<p>A filter expression in Amazon DataZone.</p>"
    },
    "FilterExpressionExpressionString":{
      "type":"string",
      "max":2048,
      "min":1
    },
    "FilterExpressionType":{
      "type":"string",
      "enum":[
        "INCLUDE",
        "EXCLUDE"
      ]
    },
    "FilterExpressions":{
      "type":"list",
      "member":{"shape":"FilterExpression"}
    },
    "FilterList":{
      "type":"list",
      "member":{"shape":"FilterClause"},
      "max":100,
      "min":1
    },
    "FilterValueString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "FirstName":{
      "type":"string",
      "sensitive":true
    },
    "Float":{
      "type":"float",
      "box":true
    },
    "FormEntryInput":{
      "type":"structure",
      "required":[
        "typeIdentifier",
        "typeRevision"
      ],
      "members":{
        "required":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether a form entry is required.</p>"
        },
        "typeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The type ID of the form entry.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The type revision of the form entry.</p>"
        }
      },
      "documentation":"<p>The details of the form entry.</p>"
    },
    "FormEntryOutput":{
      "type":"structure",
      "required":[
        "typeName",
        "typeRevision"
      ],
      "members":{
        "required":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether a form entry is required.</p>"
        },
        "typeName":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of the type of the form entry.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The type revision of the form entry.</p>"
        }
      },
      "documentation":"<p>The details of the form entry.</p>"
    },
    "FormInput":{
      "type":"structure",
      "required":["formName"],
      "members":{
        "content":{
          "shape":"FormInputContentString",
          "documentation":"<p>The content of the metadata form.</p>"
        },
        "formName":{
          "shape":"FormName",
          "documentation":"<p>The name of the metadata form.</p>"
        },
        "typeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The ID of the metadata form type.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the metadata form type.</p>"
        }
      },
      "documentation":"<p>The details of a metadata form.</p>",
      "sensitive":true
    },
    "FormInputContentString":{
      "type":"string",
      "max":150000,
      "min":0
    },
    "FormInputList":{
      "type":"list",
      "member":{"shape":"FormInput"},
      "max":10,
      "min":0,
      "sensitive":true
    },
    "FormName":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^(?![0-9_])\\w+$|^_\\w*[a-zA-Z0-9]\\w*$"
    },
    "FormOutput":{
      "type":"structure",
      "required":["formName"],
      "members":{
        "content":{
          "shape":"String",
          "documentation":"<p>The content of the metadata form.</p>"
        },
        "formName":{
          "shape":"FormName",
          "documentation":"<p>The name of the metadata form.</p>"
        },
        "typeName":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of the metadata form type.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the metadata form type.</p>"
        }
      },
      "documentation":"<p>The details of a metadata form.</p>"
    },
    "FormOutputList":{
      "type":"list",
      "member":{"shape":"FormOutput"},
      "max":10,
      "min":0
    },
    "FormTypeData":{
      "type":"structure",
      "required":[
        "domainId",
        "name",
        "revision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the metadata form type was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created teh metadata form type.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the metadata form type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the form type exists.</p>"
        },
        "imports":{
          "shape":"ImportList",
          "documentation":"<p>The imports specified in the form type.</p>"
        },
        "model":{
          "shape":"Model",
          "documentation":"<p>The model of the form type.</p>"
        },
        "name":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of the form type.</p>"
        },
        "originDomainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the form type was originally created.</p>"
        },
        "originProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project in which the form type was originally created.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that owns the form type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the form type.</p>"
        },
        "status":{
          "shape":"FormTypeStatus",
          "documentation":"<p>The status of the form type.</p>"
        }
      },
      "documentation":"<p>The details of the metadata form type.</p>"
    },
    "FormTypeIdentifier":{
      "type":"string",
      "max":385,
      "min":1,
      "pattern":"^(?!\\.)[\\w\\.]*\\w$"
    },
    "FormTypeName":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^(amazon.datazone.)?(?![0-9_])\\w+$|^_\\w*[a-zA-Z0-9]\\w*$",
      "sensitive":true
    },
    "FormTypeStatus":{
      "type":"string",
      "enum":[
        "ENABLED",
        "DISABLED"
      ]
    },
    "Forms":{"type":"string"},
    "FormsInputMap":{
      "type":"map",
      "key":{"shape":"FormName"},
      "value":{"shape":"FormEntryInput"},
      "max":10,
      "min":0
    },
    "FormsOutputMap":{
      "type":"map",
      "key":{"shape":"FormName"},
      "value":{"shape":"FormEntryOutput"},
      "max":10,
      "min":0
    },
    "GetAssetInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain to which the asset belongs.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>The ID of the Amazon DataZone asset.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the Amazon DataZone asset.</p>",
          "location":"querystring",
          "locationName":"revision"
        }
      }
    },
    "GetAssetOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "id",
        "name",
        "owningProjectId",
        "revision",
        "typeIdentifier",
        "typeRevision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the asset was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the asset.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the Amazon DataZone asset.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain to which the asset belongs.</p>"
        },
        "externalIdentifier":{
          "shape":"ExternalIdentifier",
          "documentation":"<p>The external ID of the asset.</p>"
        },
        "firstRevisionCreatedAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the first revision of the asset was created.</p>"
        },
        "firstRevisionCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the first revision of the asset.</p>"
        },
        "formsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms attached to the asset.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The business glossary terms attached to the asset.</p>"
        },
        "id":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the asset.</p>"
        },
        "latestTimeSeriesDataPointFormsOutput":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The latest data point that was imported into the time series form for the asset. </p>"
        },
        "listing":{
          "shape":"AssetListingDetails",
          "documentation":"<p>The listing of the asset.</p>"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>The name of the asset.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns the asset.</p>"
        },
        "readOnlyFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The read-only metadata forms attached to the asset.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset.</p>"
        },
        "typeIdentifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The ID of the asset type.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset type.</p>"
        }
      }
    },
    "GetAssetTypeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset type exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The ID of the asset type.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset type.</p>",
          "location":"querystring",
          "locationName":"revision"
        }
      }
    },
    "GetAssetTypeOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "name",
        "owningProjectId",
        "revision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the asset type was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the asset type.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the asset type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset type exists.</p>"
        },
        "formsOutput":{
          "shape":"FormsOutputMap",
          "documentation":"<p>The metadata forms attached to the asset type.</p>"
        },
        "name":{
          "shape":"TypeName",
          "documentation":"<p>The name of the asset type.</p>"
        },
        "originDomainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset type was originally created.</p>"
        },
        "originProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project in which the asset type was originally created.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project that owns the asset type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset type.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the asset type was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user that updated the asset type.</p>"
        }
      }
    },
    "GetDataSourceInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data source exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DataSourceId",
          "documentation":"<p>The ID of the Amazon DataZone data source.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetDataSourceOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentId",
        "id",
        "name",
        "projectId"
      ],
      "members":{
        "assetFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms attached to the assets created by this data source.</p>"
        },
        "configuration":{
          "shape":"DataSourceConfigurationOutput",
          "documentation":"<p>The configuration of the data source.</p>"
        },
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the data source.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data source exists.</p>"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>Specifies whether this data source is enabled or not.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment where this data source creates and publishes assets,</p>"
        },
        "errorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"DataSourceId",
          "documentation":"<p>The ID of the data source.</p>"
        },
        "lastRunAssetCount":{
          "shape":"Integer",
          "documentation":"<p>The number of assets created by the data source during its last run.</p>"
        },
        "lastRunAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of the last run of the data source.</p>"
        },
        "lastRunErrorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "lastRunStatus":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the last run of the data source.</p>"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name of the data source.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project where the data source creates and publishes assets.</p>"
        },
        "publishOnImport":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.</p>"
        },
        "recommendation":{
          "shape":"RecommendationConfiguration",
          "documentation":"<p>The recommendation configuration of the data source.</p>"
        },
        "schedule":{
          "shape":"ScheduleConfiguration",
          "documentation":"<p>The schedule of the data source runs.</p>"
        },
        "status":{
          "shape":"DataSourceStatus",
          "documentation":"<p>The status of the data source.</p>"
        },
        "type":{
          "shape":"DataSourceType",
          "documentation":"<p>The type of the data source.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was updated.</p>"
        }
      }
    },
    "GetDataSourceRunInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which this data source run was performed.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DataSourceRunId",
          "documentation":"<p>The ID of the data source run.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetDataSourceRunOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "dataSourceId",
        "domainId",
        "id",
        "projectId",
        "status",
        "type",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source run was created.</p>"
        },
        "dataSourceConfigurationSnapshot":{
          "shape":"String",
          "documentation":"<p>The configuration snapshot of the data source run.</p>"
        },
        "dataSourceId":{
          "shape":"DataSourceId",
          "documentation":"<p>The ID of the data source for this data source run.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which this data source run was performed.</p>"
        },
        "errorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"DataSourceRunId",
          "documentation":"<p>The ID of the data source run.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project in which this data source run occured.</p>"
        },
        "runStatisticsForAssets":{
          "shape":"RunStatisticsForAssets",
          "documentation":"<p>The asset statistics from this data source run.</p>"
        },
        "startedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when this data source run started.</p>"
        },
        "status":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of this data source run.</p>"
        },
        "stoppedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when this data source run stopped.</p>"
        },
        "type":{
          "shape":"DataSourceRunType",
          "documentation":"<p>The type of this data source run.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when this data source run was updated.</p>"
        }
      }
    },
    "GetDomainInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the specified Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetDomainOutput":{
      "type":"structure",
      "required":[
        "domainExecutionRole",
        "id",
        "status"
      ],
      "members":{
        "arn":{
          "shape":"String",
          "documentation":"<p>The ARN of the specified Amazon DataZone domain.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the Amazon DataZone domain was created.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the Amazon DataZone domain.</p>"
        },
        "domainExecutionRole":{
          "shape":"RoleArn",
          "documentation":"<p>The domain execution role with which the Amazon DataZone domain is created.</p>"
        },
        "id":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the specified Amazon DataZone domain.</p>"
        },
        "kmsKeyIdentifier":{
          "shape":"KmsKeyArn",
          "documentation":"<p>The identifier of the Amazon Web Services Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data. </p>"
        },
        "lastUpdatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the Amazon DataZone domain was last updated.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the Amazon DataZone domain.</p>"
        },
        "portalUrl":{
          "shape":"String",
          "documentation":"<p>The URL of the data portal for this Amazon DataZone domain.</p>"
        },
        "singleSignOn":{
          "shape":"SingleSignOn",
          "documentation":"<p>The single sing-on option of the specified Amazon DataZone domain.</p>"
        },
        "status":{
          "shape":"DomainStatus",
          "documentation":"<p>The status of the specified Amazon DataZone domain.</p>"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>The tags specified for the Amazon DataZone domain.</p>"
        }
      }
    },
    "GetEnvironmentBlueprintConfigurationInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentBlueprintIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where this blueprint exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentBlueprintIdentifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>He ID of the blueprint.</p>",
          "location":"uri",
          "locationName":"environmentBlueprintIdentifier"
        }
      }
    },
    "GetEnvironmentBlueprintConfigurationOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentBlueprintId"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this blueprint was created.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where this blueprint exists.</p>"
        },
        "enabledRegions":{
          "shape":"EnabledRegionList",
          "documentation":"<p>The Amazon Web Services regions in which this blueprint is enabled.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint.</p>"
        },
        "manageAccessRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the manage access role with which this blueprint is created.</p>"
        },
        "provisioningRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the provisioning role with which this blueprint is created.</p>"
        },
        "regionalParameters":{
          "shape":"RegionalParameterMap",
          "documentation":"<p>The regional parameters of the blueprint.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this blueprint was upated.</p>"
        }
      }
    },
    "GetEnvironmentBlueprintInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain in which this blueprint exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of this Amazon DataZone blueprint.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetEnvironmentBlueprintOutput":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "provider",
        "provisioningProperties"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>A timestamp of when this blueprint was created.</p>"
        },
        "deploymentProperties":{
          "shape":"DeploymentProperties",
          "documentation":"<p>The deployment properties of this Amazon DataZone blueprint.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone blueprint.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms attached to this Amazon DataZone blueprint.</p>"
        },
        "id":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of this Amazon DataZone blueprint.</p>"
        },
        "name":{
          "shape":"EnvironmentBlueprintName",
          "documentation":"<p>The name of this Amazon DataZone blueprint.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of this Amazon DataZone blueprint.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties of this Amazon DataZone blueprint.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this blueprint was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters of this blueprint.</p>"
        }
      }
    },
    "GetEnvironmentInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where the environment exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the Amazon DataZone environment.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetEnvironmentOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "environmentProfileId",
        "name",
        "projectId",
        "provider"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The ID of the Amazon Web Services account where the environment exists.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region where the environment exists.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created the environment.</p>"
        },
        "deploymentProperties":{
          "shape":"DeploymentProperties",
          "documentation":"<p>The deployment properties of the environment.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the environment.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where the environment exists.</p>"
        },
        "environmentActions":{
          "shape":"EnvironmentActionList",
          "documentation":"<p>The actions of the environment.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The blueprint with which the environment is created.</p>"
        },
        "environmentProfileId":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The ID of the environment profile with which the environment is created.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The business glossary terms that can be used in this environment.</p>"
        },
        "id":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment.</p>"
        },
        "lastDeployment":{
          "shape":"Deployment",
          "documentation":"<p>The details of the last deployment of the environment.</p>"
        },
        "name":{
          "shape":"EnvironmentName",
          "documentation":"<p>The name of the environment.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project in which this environment is created.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of this Amazon DataZone environment.</p>"
        },
        "provisionedResources":{
          "shape":"ResourceList",
          "documentation":"<p>The provisioned resources of this Amazon DataZone environment.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties of this Amazon DataZone environment.</p>"
        },
        "status":{
          "shape":"EnvironmentStatus",
          "documentation":"<p>The status of this Amazon DataZone environment.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this environment was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters of this Amazon DataZone environment.</p>"
        }
      }
    },
    "GetEnvironmentProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this environment profile exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The ID of the environment profile.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetEnvironmentProfileOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "environmentBlueprintId",
        "id",
        "name"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The ID of the Amazon Web Services account where this environment profile exists.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region where this environment profile exists.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this environment profile was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created this environment profile.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the environment profile.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this environment profile exists.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint with which this environment profile is created.</p>"
        },
        "id":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The ID of the environment profile.</p>"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p>The name of the environment profile.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project in which this environment profile is created.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this environment profile was upated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters of the environment profile.</p>"
        }
      }
    },
    "GetFormTypeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "formTypeIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this metadata form type exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "formTypeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The ID of the metadata form type.</p>",
          "location":"uri",
          "locationName":"formTypeIdentifier"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of this metadata form type.</p>",
          "location":"querystring",
          "locationName":"revision"
        }
      }
    },
    "GetFormTypeOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "model",
        "name",
        "revision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when this metadata form type was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created this metadata form type.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the metadata form type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this metadata form type exists.</p>"
        },
        "imports":{
          "shape":"ImportList",
          "documentation":"<p>The imports of the metadata form type.</p>"
        },
        "model":{
          "shape":"Model",
          "documentation":"<p>The model of the metadata form type.</p>"
        },
        "name":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of the metadata form type.</p>"
        },
        "originDomainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the metadata form type was originally created.</p>"
        },
        "originProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project in which this metadata form type was originally created.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns this metadata form type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the metadata form type.</p>"
        },
        "status":{
          "shape":"FormTypeStatus",
          "documentation":"<p>The status of the metadata form type.</p>"
        }
      }
    },
    "GetGlossaryInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"GlossaryId",
          "documentation":"<p>The ID of the business glossary.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetGlossaryOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId",
        "status"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when this business glossary was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created this business glossary.</p>"
        },
        "description":{
          "shape":"GlossaryDescription",
          "documentation":"<p>The description of the business glossary.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary exists.</p>"
        },
        "id":{
          "shape":"GlossaryId",
          "documentation":"<p>The ID of the business glossary.</p>"
        },
        "name":{
          "shape":"GlossaryName",
          "documentation":"<p>The name of the business glossary.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns this business glossary.</p>"
        },
        "status":{
          "shape":"GlossaryStatus",
          "documentation":"<p>The status of the business glossary.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the business glossary was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the business glossary.</p>"
        }
      }
    },
    "GetGlossaryTermInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary term exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The ID of the business glossary term.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetGlossaryTermOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "glossaryId",
        "id",
        "name",
        "status"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the business glossary term was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the business glossary.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary term exists.</p>"
        },
        "glossaryId":{
          "shape":"GlossaryId",
          "documentation":"<p>The ID of the business glossary to which this term belongs.</p>"
        },
        "id":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The ID of the business glossary term.</p>"
        },
        "longDescription":{
          "shape":"LongDescription",
          "documentation":"<p>The long description of the business glossary term.</p>"
        },
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name of the business glossary term.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The short decription of the business glossary term.</p>"
        },
        "status":{
          "shape":"GlossaryTermStatus",
          "documentation":"<p>The status of the business glossary term.</p>"
        },
        "termRelations":{
          "shape":"TermRelations",
          "documentation":"<p>The relations of the business glossary term.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the business glossary term was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the business glossary term.</p>"
        }
      }
    },
    "GetGroupProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "groupIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the group profile exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "groupIdentifier":{
          "shape":"GroupIdentifier",
          "documentation":"<p>The identifier of the group profile.</p>",
          "location":"uri",
          "locationName":"groupIdentifier"
        }
      }
    },
    "GetGroupProfileOutput":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the group profile exists.</p>"
        },
        "groupName":{
          "shape":"GroupProfileName",
          "documentation":"<p>The name of the group for which the specified group profile exists.</p>"
        },
        "id":{
          "shape":"GroupProfileId",
          "documentation":"<p>The identifier of the group profile.</p>"
        },
        "status":{
          "shape":"GroupProfileStatus",
          "documentation":"<p>The identifier of the group profile.</p>"
        }
      }
    },
    "GetIamPortalLoginUrlInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>the ID of the Amazon DataZone domain the data portal of which you want to get.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        }
      }
    },
    "GetIamPortalLoginUrlOutput":{
      "type":"structure",
      "required":["userProfileId"],
      "members":{
        "authCodeUrl":{
          "shape":"String",
          "documentation":"<p>The data portal URL of the specified Amazon DataZone domain.</p>"
        },
        "userProfileId":{
          "shape":"String",
          "documentation":"<p>The ID of the user profile.</p>"
        }
      }
    },
    "GetListingInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ListingId",
          "documentation":"<p>The ID of the listing.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "listingRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the listing.</p>",
          "location":"querystring",
          "locationName":"listingRevision"
        }
      }
    },
    "GetListingOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "listingRevision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the listing was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the listing.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the listing.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain.</p>"
        },
        "id":{
          "shape":"ListingId",
          "documentation":"<p>The ID of the listing.</p>"
        },
        "item":{
          "shape":"ListingItem",
          "documentation":"<p>The details of a listing.</p>"
        },
        "listingRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of a listing.</p>"
        },
        "name":{
          "shape":"ListingName",
          "documentation":"<p>The name of the listing.</p>"
        },
        "status":{
          "shape":"ListingStatus",
          "documentation":"<p>The status of the listing.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the listing was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the listing.</p>"
        }
      }
    },
    "GetMetadataGenerationRunInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain the metadata generation run of which you want to get.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"MetadataGenerationRunIdentifier",
          "documentation":"<p>The identifier of the metadata generation run.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetMetadataGenerationRunOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "owningProjectId"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the metadata generation run was start.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who started the metadata generation run.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain the metadata generation run of which you want to get.</p>"
        },
        "id":{
          "shape":"MetadataGenerationRunIdentifier",
          "documentation":"<p>The ID of the metadata generation run.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns the assets for which you're running metadata generation.</p>"
        },
        "status":{
          "shape":"MetadataGenerationRunStatus",
          "documentation":"<p>The status of the metadata generation run.</p>"
        },
        "target":{
          "shape":"MetadataGenerationRunTarget",
          "documentation":"<p>The asset for which you're generating metadata.</p>"
        },
        "type":{
          "shape":"MetadataGenerationRunType",
          "documentation":"<p>The type of metadata generation run.</p>"
        }
      }
    },
    "GetProjectInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the project exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetProjectOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the project.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the project.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the project exists.</p>"
        },
        "failureReasons":{
          "shape":"FailureReasons",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The business glossary terms that can be used in the project.</p>"
        },
        "id":{
          "shape":"ProjectId",
          "documentation":"<p>&gt;The ID of the project.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was last updated.</p>"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of the project.</p>"
        },
        "projectStatus":{
          "shape":"ProjectStatus",
          "documentation":"<p>The status of the project.</p>"
        }
      }
    },
    "GetSubscriptionGrantInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription grant exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The ID of the subscription grant.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetSubscriptionGrantOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "grantedEntity",
        "id",
        "status",
        "subscriptionTargetId",
        "updatedAt"
      ],
      "members":{
        "assets":{
          "shape":"SubscribedAssets",
          "documentation":"<p>The assets for which the subscription grant is created.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription grant is created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription grant.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription grant exists.</p>"
        },
        "grantedEntity":{
          "shape":"GrantedEntity",
          "documentation":"<p>The entity to which the subscription is granted.</p>"
        },
        "id":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The ID of the subscription grant.</p>"
        },
        "status":{
          "shape":"SubscriptionGrantOverallStatus",
          "documentation":"<p>The status of the subscription grant.</p>"
        },
        "subscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subscription.</p>"
        },
        "subscriptionTargetId":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The subscription target ID associated with the subscription grant.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription grant was upated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription grant.</p>"
        }
      }
    },
    "GetSubscriptionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionId",
          "documentation":"<p>The ID of the subscription.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetSubscriptionOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "status",
        "subscribedListing",
        "subscribedPrincipal",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription exists.</p>"
        },
        "id":{
          "shape":"SubscriptionId",
          "documentation":"<p>The ID of the subscription.</p>"
        },
        "retainPermissions":{
          "shape":"Boolean",
          "documentation":"<p>The retain permissions of the subscription.</p>"
        },
        "status":{
          "shape":"SubscriptionStatus",
          "documentation":"<p>The status of the subscription.</p>"
        },
        "subscribedListing":{
          "shape":"SubscribedListing",
          "documentation":"<p>The details of the published asset for which the subscription grant is created.</p>"
        },
        "subscribedPrincipal":{
          "shape":"SubscribedPrincipal",
          "documentation":"<p>The principal that owns the subscription.</p>"
        },
        "subscriptionRequestId":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The ID of the subscription request.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription.</p>"
        }
      }
    },
    "GetSubscriptionRequestDetailsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to get the subscription request details.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request the details of which to get.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetSubscriptionRequestDetailsOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "requestReason",
        "status",
        "subscribedListings",
        "subscribedPrincipals",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the specified subscription request was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription request.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>The decision comment of the subscription request.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The Amazon DataZone domain of the subscription request.</p>"
        },
        "id":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the subscription request.</p>"
        },
        "reviewerId":{
          "shape":"String",
          "documentation":"<p>The identifier of the Amazon DataZone user who reviewed the subscription request.</p>"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>The status of the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"GetSubscriptionRequestDetailsOutputSubscribedListingsList",
          "documentation":"<p>The subscribed listings in the subscription request.</p>"
        },
        "subscribedPrincipals":{
          "shape":"GetSubscriptionRequestDetailsOutputSubscribedPrincipalsList",
          "documentation":"<p>The subscribed principals in the subscription request.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription request was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription request.</p>"
        }
      }
    },
    "GetSubscriptionRequestDetailsOutputSubscribedListingsList":{
      "type":"list",
      "member":{"shape":"SubscribedListing"},
      "max":1,
      "min":1
    },
    "GetSubscriptionRequestDetailsOutputSubscribedPrincipalsList":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipal"},
      "max":1,
      "min":1
    },
    "GetSubscriptionTargetInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription target exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment associated with the subscription target.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetSubscriptionTargetOutput":{
      "type":"structure",
      "required":[
        "applicableAssetTypes",
        "authorizedPrincipals",
        "createdAt",
        "createdBy",
        "domainId",
        "environmentId",
        "id",
        "manageAccessRole",
        "name",
        "projectId",
        "provider",
        "subscriptionTargetConfig",
        "type"
      ],
      "members":{
        "applicableAssetTypes":{
          "shape":"ApplicableAssetTypes",
          "documentation":"<p>The asset types associated with the subscription target.</p>"
        },
        "authorizedPrincipals":{
          "shape":"AuthorizedPrincipalIdentifiers",
          "documentation":"<p>The authorized principals of the subscription target.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription target was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription target.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription target exists.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment associated with the subscription target.</p>"
        },
        "id":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target.</p>"
        },
        "manageAccessRole":{
          "shape":"String",
          "documentation":"<p>The manage access role with which the subscription target was created.</p>"
        },
        "name":{
          "shape":"SubscriptionTargetName",
          "documentation":"<p>The name of the subscription target.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project associated with the subscription target.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the subscription target.</p>"
        },
        "subscriptionTargetConfig":{
          "shape":"SubscriptionTargetForms",
          "documentation":"<p>The configuration of teh subscription target.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of the subscription target.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription target was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription target.</p>"
        }
      }
    },
    "GetTimeSeriesDataPointInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "formName",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain that houses the asset for which you want to get the data point.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of the asset for which you want to get the data point.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"TimeSeriesEntityType",
          "documentation":"<p>The type of the asset for which you want to get the data point.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series form that houses the data point that you want to get.</p>",
          "location":"querystring",
          "locationName":"formName"
        },
        "identifier":{
          "shape":"TimeSeriesDataPointIdentifier",
          "documentation":"<p>The ID of the data point that you want to get.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetTimeSeriesDataPointOutput":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain that houses the asset data point that you want to get.</p>"
        },
        "entityId":{
          "shape":"EntityId",
          "documentation":"<p>The ID of the asset for which you want to get the data point.</p>"
        },
        "entityType":{
          "shape":"TimeSeriesEntityType",
          "documentation":"<p>The type of the asset for which you want to get the data point.</p>"
        },
        "form":{
          "shape":"TimeSeriesDataPointFormOutput",
          "documentation":"<p>The time series form that houses the data point that you want to get.</p>"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series form that houses the data point that you want to get.</p>"
        }
      }
    },
    "GetUserProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "userIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>the ID of the Amazon DataZone domain the data portal of which you want to get.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "type":{
          "shape":"UserProfileType",
          "documentation":"<p>The type of the user profile.</p>",
          "location":"querystring",
          "locationName":"type"
        },
        "userIdentifier":{
          "shape":"UserIdentifier",
          "documentation":"<p>The identifier of the user for which you want to get the user profile.</p>",
          "location":"uri",
          "locationName":"userIdentifier"
        }
      }
    },
    "GetUserProfileOutput":{
      "type":"structure",
      "members":{
        "details":{"shape":"UserProfileDetails"},
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>the identifier of the Amazon DataZone domain of which you want to get the user profile.</p>"
        },
        "id":{
          "shape":"UserProfileId",
          "documentation":"<p>The identifier of the user profile.</p>"
        },
        "status":{
          "shape":"UserProfileStatus",
          "documentation":"<p>The status of the user profile.</p>"
        },
        "type":{
          "shape":"UserProfileType",
          "documentation":"<p>The type of the user profile.</p>"
        }
      }
    },
    "GlossaryDescription":{
      "type":"string",
      "max":4096,
      "min":0,
      "sensitive":true
    },
    "GlossaryId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "GlossaryItem":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId",
        "status"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the glossary was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the glossary.</p>"
        },
        "description":{
          "shape":"GlossaryDescription",
          "documentation":"<p>The business glossary description.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the business glossary exists.</p>"
        },
        "id":{
          "shape":"GlossaryId",
          "documentation":"<p>The identifier of the glossary.</p>"
        },
        "name":{
          "shape":"GlossaryName",
          "documentation":"<p>The name of the glossary.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that owns the business glosary.</p>"
        },
        "status":{
          "shape":"GlossaryStatus",
          "documentation":"<p>The business glossary status.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the business glossary was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the business glossary.</p>"
        }
      },
      "documentation":"<p>The details of a business glossary.</p>"
    },
    "GlossaryName":{
      "type":"string",
      "max":256,
      "min":1,
      "sensitive":true
    },
    "GlossaryStatus":{
      "type":"string",
      "enum":[
        "DISABLED",
        "ENABLED"
      ]
    },
    "GlossaryTermId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "GlossaryTermItem":{
      "type":"structure",
      "required":[
        "domainId",
        "glossaryId",
        "id",
        "name",
        "status"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when a business glossary term was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the business glossary.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the business glossary exists.</p>"
        },
        "glossaryId":{
          "shape":"GlossaryId",
          "documentation":"<p>The identifier of the business glossary to which the term belongs.</p>"
        },
        "id":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The identifier of the business glossary term.</p>"
        },
        "longDescription":{
          "shape":"LongDescription",
          "documentation":"<p>The long description of the business glossary term.</p>"
        },
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name of the business glossary term.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The short description of the business glossary term.</p>"
        },
        "status":{
          "shape":"GlossaryTermStatus",
          "documentation":"<p>The status of the business glossary term.</p>"
        },
        "termRelations":{
          "shape":"TermRelations",
          "documentation":"<p>The relations of the business glossary term.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when a business glossary term was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the business glossary term.</p>"
        }
      },
      "documentation":"<p>The details of a business glossary term.</p>"
    },
    "GlossaryTermName":{
      "type":"string",
      "max":256,
      "min":1,
      "sensitive":true
    },
    "GlossaryTermStatus":{
      "type":"string",
      "enum":[
        "ENABLED",
        "DISABLED"
      ]
    },
    "GlossaryTerms":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":20,
      "min":1
    },
    "GlueRunConfigurationInput":{
      "type":"structure",
      "required":["relationalFilterConfigurations"],
      "members":{
        "autoImportDataQualityResult":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether to automatically import data quality metrics as part of the data source run.</p>"
        },
        "dataAccessRole":{
          "shape":"GlueRunConfigurationInputDataAccessRoleString",
          "documentation":"<p>The data access role included in the configuration details of the Amazon Web Services Glue data source.</p>"
        },
        "relationalFilterConfigurations":{
          "shape":"RelationalFilterConfigurations",
          "documentation":"<p>The relational filter configurations included in the configuration details of the Amazon Web Services Glue data source.</p>"
        }
      },
      "documentation":"<p>The configuration details of the Amazon Web Services Glue data source.</p>"
    },
    "GlueRunConfigurationInputDataAccessRoleString":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]{1,128}$"
    },
    "GlueRunConfigurationOutput":{
      "type":"structure",
      "required":["relationalFilterConfigurations"],
      "members":{
        "accountId":{
          "shape":"GlueRunConfigurationOutputAccountIdString",
          "documentation":"<p>The Amazon Web Services account ID included in the configuration details of the Amazon Web Services Glue data source. </p>"
        },
        "autoImportDataQualityResult":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether to automatically import data quality metrics as part of the data source run.</p>"
        },
        "dataAccessRole":{
          "shape":"GlueRunConfigurationOutputDataAccessRoleString",
          "documentation":"<p>The data access role included in the configuration details of the Amazon Web Services Glue data source. </p>"
        },
        "region":{
          "shape":"GlueRunConfigurationOutputRegionString",
          "documentation":"<p>The Amazon Web Services region included in the configuration details of the Amazon Web Services Glue data source. </p>"
        },
        "relationalFilterConfigurations":{
          "shape":"RelationalFilterConfigurations",
          "documentation":"<p>The relational filter configurations included in the configuration details of the Amazon Web Services Glue data source.</p>"
        }
      },
      "documentation":"<p>The configuration details of the Amazon Web Services Glue data source.</p>"
    },
    "GlueRunConfigurationOutputAccountIdString":{
      "type":"string",
      "max":12,
      "min":12,
      "pattern":"^\\d{12}$"
    },
    "GlueRunConfigurationOutputDataAccessRoleString":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]{1,128}$"
    },
    "GlueRunConfigurationOutputRegionString":{
      "type":"string",
      "max":16,
      "min":4,
      "pattern":"[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]"
    },
    "GrantedEntity":{
      "type":"structure",
      "members":{
        "listing":{
          "shape":"ListingRevision",
          "documentation":"<p>The listing for which a subscription is granted.</p>"
        }
      },
      "documentation":"<p>The details of a listing for which a subscription is granted.</p>",
      "union":true
    },
    "GrantedEntityInput":{
      "type":"structure",
      "members":{
        "listing":{
          "shape":"ListingRevisionInput",
          "documentation":"<p>The listing for which a subscription is to be granted.</p>"
        }
      },
      "documentation":"<p>The details of a listing for which a subscription is to be granted.</p>",
      "union":true
    },
    "GroupDetails":{
      "type":"structure",
      "required":["groupId"],
      "members":{
        "groupId":{
          "shape":"String",
          "documentation":"<p>The identifier of the group in Amazon DataZone.</p>"
        }
      },
      "documentation":"<p>The details of a group in Amazon DataZone.</p>"
    },
    "GroupIdentifier":{
      "type":"string",
      "pattern":"(^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$|[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\t\\n\\r  ]+)"
    },
    "GroupProfileId":{
      "type":"string",
      "pattern":"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
    },
    "GroupProfileName":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"^[a-zA-Z_0-9+=,.@-]+$",
      "sensitive":true
    },
    "GroupProfileStatus":{
      "type":"string",
      "enum":[
        "ASSIGNED",
        "NOT_ASSIGNED"
      ]
    },
    "GroupProfileSummaries":{
      "type":"list",
      "member":{"shape":"GroupProfileSummary"}
    },
    "GroupProfileSummary":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain of a group profile.</p>"
        },
        "groupName":{
          "shape":"GroupProfileName",
          "documentation":"<p>The group name of a group profile.</p>"
        },
        "id":{
          "shape":"GroupProfileId",
          "documentation":"<p>The ID of a group profile.</p>"
        },
        "status":{
          "shape":"GroupProfileStatus",
          "documentation":"<p>The status of a group profile.</p>"
        }
      },
      "documentation":"<p>The details of a group profile.</p>"
    },
    "GroupSearchText":{
      "type":"string",
      "max":1024,
      "min":0,
      "sensitive":true
    },
    "GroupSearchType":{
      "type":"string",
      "enum":[
        "SSO_GROUP",
        "DATAZONE_SSO_GROUP"
      ]
    },
    "IamUserProfileDetails":{
      "type":"structure",
      "members":{
        "arn":{
          "shape":"String",
          "documentation":"<p>The ARN of an IAM user profile in Amazon DataZone.</p>"
        }
      },
      "documentation":"<p>The details of an IAM user profile in Amazon DataZone.</p>"
    },
    "Import":{
      "type":"structure",
      "required":[
        "name",
        "revision"
      ],
      "members":{
        "name":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of the import.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the import.</p>"
        }
      },
      "documentation":"<p>The details of the import of the metadata form type.</p>"
    },
    "ImportList":{
      "type":"list",
      "member":{"shape":"Import"},
      "max":10,
      "min":1
    },
    "Integer":{
      "type":"integer",
      "box":true
    },
    "InternalServerException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The request has failed because of an unknown error, exception or failure.</p>",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true,
      "retryable":{"throttling":false}
    },
    "InventorySearchScope":{
      "type":"string",
      "enum":[
        "ASSET",
        "GLOSSARY",
        "GLOSSARY_TERM"
      ]
    },
    "KmsKeyArn":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$"
    },
    "LastName":{
      "type":"string",
      "sensitive":true
    },
    "ListAssetRevisionsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>The identifier of the asset.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of revisions to return in a single call to <code>ListAssetRevisions</code>. When the number of revisions to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListAssetRevisions</code> to list the next set of revisions.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of revisions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of revisions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListAssetRevisions</code> to list the next set of revisions.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListAssetRevisionsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"AssetRevisions",
          "documentation":"<p>The results of the <code>ListAssetRevisions</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of revisions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of revisions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListAssetRevisions</code> to list the next set of revisions.</p>"
        }
      }
    },
    "ListDataSourceRunActivitiesInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to list data source run activities.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DataSourceRunId",
          "documentation":"<p>The identifier of the data source run.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of activities to return in a single call to <code>ListDataSourceRunActivities</code>. When the number of activities to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListDataSourceRunActivities</code> to list the next set of activities.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of activities is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of activities, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSourceRunActivities</code> to list the next set of activities.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "status":{
          "shape":"DataAssetActivityStatus",
          "documentation":"<p>The status of the data source run.</p>",
          "location":"querystring",
          "locationName":"status"
        }
      }
    },
    "ListDataSourceRunActivitiesOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"DataSourceRunActivities",
          "documentation":"<p>The results of the <code>ListDataSourceRunActivities</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of activities is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of activities, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSourceRunActivities</code> to list the next set of activities.</p>"
        }
      }
    },
    "ListDataSourceRunsInput":{
      "type":"structure",
      "required":[
        "dataSourceIdentifier",
        "domainIdentifier"
      ],
      "members":{
        "dataSourceIdentifier":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source.</p>",
          "location":"uri",
          "locationName":"dataSourceIdentifier"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to invoke the <code>ListDataSourceRuns</code> action.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of runs to return in a single call to <code>ListDataSourceRuns</code>. When the number of runs to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListDataSourceRuns</code> to list the next set of runs.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of runs is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of runs, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSourceRuns</code> to list the next set of runs.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "status":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the data source.</p>",
          "location":"querystring",
          "locationName":"status"
        }
      }
    },
    "ListDataSourceRunsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"DataSourceRunSummaries",
          "documentation":"<p>The results of the <code>ListDataSourceRuns</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of runs is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of runs, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSourceRuns</code> to list the next set of runs.</p>"
        }
      }
    },
    "ListDataSourcesInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "projectIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to list the data sources.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"String",
          "documentation":"<p>The identifier of the environment in which to list the data sources.</p>",
          "location":"querystring",
          "locationName":"environmentIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of data sources to return in a single call to <code>ListDataSources</code>. When the number of data sources to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListDataSources</code> to list the next set of data sources.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name of the data source.</p>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of data sources is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of data sources, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSources</code> to list the next set of data sources.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "projectIdentifier":{
          "shape":"String",
          "documentation":"<p>The identifier of the project in which to list data sources.</p>",
          "location":"querystring",
          "locationName":"projectIdentifier"
        },
        "status":{
          "shape":"DataSourceStatus",
          "documentation":"<p>The status of the data source.</p>",
          "location":"querystring",
          "locationName":"status"
        },
        "type":{
          "shape":"DataSourceType",
          "documentation":"<p>The type of the data source.</p>",
          "location":"querystring",
          "locationName":"type"
        }
      }
    },
    "ListDataSourcesOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"DataSourceSummaries",
          "documentation":"<p>The results of the <code>ListDataSources</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of data sources is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of data sources, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSources</code> to list the next set of data sources.</p>"
        }
      }
    },
    "ListDomainsInput":{
      "type":"structure",
      "members":{
        "maxResults":{
          "shape":"MaxResultsForListDomains",
          "documentation":"<p>The maximum number of domains to return in a single call to <code>ListDomains</code>. When the number of domains to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListDomains</code> to list the next set of domains.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of domains is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of domains, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDomains</code> to list the next set of domains.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "status":{
          "shape":"DomainStatus",
          "documentation":"<p>The status of the data source.</p>",
          "location":"querystring",
          "locationName":"status"
        }
      }
    },
    "ListDomainsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"DomainSummaries",
          "documentation":"<p>The results of the <code>ListDomains</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of domains is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of domains, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDomains</code> to list the next set of domains.</p>"
        }
      }
    },
    "ListEnvironmentBlueprintConfigurationsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of blueprint configurations to return in a single call to <code>ListEnvironmentBlueprintConfigurations</code>. When the number of configurations to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListEnvironmentBlueprintConfigurations</code> to list the next set of configurations.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of blueprint configurations is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of configurations, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentBlueprintConfigurations</code> to list the next set of configurations.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListEnvironmentBlueprintConfigurationsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"EnvironmentBlueprintConfigurations",
          "documentation":"<p>The results of the <code>ListEnvironmentBlueprintConfigurations</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of blueprint configurations is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of configurations, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentBlueprintConfigurations</code> to list the next set of configurations.</p>"
        }
      }
    },
    "ListEnvironmentBlueprintsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "managed":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the environment blueprint is managed by Amazon DataZone.</p>",
          "location":"querystring",
          "locationName":"managed"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of blueprints to return in a single call to <code>ListEnvironmentBlueprints</code>. When the number of blueprints to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListEnvironmentBlueprints</code> to list the next set of blueprints.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"EnvironmentBlueprintName",
          "documentation":"<p>The name of the Amazon DataZone environment.</p>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of blueprints in the environment is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of blueprints in the environment, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentBlueprints</code>to list the next set of blueprints.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListEnvironmentBlueprintsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"EnvironmentBlueprintSummaries",
          "documentation":"<p>The results of the <code>ListEnvironmentBlueprints</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of blueprints in the environment is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of blueprints in the environment, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentBlueprints</code>to list the next set of blueprints.</p>"
        }
      }
    },
    "ListEnvironmentProfilesInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The identifier of the Amazon Web Services account where you want to list environment profiles.</p>",
          "location":"querystring",
          "locationName":"awsAccountId"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region where you want to list environment profiles.</p>",
          "location":"querystring",
          "locationName":"awsAccountRegion"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentBlueprintIdentifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the blueprint that was used to create the environment profiles that you want to list.</p>",
          "location":"querystring",
          "locationName":"environmentBlueprintIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of environment profiles to return in a single call to <code>ListEnvironmentProfiles</code>. When the number of environment profiles to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListEnvironmentProfiles</code> to list the next set of environment profiles.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p/>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of environment profiles is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of environment profiles, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentProfiles</code> to list the next set of environment profiles.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project.</p>",
          "location":"querystring",
          "locationName":"projectIdentifier"
        }
      }
    },
    "ListEnvironmentProfilesOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"EnvironmentProfileSummaries",
          "documentation":"<p>The results of the <code>ListEnvironmentProfiles</code> action. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of environment profiles is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of environment profiles, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentProfiles</code> to list the next set of environment profiles.</p>"
        }
      }
    },
    "ListEnvironmentsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "projectIdentifier"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The identifier of the Amazon Web Services account where you want to list environments.</p>",
          "location":"querystring",
          "locationName":"awsAccountId"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region where you want to list environments.</p>",
          "location":"querystring",
          "locationName":"awsAccountRegion"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentBlueprintIdentifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the Amazon DataZone blueprint.</p>",
          "location":"querystring",
          "locationName":"environmentBlueprintIdentifier"
        },
        "environmentProfileIdentifier":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The identifier of the environment profile.</p>",
          "location":"querystring",
          "locationName":"environmentProfileIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of environments to return in a single call to <code>ListEnvironments</code>. When the number of environments to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListEnvironments</code> to list the next set of environments.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the environment.</p>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of environments is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of environments, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironments</code> to list the next set of environments.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project.</p>",
          "location":"querystring",
          "locationName":"projectIdentifier"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the environment.</p>",
          "location":"querystring",
          "locationName":"provider"
        },
        "status":{
          "shape":"EnvironmentStatus",
          "documentation":"<p>The status of the environments that you want to list.</p>",
          "location":"querystring",
          "locationName":"status"
        }
      }
    },
    "ListEnvironmentsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"EnvironmentSummaries",
          "documentation":"<p>The results of the <code>ListEnvironments</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of environments is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of environments, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironments</code> to list the next set of environments.</p>"
        }
      }
    },
    "ListMetadataGenerationRunsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where you want to list metadata generation runs.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of metadata generation runs to return in a single call to ListMetadataGenerationRuns. When the number of metadata generation runs to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListMetadataGenerationRuns to list the next set of revisions.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of metadata generation runs is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of metadata generation runs, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListMetadataGenerationRuns to list the next set of revisions.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "status":{
          "shape":"MetadataGenerationRunStatus",
          "documentation":"<p>The status of the metadata generation runs.</p>",
          "location":"querystring",
          "locationName":"status"
        },
        "type":{
          "shape":"MetadataGenerationRunType",
          "documentation":"<p>The type of the metadata generation runs.</p>",
          "location":"querystring",
          "locationName":"type"
        }
      }
    },
    "ListMetadataGenerationRunsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"MetadataGenerationRuns",
          "documentation":"<p>The results of the ListMetadataGenerationRuns action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of metadata generation runs is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of metadata generation runs, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListMetadataGenerationRuns to list the next set of revisions.</p>"
        }
      }
    },
    "ListNotificationsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "type"
      ],
      "members":{
        "afterTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The time after which you want to list notifications.</p>",
          "location":"querystring",
          "locationName":"afterTimestamp"
        },
        "beforeTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The time before which you want to list notifications.</p>",
          "location":"querystring",
          "locationName":"beforeTimestamp"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of notifications to return in a single call to <code>ListNotifications</code>. When the number of notifications to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListNotifications</code> to list the next set of notifications.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of notifications is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of notifications, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListNotifications</code> to list the next set of notifications.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "subjects":{
          "shape":"NotificationSubjects",
          "documentation":"<p>The subjects of notifications.</p>",
          "location":"querystring",
          "locationName":"subjects"
        },
        "taskStatus":{
          "shape":"TaskStatus",
          "documentation":"<p>The task status of notifications.</p>",
          "location":"querystring",
          "locationName":"taskStatus"
        },
        "type":{
          "shape":"NotificationType",
          "documentation":"<p>The type of notifications.</p>",
          "location":"querystring",
          "locationName":"type"
        }
      }
    },
    "ListNotificationsOutput":{
      "type":"structure",
      "members":{
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of notifications is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of notifications, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListNotifications</code> to list the next set of notifications.</p>"
        },
        "notifications":{
          "shape":"NotificationsList",
          "documentation":"<p>The results of the <code>ListNotifications</code> action.</p>"
        }
      }
    },
    "ListProjectMembershipsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "projectIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which you want to list project memberships.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of memberships to return in a single call to <code>ListProjectMemberships</code>. When the number of memberships to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListProjectMemberships</code> to list the next set of memberships.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of memberships is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of memberships, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListProjectMemberships</code> to list the next set of memberships.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project whose memberships you want to list.</p>",
          "location":"uri",
          "locationName":"projectIdentifier"
        },
        "sortBy":{
          "shape":"SortFieldProject",
          "documentation":"<p>The method by which you want to sort the project memberships.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>The sort order of the project memberships.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        }
      }
    },
    "ListProjectMembershipsOutput":{
      "type":"structure",
      "required":["members"],
      "members":{
        "members":{
          "shape":"ProjectMembers",
          "documentation":"<p>The members of the project.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of memberships is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of memberships, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListProjectMemberships</code> to list the next set of memberships.</p>"
        }
      }
    },
    "ListProjectsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "groupIdentifier":{
          "shape":"String",
          "documentation":"<p>The identifier of a group.</p>",
          "location":"querystring",
          "locationName":"groupIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of projects to return in a single call to <code>ListProjects</code>. When the number of projects to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListProjects</code> to list the next set of projects.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of the project.</p>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of projects is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of projects, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListProjects</code> to list the next set of projects.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "userIdentifier":{
          "shape":"String",
          "documentation":"<p>The identifier of the Amazon DataZone user.</p>",
          "location":"querystring",
          "locationName":"userIdentifier"
        }
      }
    },
    "ListProjectsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"ProjectSummaries",
          "documentation":"<p>The results of the <code>ListProjects</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of projects is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of projects, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListProjects</code> to list the next set of projects.</p>"
        }
      }
    },
    "ListSubscriptionGrantsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the Amazon DataZone environment.</p>",
          "location":"querystring",
          "locationName":"environmentId"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of subscription grants to return in a single call to <code>ListSubscriptionGrants</code>. When the number of subscription grants to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListSubscriptionGrants</code> to list the next set of subscription grants.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscription grants is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscription grants, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptionGrants</code> to list the next set of subscription grants.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "sortBy":{
          "shape":"SortKey",
          "documentation":"<p>Specifies the way of sorting the results of this action.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>Specifies the sort order of this action.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        },
        "subscribedListingId":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of the subscribed listing.</p>",
          "location":"querystring",
          "locationName":"subscribedListingId"
        },
        "subscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subscription.</p>",
          "location":"querystring",
          "locationName":"subscriptionId"
        },
        "subscriptionTargetId":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The identifier of the subscription target.</p>",
          "location":"querystring",
          "locationName":"subscriptionTargetId"
        }
      }
    },
    "ListSubscriptionGrantsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"SubscriptionGrants",
          "documentation":"<p>The results of the <code>ListSubscriptionGrants</code> action. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscription grants is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscription grants, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptionGrants</code> to list the next set of subscription grants.</p>"
        }
      }
    },
    "ListSubscriptionRequestsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "approverProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the subscription request approver's project.</p>",
          "location":"querystring",
          "locationName":"approverProjectId"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of subscription requests to return in a single call to <code>ListSubscriptionRequests</code>. When the number of subscription requests to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListSubscriptionRequests</code> to list the next set of subscription requests.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscription requests is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscription requests, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptionRequests</code> to list the next set of subscription requests.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project for the subscription requests.</p>",
          "location":"querystring",
          "locationName":"owningProjectId"
        },
        "sortBy":{
          "shape":"SortKey",
          "documentation":"<p>Specifies the way to sort the results of this action.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>Specifies the sort order for the results of this action.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>Specifies the status of the subscription requests.</p>",
          "location":"querystring",
          "locationName":"status"
        },
        "subscribedListingId":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of the subscribed listing.</p>",
          "location":"querystring",
          "locationName":"subscribedListingId"
        }
      }
    },
    "ListSubscriptionRequestsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"SubscriptionRequests",
          "documentation":"<p>The results of the <code>ListSubscriptionRequests</code> action. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscription requests is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscription requests, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptionRequests</code> to list the next set of subscription requests.</p>"
        }
      }
    },
    "ListSubscriptionTargetsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain where you want to list subscription targets.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment where you want to list subscription targets.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of subscription targets to return in a single call to <code>ListSubscriptionTargets</code>. When the number of subscription targets to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListSubscriptionTargets</code> to list the next set of subscription targets. </p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscription targets is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscription targets, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptionTargets</code> to list the next set of subscription targets.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "sortBy":{
          "shape":"SortKey",
          "documentation":"<p>Specifies the way in which the results of this action are to be sorted.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>Specifies the sort order for the results of this action.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        }
      }
    },
    "ListSubscriptionTargetsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"SubscriptionTargets",
          "documentation":"<p>The results of the <code>ListSubscriptionTargets</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscription targets is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscription targets, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptionTargets</code> to list the next set of subscription targets.</p>"
        }
      }
    },
    "ListSubscriptionsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "approverProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project for the subscription's approver.</p>",
          "location":"querystring",
          "locationName":"approverProjectId"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of subscriptions to return in a single call to <code>ListSubscriptions</code>. When the number of subscriptions to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListSubscriptions</code> to list the next set of Subscriptions. </p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscriptions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscriptions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptions</code> to list the next set of subscriptions.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the owning project.</p>",
          "location":"querystring",
          "locationName":"owningProjectId"
        },
        "sortBy":{
          "shape":"SortKey",
          "documentation":"<p>Specifies the way in which the results of this action are to be sorted.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>Specifies the sort order for the results of this action.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        },
        "status":{
          "shape":"SubscriptionStatus",
          "documentation":"<p>The status of the subscriptions that you want to list.</p>",
          "location":"querystring",
          "locationName":"status"
        },
        "subscribedListingId":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of the subscribed listing for the subscriptions that you want to list.</p>",
          "location":"querystring",
          "locationName":"subscribedListingId"
        },
        "subscriptionRequestIdentifier":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request for the subscriptions that you want to list.</p>",
          "location":"querystring",
          "locationName":"subscriptionRequestIdentifier"
        }
      }
    },
    "ListSubscriptionsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"Subscriptions",
          "documentation":"<p>The results of the <code>ListSubscriptions</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscriptions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscriptions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptions</code> to list the next set of subscriptions.</p>"
        }
      }
    },
    "ListTagsForResourceRequest":{
      "type":"structure",
      "required":["resourceArn"],
      "members":{
        "resourceArn":{
          "shape":"String",
          "documentation":"<p>The ARN of the resource whose tags you want to list.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        }
      }
    },
    "ListTagsForResourceResponse":{
      "type":"structure",
      "members":{
        "tags":{
          "shape":"Tags",
          "documentation":"<p>The tags of the specified resource.</p>"
        }
      }
    },
    "ListTimeSeriesDataPointsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "formName"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain that houses the assets for which you want to list time series data points.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "endedAt":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp at which the data points that you wanted to list ended.</p>",
          "location":"querystring",
          "locationName":"endedAt"
        },
        "entityIdentifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of the asset for which you want to list data points.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"TimeSeriesEntityType",
          "documentation":"<p>The type of the asset for which you want to list data points.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series data points form.</p>",
          "location":"querystring",
          "locationName":"formName"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of data points to return in a single call to ListTimeSeriesDataPoints. When the number of data points to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListTimeSeriesDataPoints to list the next set of data points.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of data points is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of data points, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListTimeSeriesDataPoints to list the next set of data points.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "startedAt":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp at which the data points that you want to list started.</p>",
          "location":"querystring",
          "locationName":"startedAt"
        }
      }
    },
    "ListTimeSeriesDataPointsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The results of the ListTimeSeriesDataPoints action. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of data points is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of data points, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListTimeSeriesDataPoints to list the next set of data points.</p>"
        }
      }
    },
    "ListingId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "ListingItem":{
      "type":"structure",
      "members":{
        "assetListing":{
          "shape":"AssetListing",
          "documentation":"<p>An asset published in an Amazon DataZone catalog.</p>"
        }
      },
      "documentation":"<p>The details of a listing (aka asset published in a Amazon DataZone catalog).</p>",
      "union":true
    },
    "ListingName":{
      "type":"string",
      "max":64,
      "min":1
    },
    "ListingRevision":{
      "type":"structure",
      "required":[
        "id",
        "revision"
      ],
      "members":{
        "id":{
          "shape":"ListingId",
          "documentation":"<p>An identifier of a revision of an asset published in a Amazon DataZone catalog.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The details of a revision of an asset published in a Amazon DataZone catalog.</p>"
        }
      },
      "documentation":"<p>A revision of an asset published in a Amazon DataZone catalog.</p>"
    },
    "ListingRevisionInput":{
      "type":"structure",
      "required":[
        "identifier",
        "revision"
      ],
      "members":{
        "identifier":{
          "shape":"ListingId",
          "documentation":"<p>An identifier of revision to be made to an asset published in a Amazon DataZone catalog.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The details of a revision to be made to an asset published in a Amazon DataZone catalog.</p>"
        }
      },
      "documentation":"<p>A revision to be made to an asset published in a Amazon DataZone catalog.</p>"
    },
    "ListingStatus":{
      "type":"string",
      "enum":[
        "CREATING",
        "ACTIVE",
        "INACTIVE"
      ]
    },
    "LongDescription":{
      "type":"string",
      "max":4096,
      "min":0,
      "sensitive":true
    },
    "MaxResults":{
      "type":"integer",
      "box":true,
      "max":50,
      "min":1
    },
    "MaxResultsForListDomains":{
      "type":"integer",
      "box":true,
      "max":25,
      "min":1
    },
    "Member":{
      "type":"structure",
      "members":{
        "groupIdentifier":{
          "shape":"String",
          "documentation":"<p>The ID of the group of a project member.</p>"
        },
        "userIdentifier":{
          "shape":"String",
          "documentation":"<p>The user ID of a project member.</p>"
        }
      },
      "documentation":"<p>The details about a project member.</p>",
      "union":true
    },
    "MemberDetails":{
      "type":"structure",
      "members":{
        "group":{
          "shape":"GroupDetails",
          "documentation":"<p>The group details of a project member.</p>"
        },
        "user":{
          "shape":"UserDetails",
          "documentation":"<p>The user details of a project member.</p>"
        }
      },
      "documentation":"<p>The details about a project member.</p>",
      "union":true
    },
    "Message":{
      "type":"string",
      "max":16384,
      "min":0,
      "sensitive":true
    },
    "MetadataGenerationRunIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "MetadataGenerationRunItem":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "owningProjectId"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the metadata generation run was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the metadata generation run.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the metadata generation run was created.</p>"
        },
        "id":{
          "shape":"MetadataGenerationRunIdentifier",
          "documentation":"<p>The ID of the metadata generation run.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns the asset for which the metadata generation was ran.</p>"
        },
        "status":{
          "shape":"MetadataGenerationRunStatus",
          "documentation":"<p>The status of the metadata generation run.</p>"
        },
        "target":{
          "shape":"MetadataGenerationRunTarget",
          "documentation":"<p>The asset for which metadata was generated.</p>"
        },
        "type":{
          "shape":"MetadataGenerationRunType",
          "documentation":"<p>The type of the metadata generation run.</p>"
        }
      },
      "documentation":"<p>The metadata generation run.</p>"
    },
    "MetadataGenerationRunStatus":{
      "type":"string",
      "enum":[
        "SUBMITTED",
        "IN_PROGRESS",
        "CANCELED",
        "SUCCEEDED",
        "FAILED"
      ]
    },
    "MetadataGenerationRunTarget":{
      "type":"structure",
      "required":[
        "identifier",
        "type"
      ],
      "members":{
        "identifier":{
          "shape":"String",
          "documentation":"<p>The ID of the metadata generation run's target.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset for which metadata was generated.</p>"
        },
        "type":{
          "shape":"MetadataGenerationTargetType",
          "documentation":"<p>The type of the asset for which metadata was generated.</p>"
        }
      },
      "documentation":"<p>The asset for which metadata was generated.</p>"
    },
    "MetadataGenerationRunType":{
      "type":"string",
      "enum":["BUSINESS_DESCRIPTIONS"]
    },
    "MetadataGenerationRuns":{
      "type":"list",
      "member":{"shape":"MetadataGenerationRunItem"}
    },
    "MetadataGenerationTargetType":{
      "type":"string",
      "enum":["ASSET"]
    },
    "MetadataMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "Model":{
      "type":"structure",
      "members":{
        "smithy":{
          "shape":"Smithy",
          "documentation":"<p>Indicates the smithy model of the API.</p>"
        }
      },
      "documentation":"<p>The model of the API.</p>",
      "sensitive":true,
      "union":true
    },
    "Name":{
      "type":"string",
      "max":256,
      "min":1,
      "sensitive":true
    },
    "NotificationOutput":{
      "type":"structure",
      "required":[
        "actionLink",
        "creationTimestamp",
        "domainIdentifier",
        "identifier",
        "lastUpdatedTimestamp",
        "message",
        "title",
        "topic",
        "type"
      ],
      "members":{
        "actionLink":{
          "shape":"ActionLink",
          "documentation":"<p>The action link included in the notification.</p>"
        },
        "creationTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of when a notification was created.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of a Amazon DataZone domain in which the notification exists.</p>"
        },
        "identifier":{
          "shape":"TaskId",
          "documentation":"<p>The identifier of the notification.</p>"
        },
        "lastUpdatedTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of when the notification was last updated.</p>"
        },
        "message":{
          "shape":"Message",
          "documentation":"<p>The message included in the notification.</p>"
        },
        "metadata":{
          "shape":"MetadataMap",
          "documentation":"<p>The metadata included in the notification.</p>"
        },
        "status":{
          "shape":"TaskStatus",
          "documentation":"<p>The status included in the notification.</p>"
        },
        "title":{
          "shape":"Title",
          "documentation":"<p>The title of the notification.</p>"
        },
        "topic":{
          "shape":"Topic",
          "documentation":"<p>The topic of the notification.</p>"
        },
        "type":{
          "shape":"NotificationType",
          "documentation":"<p>The type of the notification.</p>"
        }
      },
      "documentation":"<p>The details of a notification generated in Amazon DataZone.</p>"
    },
    "NotificationResource":{
      "type":"structure",
      "required":[
        "id",
        "type"
      ],
      "members":{
        "id":{
          "shape":"String",
          "documentation":"<p>The ID of the resource mentioned in a notification.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the resource mentioned in a notification.</p>"
        },
        "type":{
          "shape":"NotificationResourceType",
          "documentation":"<p>The type of the resource mentioned in a notification.</p>"
        }
      },
      "documentation":"<p>The details of the resource mentioned in a notification.</p>"
    },
    "NotificationResourceType":{
      "type":"string",
      "enum":["PROJECT"]
    },
    "NotificationRole":{
      "type":"string",
      "enum":[
        "PROJECT_OWNER",
        "PROJECT_CONTRIBUTOR",
        "PROJECT_VIEWER",
        "DOMAIN_OWNER",
        "PROJECT_SUBSCRIBER"
      ]
    },
    "NotificationSubjects":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "NotificationType":{
      "type":"string",
      "enum":[
        "TASK",
        "EVENT"
      ]
    },
    "NotificationsList":{
      "type":"list",
      "member":{"shape":"NotificationOutput"}
    },
    "PaginationToken":{
      "type":"string",
      "max":8192,
      "min":1
    },
    "PostTimeSeriesDataPointsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "forms"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which you want to post time series data points.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of the asset for which you want to post time series data points.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"TimeSeriesEntityType",
          "documentation":"<p>The type of the asset for which you want to post data points.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "forms":{
          "shape":"TimeSeriesDataPointFormInputList",
          "documentation":"<p>The forms that contain the data points that you want to post.</p>"
        }
      }
    },
    "PostTimeSeriesDataPointsOutput":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which you want to post time series data points.</p>"
        },
        "entityId":{
          "shape":"EntityId",
          "documentation":"<p>The ID of the asset for which you want to post time series data points.</p>"
        },
        "entityType":{
          "shape":"TimeSeriesEntityType",
          "documentation":"<p>The type of the asset for which you want to post data points.</p>"
        },
        "forms":{
          "shape":"TimeSeriesDataPointFormOutputList",
          "documentation":"<p>The forms that contain the data points that you have posted.</p>"
        }
      }
    },
    "PredictionChoices":{
      "type":"list",
      "member":{"shape":"Integer"}
    },
    "PredictionConfiguration":{
      "type":"structure",
      "members":{
        "businessNameGeneration":{
          "shape":"BusinessNameGenerationConfiguration",
          "documentation":"<p>The business name generation mechanism.</p>"
        }
      },
      "documentation":"<p>The configuration of the prediction.</p>"
    },
    "ProjectDeletionError":{
      "type":"structure",
      "members":{
        "code":{
          "shape":"String",
          "documentation":"<p>The code of the project deletion error.</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>The message of the project deletion error.</p>"
        }
      },
      "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
    },
    "ProjectId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "ProjectMember":{
      "type":"structure",
      "required":[
        "designation",
        "memberDetails"
      ],
      "members":{
        "designation":{
          "shape":"UserDesignation",
          "documentation":"<p>The designated role of a project member.</p>"
        },
        "memberDetails":{
          "shape":"MemberDetails",
          "documentation":"<p>The membership details of a project member.</p>"
        }
      },
      "documentation":"<p>The details of a project member.</p>"
    },
    "ProjectMembers":{
      "type":"list",
      "member":{"shape":"ProjectMember"}
    },
    "ProjectName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[\\w -]+$",
      "sensitive":true
    },
    "ProjectStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "DELETING",
        "DELETE_FAILED"
      ]
    },
    "ProjectSummaries":{
      "type":"list",
      "member":{"shape":"ProjectSummary"}
    },
    "ProjectSummary":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when a project was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the project.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of a project.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of a Amazon DataZone domain where the project exists.</p>"
        },
        "failureReasons":{
          "shape":"FailureReasons",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of a project.</p>"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of a project.</p>"
        },
        "projectStatus":{
          "shape":"ProjectStatus",
          "documentation":"<p>The status of the project.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was updated.</p>"
        }
      },
      "documentation":"<p>The details of a Amazon DataZone project.</p>"
    },
    "ProvisioningProperties":{
      "type":"structure",
      "members":{
        "cloudFormation":{
          "shape":"CloudFormationProperties",
          "documentation":"<p>The cloud formation properties included as part of the provisioning properties of an environment blueprint.</p>"
        }
      },
      "documentation":"<p>The provisioning properties of an environment blueprint.</p>",
      "union":true
    },
    "PutEnvironmentBlueprintConfigurationInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "enabledRegions",
        "environmentBlueprintIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "enabledRegions":{
          "shape":"EnabledRegionList",
          "documentation":"<p>Specifies the enabled Amazon Web Services Regions.</p>"
        },
        "environmentBlueprintIdentifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the environment blueprint.</p>",
          "location":"uri",
          "locationName":"environmentBlueprintIdentifier"
        },
        "manageAccessRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the manage access role.</p>"
        },
        "provisioningRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the provisioning role.</p>"
        },
        "regionalParameters":{
          "shape":"RegionalParameterMap",
          "documentation":"<p>The regional parameters in the environment blueprint.</p>"
        }
      }
    },
    "PutEnvironmentBlueprintConfigurationOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentBlueprintId"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment blueprint was created.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>"
        },
        "enabledRegions":{
          "shape":"EnabledRegionList",
          "documentation":"<p>Specifies the enabled Amazon Web Services Regions.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the environment blueprint.</p>"
        },
        "manageAccessRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the manage access role.</p>"
        },
        "provisioningRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the provisioning role.</p>"
        },
        "regionalParameters":{
          "shape":"RegionalParameterMap",
          "documentation":"<p>The regional parameters in the environment blueprint.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment blueprint was updated.</p>"
        }
      }
    },
    "RecommendationConfiguration":{
      "type":"structure",
      "members":{
        "enableBusinessNameGeneration":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether automatic business name generation is to be enabled or not as part of the recommendation configuration.</p>"
        }
      },
      "documentation":"<p>The recommendation to be updated as part of the <code>UpdateDataSource</code> action.</p>"
    },
    "RedshiftClusterStorage":{
      "type":"structure",
      "required":["clusterName"],
      "members":{
        "clusterName":{
          "shape":"RedshiftClusterStorageClusterNameString",
          "documentation":"<p>The name of an Amazon Redshift cluster.</p>"
        }
      },
      "documentation":"<p>The details of the Amazon Redshift cluster storage.</p>"
    },
    "RedshiftClusterStorageClusterNameString":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[0-9a-z].[a-z0-9\\-]*$"
    },
    "RedshiftCredentialConfiguration":{
      "type":"structure",
      "required":["secretManagerArn"],
      "members":{
        "secretManagerArn":{
          "shape":"RedshiftCredentialConfigurationSecretManagerArnString",
          "documentation":"<p>The ARN of a secret manager for an Amazon Redshift cluster.</p>"
        }
      },
      "documentation":"<p>The details of the credentials required to access an Amazon Redshift cluster.</p>"
    },
    "RedshiftCredentialConfigurationSecretManagerArnString":{
      "type":"string",
      "max":256,
      "min":0,
      "pattern":"^arn:aws[^:]*:secretsmanager:[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]:\\d{12}:secret:.*$"
    },
    "RedshiftRunConfigurationInput":{
      "type":"structure",
      "required":[
        "redshiftCredentialConfiguration",
        "redshiftStorage",
        "relationalFilterConfigurations"
      ],
      "members":{
        "dataAccessRole":{
          "shape":"RedshiftRunConfigurationInputDataAccessRoleString",
          "documentation":"<p>The data access role included in the configuration details of the Amazon Redshift data source.</p>"
        },
        "redshiftCredentialConfiguration":{"shape":"RedshiftCredentialConfiguration"},
        "redshiftStorage":{"shape":"RedshiftStorage"},
        "relationalFilterConfigurations":{
          "shape":"RelationalFilterConfigurations",
          "documentation":"<p>The relational filger configurations included in the configuration details of the Amazon Redshift data source.</p>"
        }
      },
      "documentation":"<p>The configuration details of the Amazon Redshift data source.</p>"
    },
    "RedshiftRunConfigurationInputDataAccessRoleString":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]{1,128}$"
    },
    "RedshiftRunConfigurationOutput":{
      "type":"structure",
      "required":[
        "redshiftCredentialConfiguration",
        "redshiftStorage",
        "relationalFilterConfigurations"
      ],
      "members":{
        "accountId":{
          "shape":"RedshiftRunConfigurationOutputAccountIdString",
          "documentation":"<p>The ID of the Amazon Web Services account included in the configuration details of the Amazon Redshift data source.</p>"
        },
        "dataAccessRole":{
          "shape":"RedshiftRunConfigurationOutputDataAccessRoleString",
          "documentation":"<p>The data access role included in the configuration details of the Amazon Redshift data source.</p>"
        },
        "redshiftCredentialConfiguration":{"shape":"RedshiftCredentialConfiguration"},
        "redshiftStorage":{"shape":"RedshiftStorage"},
        "region":{
          "shape":"RedshiftRunConfigurationOutputRegionString",
          "documentation":"<p>The Amazon Web Services region included in the configuration details of the Amazon Redshift data source.</p>"
        },
        "relationalFilterConfigurations":{
          "shape":"RelationalFilterConfigurations",
          "documentation":"<p>The relational filger configurations included in the configuration details of the Amazon Redshift data source.</p>"
        }
      },
      "documentation":"<p>The configuration details of the Amazon Redshift data source.</p>"
    },
    "RedshiftRunConfigurationOutputAccountIdString":{
      "type":"string",
      "max":12,
      "min":12,
      "pattern":"^\\d{12}$"
    },
    "RedshiftRunConfigurationOutputDataAccessRoleString":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]{1,128}$"
    },
    "RedshiftRunConfigurationOutputRegionString":{
      "type":"string",
      "max":16,
      "min":4,
      "pattern":"[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]"
    },
    "RedshiftServerlessStorage":{
      "type":"structure",
      "required":["workgroupName"],
      "members":{
        "workgroupName":{
          "shape":"RedshiftServerlessStorageWorkgroupNameString",
          "documentation":"<p>The name of the Amazon Redshift Serverless workgroup.</p>"
        }
      },
      "documentation":"<p>The details of the Amazon Redshift Serverless workgroup storage.</p>"
    },
    "RedshiftServerlessStorageWorkgroupNameString":{
      "type":"string",
      "max":64,
      "min":3,
      "pattern":"^[a-z0-9-]+$"
    },
    "RedshiftStorage":{
      "type":"structure",
      "members":{
        "redshiftClusterSource":{
          "shape":"RedshiftClusterStorage",
          "documentation":"<p>The details of the Amazon Redshift cluster source.</p>"
        },
        "redshiftServerlessSource":{
          "shape":"RedshiftServerlessStorage",
          "documentation":"<p>The details of the Amazon Redshift Serverless workgroup source.</p>"
        }
      },
      "documentation":"<p>The details of the Amazon Redshift storage as part of the configuration of an Amazon Redshift data source run.</p>",
      "union":true
    },
    "RegionName":{
      "type":"string",
      "max":16,
      "min":4,
      "pattern":"^[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]$"
    },
    "RegionalParameter":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "RegionalParameterMap":{
      "type":"map",
      "key":{"shape":"RegionName"},
      "value":{"shape":"RegionalParameter"}
    },
    "RejectChoice":{
      "type":"structure",
      "required":["predictionTarget"],
      "members":{
        "predictionChoices":{
          "shape":"PredictionChoices",
          "documentation":"<p>Specifies the the automatically generated business metadata that can be rejected.</p>"
        },
        "predictionTarget":{
          "shape":"String",
          "documentation":"<p>Specifies the target (for example, a column name) where a prediction can be rejected.</p>"
        }
      },
      "documentation":"<p>The details of the automatically generated business metadata that is rejected.</p>"
    },
    "RejectChoices":{
      "type":"list",
      "member":{"shape":"RejectChoice"}
    },
    "RejectPredictionsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>The identifier of the prediction.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "rejectChoices":{
          "shape":"RejectChoices",
          "documentation":"<p>Specifies the prediction (aka, the automatically generated piece of metadata) and the target (for example, a column name) that can be rejected.</p>"
        },
        "rejectRule":{
          "shape":"RejectRule",
          "documentation":"<p>Specifies the rule (or the conditions) under which a prediction can be rejected.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision that is to be made to the asset.</p>",
          "location":"querystring",
          "locationName":"revision"
        }
      }
    },
    "RejectPredictionsOutput":{
      "type":"structure",
      "required":[
        "assetId",
        "assetRevision",
        "domainId"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the asset.</p>"
        },
        "assetRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision that is to be made to the asset.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain.</p>"
        }
      }
    },
    "RejectRule":{
      "type":"structure",
      "members":{
        "rule":{
          "shape":"RejectRuleBehavior",
          "documentation":"<p>Specifies whether you want to reject the top prediction for all targets or none.</p>"
        },
        "threshold":{
          "shape":"Float",
          "documentation":"<p>The confidence score that specifies the condition at which a prediction can be rejected.</p>"
        }
      },
      "documentation":"<p>Specifies the rule and the threshold under which a prediction can be rejected.</p>"
    },
    "RejectRuleBehavior":{
      "type":"string",
      "enum":[
        "ALL",
        "NONE"
      ]
    },
    "RejectSubscriptionRequestInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>The decision comment of the rejected subscription request.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the subscription request was rejected.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request that was rejected.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "RejectSubscriptionRequestOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "requestReason",
        "status",
        "subscribedListings",
        "subscribedPrincipals",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription request was rejected.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The timestamp of when the subscription request was rejected.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>The decision comment of the rejected subscription request.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the subscription request was rejected.</p>"
        },
        "id":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request that was rejected.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the subscription request.</p>"
        },
        "reviewerId":{
          "shape":"String",
          "documentation":"<p>The identifier of the subscription request reviewer.</p>"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>The status of the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"RejectSubscriptionRequestOutputSubscribedListingsList",
          "documentation":"<p>The subscribed listings of the subscription request.</p>"
        },
        "subscribedPrincipals":{
          "shape":"RejectSubscriptionRequestOutputSubscribedPrincipalsList",
          "documentation":"<p>The subscribed principals of the subscription request.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription request was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription request.</p>"
        }
      }
    },
    "RejectSubscriptionRequestOutputSubscribedListingsList":{
      "type":"list",
      "member":{"shape":"SubscribedListing"},
      "max":1,
      "min":1
    },
    "RejectSubscriptionRequestOutputSubscribedPrincipalsList":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipal"},
      "max":1,
      "min":1
    },
    "RelationalFilterConfiguration":{
      "type":"structure",
      "required":["databaseName"],
      "members":{
        "databaseName":{
          "shape":"RelationalFilterConfigurationDatabaseNameString",
          "documentation":"<p>The database name specified in the relational filter configuration for the data source.</p>"
        },
        "filterExpressions":{
          "shape":"FilterExpressions",
          "documentation":"<p>The filter expressions specified in the relational filter configuration for the data source.</p>"
        },
        "schemaName":{
          "shape":"RelationalFilterConfigurationSchemaNameString",
          "documentation":"<p>The schema name specified in the relational filter configuration for the data source.</p>"
        }
      },
      "documentation":"<p>The relational filter configuration for the data source.</p>"
    },
    "RelationalFilterConfigurationDatabaseNameString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "RelationalFilterConfigurationSchemaNameString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "RelationalFilterConfigurations":{
      "type":"list",
      "member":{"shape":"RelationalFilterConfiguration"}
    },
    "RequestReason":{
      "type":"string",
      "max":4096,
      "min":1,
      "sensitive":true
    },
    "Resource":{
      "type":"structure",
      "required":[
        "type",
        "value"
      ],
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of a provisioned resource of this Amazon DataZone environment.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of a provisioned resource of this Amazon DataZone environment.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of a provisioned resource of this Amazon DataZone environment.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value of a provisioned resource of this Amazon DataZone environment.</p>"
        }
      },
      "documentation":"<p>The details of a provisioned resource of this Amazon DataZone environment.</p>"
    },
    "ResourceList":{
      "type":"list",
      "member":{"shape":"Resource"}
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The specified resource cannot be found.</p>",
      "error":{
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true
    },
    "Revision":{
      "type":"string",
      "max":64,
      "min":1
    },
    "RevokeSubscriptionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain where you want to revoke a subscription.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the revoked subscription.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "retainPermissions":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether permissions are retained when the subscription is revoked.</p>"
        }
      }
    },
    "RevokeSubscriptionOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "status",
        "subscribedListing",
        "subscribedPrincipal",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription was revoked.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The identifier of the user who revoked the subscription.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain where you want to revoke a subscription.</p>"
        },
        "id":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the revoked subscription.</p>"
        },
        "retainPermissions":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether permissions are retained when the subscription is revoked.</p>"
        },
        "status":{
          "shape":"SubscriptionStatus",
          "documentation":"<p>The status of the revoked subscription.</p>"
        },
        "subscribedListing":{
          "shape":"SubscribedListing",
          "documentation":"<p>The subscribed listing of the revoked subscription.</p>"
        },
        "subscribedPrincipal":{
          "shape":"SubscribedPrincipal",
          "documentation":"<p>The subscribed principal of the revoked subscription.</p>"
        },
        "subscriptionRequestId":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request for the revoked subscription.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription was revoked.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who revoked the subscription.</p>"
        }
      }
    },
    "RoleArn":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]*$"
    },
    "RunStatisticsForAssets":{
      "type":"structure",
      "members":{
        "added":{
          "shape":"Integer",
          "documentation":"<p>The <code>added</code> statistic for the data source run.</p>"
        },
        "failed":{
          "shape":"Integer",
          "documentation":"<p>The <code>failed</code> statistic for the data source run.</p>"
        },
        "skipped":{
          "shape":"Integer",
          "documentation":"<p>The <code>skipped</code> statistic for the data source run.</p>"
        },
        "unchanged":{
          "shape":"Integer",
          "documentation":"<p>The <code>unchanged</code> statistic for the data source run.</p>"
        },
        "updated":{
          "shape":"Integer",
          "documentation":"<p>The <code>updated</code> statistic for the data source run.</p>"
        }
      },
      "documentation":"<p>The asset statistics from the data source run.</p>"
    },
    "ScheduleConfiguration":{
      "type":"structure",
      "members":{
        "schedule":{
          "shape":"CronString",
          "documentation":"<p>The schedule of the data source runs.</p>"
        },
        "timezone":{
          "shape":"Timezone",
          "documentation":"<p>The timezone of the data source run. </p>"
        }
      },
      "documentation":"<p>The details of the schedule of the data source runs.</p>",
      "sensitive":true
    },
    "SearchGroupProfilesInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "groupType"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which you want to search group profiles.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "groupType":{
          "shape":"GroupSearchType",
          "documentation":"<p>The group type for which to search.</p>"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return in a single call to <code>SearchGroupProfiles</code>. When the number of results to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>SearchGroupProfiles</code> to list the next set of results. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchGroupProfiles</code> to list the next set of results.</p>"
        },
        "searchText":{
          "shape":"GroupSearchText",
          "documentation":"<p>Specifies the text for which to search.</p>"
        }
      }
    },
    "SearchGroupProfilesOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"GroupProfileSummaries",
          "documentation":"<p>The results of the <code>SearchGroupProfiles</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchGroupProfiles</code> to list the next set of results.</p>"
        }
      }
    },
    "SearchInItem":{
      "type":"structure",
      "required":["attribute"],
      "members":{
        "attribute":{
          "shape":"Attribute",
          "documentation":"<p>The search attribute.</p>"
        }
      },
      "documentation":"<p>The details of the search.</p>"
    },
    "SearchInList":{
      "type":"list",
      "member":{"shape":"SearchInItem"},
      "max":10,
      "min":1
    },
    "SearchInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "searchScope"
      ],
      "members":{
        "additionalAttributes":{
          "shape":"SearchOutputAdditionalAttributes",
          "documentation":"<p>Specifies additional attributes for the <code>Search</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "filters":{
          "shape":"FilterClause",
          "documentation":"<p>Specifies the search filters.</p>"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return in a single call to <code>Search</code>. When the number of results to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>Search</code> to list the next set of results.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>Search</code> to list the next set of results.</p>"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the owning project specified for the search.</p>"
        },
        "searchIn":{
          "shape":"SearchInList",
          "documentation":"<p>The details of the search.</p>"
        },
        "searchScope":{
          "shape":"InventorySearchScope",
          "documentation":"<p>The scope of the search.</p>"
        },
        "searchText":{
          "shape":"SearchText",
          "documentation":"<p>Specifies the text for which to search.</p>"
        },
        "sort":{
          "shape":"SearchSort",
          "documentation":"<p>Specifies the way in which the search results are to be sorted.</p>"
        }
      }
    },
    "SearchInventoryResultItem":{
      "type":"structure",
      "members":{
        "assetItem":{
          "shape":"AssetItem",
          "documentation":"<p>The asset item included in the search results.</p>"
        },
        "dataProductItem":{
          "shape":"DataProductSummary",
          "documentation":"<p>The data product item included in the search results.</p>"
        },
        "glossaryItem":{
          "shape":"GlossaryItem",
          "documentation":"<p>The glossary item included in the search results.</p>"
        },
        "glossaryTermItem":{
          "shape":"GlossaryTermItem",
          "documentation":"<p>The glossary term item included in the search results.</p>"
        }
      },
      "documentation":"<p>The details of the search results.</p>",
      "union":true
    },
    "SearchInventoryResultItems":{
      "type":"list",
      "member":{"shape":"SearchInventoryResultItem"}
    },
    "SearchListingsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "additionalAttributes":{
          "shape":"SearchOutputAdditionalAttributes",
          "documentation":"<p>Specifies additional attributes for the search.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain in which to search listings.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "filters":{
          "shape":"FilterClause",
          "documentation":"<p>Specifies the filters for the search of listings.</p>"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return in a single call to <code>SearchListings</code>. When the number of results to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>SearchListings</code> to list the next set of results. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchListings</code> to list the next set of results.</p>"
        },
        "searchIn":{
          "shape":"SearchInList",
          "documentation":"<p>The details of the search.</p>"
        },
        "searchText":{
          "shape":"String",
          "documentation":"<p>Specifies the text for which to search.</p>"
        },
        "sort":{
          "shape":"SearchSort",
          "documentation":"<p>Specifies the way for sorting the search results.</p>"
        }
      }
    },
    "SearchListingsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"SearchResultItems",
          "documentation":"<p>The results of the <code>SearchListings</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchListings</code> to list the next set of results.</p>"
        },
        "totalMatchCount":{
          "shape":"Integer",
          "documentation":"<p>Total number of search results.</p>"
        }
      }
    },
    "SearchOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"SearchInventoryResultItems",
          "documentation":"<p>The results of the <code>Search</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>Search</code> to list the next set of results.</p>"
        },
        "totalMatchCount":{
          "shape":"Integer",
          "documentation":"<p>Total number of search results.</p>"
        }
      }
    },
    "SearchOutputAdditionalAttribute":{
      "type":"string",
      "enum":[
        "FORMS",
        "TIME_SERIES_DATA_POINT_FORMS"
      ]
    },
    "SearchOutputAdditionalAttributes":{
      "type":"list",
      "member":{"shape":"SearchOutputAdditionalAttribute"}
    },
    "SearchResultItem":{
      "type":"structure",
      "members":{
        "assetListing":{
          "shape":"AssetListingItem",
          "documentation":"<p>The asset listing included in the results of the <code>SearchListings</code> action.</p>"
        }
      },
      "documentation":"<p>The details of the results of the <code>SearchListings</code> action.</p>",
      "union":true
    },
    "SearchResultItems":{
      "type":"list",
      "member":{"shape":"SearchResultItem"}
    },
    "SearchSort":{
      "type":"structure",
      "required":["attribute"],
      "members":{
        "attribute":{
          "shape":"Attribute",
          "documentation":"<p>The attribute detail of the way to sort search results.</p>"
        },
        "order":{
          "shape":"SortOrder",
          "documentation":"<p>The order detail of the wya to sort search results.</p>"
        }
      },
      "documentation":"<p>The details of the way to sort search results.</p>"
    },
    "SearchText":{
      "type":"string",
      "max":4096,
      "min":1
    },
    "SearchTypesInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "managed",
        "searchScope"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to invoke the <code>SearchTypes</code> action.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "filters":{
          "shape":"FilterClause",
          "documentation":"<p>The filters for the <code>SearchTypes</code> action.</p>"
        },
        "managed":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the search is managed.</p>"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return in a single call to <code>SearchTypes</code>. When the number of results to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>SearchTypes</code> to list the next set of results. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchTypes</code> to list the next set of results.</p>"
        },
        "searchIn":{
          "shape":"SearchInList",
          "documentation":"<p>The details of the search.</p>"
        },
        "searchScope":{
          "shape":"TypesSearchScope",
          "documentation":"<p>Specifies the scope of the search for types.</p>"
        },
        "searchText":{
          "shape":"SearchText",
          "documentation":"<p>Specifies the text for which to search.</p>"
        },
        "sort":{
          "shape":"SearchSort",
          "documentation":"<p>The specifies the way to sort the <code>SearchTypes</code> results.</p>"
        }
      }
    },
    "SearchTypesOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"SearchTypesResultItems",
          "documentation":"<p>The results of the <code>SearchTypes</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchTypes</code> to list the next set of results.</p>"
        },
        "totalMatchCount":{
          "shape":"Integer",
          "documentation":"<p>Total number of search results.</p>"
        }
      }
    },
    "SearchTypesResultItem":{
      "type":"structure",
      "members":{
        "assetTypeItem":{
          "shape":"AssetTypeItem",
          "documentation":"<p>The asset type included in the results of the <code>SearchTypes</code> action.</p>"
        },
        "formTypeItem":{
          "shape":"FormTypeData",
          "documentation":"<p>The form type included in the results of the <code>SearchTypes</code> action.</p>"
        }
      },
      "documentation":"<p>The details of the results of the <code>SearchTypes</code> action.</p>",
      "union":true
    },
    "SearchTypesResultItems":{
      "type":"list",
      "member":{"shape":"SearchTypesResultItem"}
    },
    "SearchUserProfilesInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "userType"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which you want to search user profiles.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return in a single call to <code>SearchUserProfiles</code>. When the number of results to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>SearchUserProfiles</code> to list the next set of results. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchUserProfiles</code> to list the next set of results.</p>"
        },
        "searchText":{
          "shape":"UserSearchText",
          "documentation":"<p>Specifies the text for which to search.</p>"
        },
        "userType":{
          "shape":"UserSearchType",
          "documentation":"<p>Specifies the user type for the <code>SearchUserProfiles</code> action.</p>"
        }
      }
    },
    "SearchUserProfilesOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"UserProfileSummaries",
          "documentation":"<p>The results of the <code>SearchUserProfiles</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchUserProfiles</code> to list the next set of results.</p>"
        }
      }
    },
    "ServiceQuotaExceededException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The request has exceeded the specified service quota.</p>",
      "error":{
        "httpStatusCode":402,
        "senderFault":true
      },
      "exception":true
    },
    "ShortDescription":{
      "type":"string",
      "max":1024,
      "min":0,
      "sensitive":true
    },
    "SingleSignOn":{
      "type":"structure",
      "members":{
        "type":{
          "shape":"AuthType",
          "documentation":"<p>The type of single sign-on in Amazon DataZone.</p>"
        },
        "userAssignment":{
          "shape":"UserAssignment",
          "documentation":"<p>The single sign-on user assignment in Amazon DataZone.</p>"
        }
      },
      "documentation":"<p>The single sign-on details in Amazon DataZone.</p>"
    },
    "Smithy":{
      "type":"string",
      "max":10000,
      "min":1
    },
    "SortFieldProject":{
      "type":"string",
      "enum":["NAME"]
    },
    "SortKey":{
      "type":"string",
      "enum":[
        "CREATED_AT",
        "UPDATED_AT"
      ]
    },
    "SortOrder":{
      "type":"string",
      "enum":[
        "ASCENDING",
        "DESCENDING"
      ]
    },
    "SsoUserProfileDetails":{
      "type":"structure",
      "members":{
        "firstName":{
          "shape":"FirstName",
          "documentation":"<p>The first name included in the single sign-on details of the user profile.</p>"
        },
        "lastName":{
          "shape":"LastName",
          "documentation":"<p>The last name included in the single sign-on details of the user profile.</p>"
        },
        "username":{
          "shape":"UserProfileName",
          "documentation":"<p>The username included in the single sign-on details of the user profile.</p>"
        }
      },
      "documentation":"<p>The single sign-on details of the user profile.</p>"
    },
    "StartDataSourceRunInput":{
      "type":"structure",
      "required":[
        "dataSourceIdentifier",
        "domainIdentifier"
      ],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "dataSourceIdentifier":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source.</p>",
          "location":"uri",
          "locationName":"dataSourceIdentifier"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to start a data source run.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        }
      }
    },
    "StartDataSourceRunOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "dataSourceId",
        "domainId",
        "id",
        "projectId",
        "status",
        "type",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when data source run was created.</p>"
        },
        "dataSourceConfigurationSnapshot":{
          "shape":"String",
          "documentation":"<p>The configuration snapshot of the data source that is being run.</p>"
        },
        "dataSourceId":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to start a data source run.</p>"
        },
        "errorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"DataSourceRunId",
          "documentation":"<p>The identifier of the data source run.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project.</p>"
        },
        "runStatisticsForAssets":{
          "shape":"RunStatisticsForAssets",
          "documentation":"<p>Specifies run statistics for assets.</p>"
        },
        "startedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source run was started.</p>"
        },
        "status":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the data source run.</p>"
        },
        "stoppedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source run was stopped.</p>"
        },
        "type":{
          "shape":"DataSourceRunType",
          "documentation":"<p>The type of the data source run.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source run was updated.</p>"
        }
      }
    },
    "StartMetadataGenerationRunInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "owningProjectIdentifier",
        "target",
        "type"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier to ensure idempotency of the request. This field is automatically populated if not provided.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where you want to start a metadata generation run.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns the asset for which you want to start a metadata generation run.</p>"
        },
        "target":{
          "shape":"MetadataGenerationRunTarget",
          "documentation":"<p>The asset for which you want to start a metadata generation run.</p>"
        },
        "type":{
          "shape":"MetadataGenerationRunType",
          "documentation":"<p>The type of the metadata generation run.</p>"
        }
      }
    },
    "StartMetadataGenerationRunOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the metadata generation run was started.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The ID of the user who started the metadata generation run.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the metadata generation run was started.</p>"
        },
        "id":{
          "shape":"MetadataGenerationRunIdentifier",
          "documentation":"<p>The ID of the metadata generation run.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns the asset for which the metadata generation run was started.</p>"
        },
        "status":{
          "shape":"MetadataGenerationRunStatus",
          "documentation":"<p>The status of the metadata generation run.</p>"
        },
        "type":{
          "shape":"MetadataGenerationRunType",
          "documentation":"<p>The type of the metadata generation run.</p>"
        }
      }
    },
    "String":{"type":"string"},
    "SubscribedAsset":{
      "type":"structure",
      "required":[
        "assetId",
        "assetRevision",
        "status"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of the asset for which the subscription grant is created.</p>"
        },
        "assetRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset for which the subscription grant is created.</p>"
        },
        "failureCause":{
          "shape":"FailureCause",
          "documentation":"<p>The failure cause included in the details of the asset for which the subscription grant is created.</p>"
        },
        "failureTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The failure timestamp included in the details of the asset for which the subscription grant is created.</p>"
        },
        "grantedTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of when the subscription grant to the asset is created.</p>"
        },
        "status":{
          "shape":"SubscriptionGrantStatus",
          "documentation":"<p>The status of the asset for which the subscription grant is created.</p>"
        },
        "targetName":{
          "shape":"String",
          "documentation":"<p>The target name of the asset for which the subscription grant is created.</p>"
        }
      },
      "documentation":"<p>The details of the asset for which the subscription grant is created.</p>"
    },
    "SubscribedAssetListing":{
      "type":"structure",
      "members":{
        "entityId":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of the published asset for which the subscription grant is created.</p>"
        },
        "entityRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the published asset for which the subscription grant is created.</p>"
        },
        "entityType":{
          "shape":"TypeName",
          "documentation":"<p>The type of the published asset for which the subscription grant is created.</p>"
        },
        "forms":{
          "shape":"Forms",
          "documentation":"<p>The forms attached to the published asset for which the subscription grant is created.</p>"
        },
        "glossaryTerms":{
          "shape":"DetailedGlossaryTerms",
          "documentation":"<p>The glossary terms attached to the published asset for which the subscription grant is created.</p>"
        }
      },
      "documentation":"<p>The details of the published asset for which the subscription grant is created.</p>"
    },
    "SubscribedAssets":{
      "type":"list",
      "member":{"shape":"SubscribedAsset"}
    },
    "SubscribedListing":{
      "type":"structure",
      "required":[
        "description",
        "id",
        "item",
        "name",
        "ownerProjectId"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the published asset for which the subscription grant is created.</p>"
        },
        "id":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of the published asset for which the subscription grant is created.</p>"
        },
        "item":{
          "shape":"SubscribedListingItem",
          "documentation":"<p>The published asset for which the subscription grant is created.</p>"
        },
        "name":{
          "shape":"ListingName",
          "documentation":"<p>The name of the published asset for which the subscription grant is created.</p>"
        },
        "ownerProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project of the published asset for which the subscription grant is created.</p>"
        },
        "ownerProjectName":{
          "shape":"String",
          "documentation":"<p>The name of the project that owns the published asset for which the subscription grant is created.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the published asset for which the subscription grant is created.</p>"
        }
      },
      "documentation":"<p>The details of the published asset for which the subscription grant is created.</p>"
    },
    "SubscribedListingInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of the published asset for which the subscription grant is to be created.</p>"
        }
      },
      "documentation":"<p>The published asset for which the subscription grant is to be created.</p>"
    },
    "SubscribedListingInputs":{
      "type":"list",
      "member":{"shape":"SubscribedListingInput"},
      "max":1,
      "min":1
    },
    "SubscribedListingItem":{
      "type":"structure",
      "members":{
        "assetListing":{
          "shape":"SubscribedAssetListing",
          "documentation":"<p>The asset for which the subscription grant is created.</p>"
        }
      },
      "documentation":"<p>The published asset for which the subscription grant is created.</p>",
      "union":true
    },
    "SubscribedPrincipal":{
      "type":"structure",
      "members":{
        "project":{
          "shape":"SubscribedProject",
          "documentation":"<p>The project that has the subscription grant.</p>"
        }
      },
      "documentation":"<p>The principal that has the subscription grant for the asset.</p>",
      "union":true
    },
    "SubscribedPrincipalInput":{
      "type":"structure",
      "members":{
        "project":{
          "shape":"SubscribedProjectInput",
          "documentation":"<p>The project that is to be given a subscription grant.</p>"
        }
      },
      "documentation":"<p>The principal that is to be given a subscriptiong grant.</p>",
      "union":true
    },
    "SubscribedPrincipalInputs":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipalInput"},
      "max":1,
      "min":1
    },
    "SubscribedProject":{
      "type":"structure",
      "members":{
        "id":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that has the subscription grant.</p>"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of the project that has the subscription grant.</p>"
        }
      },
      "documentation":"<p>The project that has the subscription grant.</p>"
    },
    "SubscribedProjectInput":{
      "type":"structure",
      "members":{
        "identifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that is to be given a subscription grant.</p>"
        }
      },
      "documentation":"<p>The project that is to be given a subscription grant.</p>"
    },
    "SubscriptionGrantId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "SubscriptionGrantOverallStatus":{
      "type":"string",
      "enum":[
        "PENDING",
        "IN_PROGRESS",
        "GRANT_FAILED",
        "REVOKE_FAILED",
        "GRANT_AND_REVOKE_FAILED",
        "COMPLETED",
        "INACCESSIBLE"
      ]
    },
    "SubscriptionGrantStatus":{
      "type":"string",
      "enum":[
        "GRANT_PENDING",
        "REVOKE_PENDING",
        "GRANT_IN_PROGRESS",
        "REVOKE_IN_PROGRESS",
        "GRANTED",
        "REVOKED",
        "GRANT_FAILED",
        "REVOKE_FAILED"
      ]
    },
    "SubscriptionGrantSummary":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "grantedEntity",
        "id",
        "status",
        "subscriptionTargetId",
        "updatedAt"
      ],
      "members":{
        "assets":{
          "shape":"SubscribedAssets",
          "documentation":"<p>The assets included in the subscription grant.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when a subscription grant was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The datazone user who created the subscription grant.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription grant exists.</p>"
        },
        "grantedEntity":{
          "shape":"GrantedEntity",
          "documentation":"<p>The entity to which the subscription is granted.</p>"
        },
        "id":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The identifier of the subscription grant.</p>"
        },
        "status":{
          "shape":"SubscriptionGrantOverallStatus",
          "documentation":"<p>The status of the subscription grant.</p>"
        },
        "subscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The ID of the subscription grant.</p>"
        },
        "subscriptionTargetId":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The identifier of the target of the subscription grant.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestampf of when the subscription grant was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription grant.</p>"
        }
      },
      "documentation":"<p>The details of the subscription grant.</p>"
    },
    "SubscriptionGrants":{
      "type":"list",
      "member":{"shape":"SubscriptionGrantSummary"}
    },
    "SubscriptionId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "SubscriptionRequestId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "SubscriptionRequestStatus":{
      "type":"string",
      "enum":[
        "PENDING",
        "ACCEPTED",
        "REJECTED"
      ]
    },
    "SubscriptionRequestSummary":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "requestReason",
        "status",
        "subscribedListings",
        "subscribedPrincipals",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when a subscription request was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription request.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>The decision comment of the subscription request.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription request exists.</p>"
        },
        "id":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the subscription request.</p>"
        },
        "reviewerId":{
          "shape":"String",
          "documentation":"<p>The identifier of the subscription request reviewer.</p>"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>The status of the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"SubscriptionRequestSummarySubscribedListingsList",
          "documentation":"<p>The listings included in the subscription request.</p>"
        },
        "subscribedPrincipals":{
          "shape":"SubscriptionRequestSummarySubscribedPrincipalsList",
          "documentation":"<p>The principals included in the subscription request. </p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription request was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The identifier of the Amazon DataZone user who updated the subscription request.</p>"
        }
      },
      "documentation":"<p>The details of the subscription request.</p>"
    },
    "SubscriptionRequestSummarySubscribedListingsList":{
      "type":"list",
      "member":{"shape":"SubscribedListing"},
      "max":1,
      "min":1
    },
    "SubscriptionRequestSummarySubscribedPrincipalsList":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipal"},
      "max":1,
      "min":1
    },
    "SubscriptionRequests":{
      "type":"list",
      "member":{"shape":"SubscriptionRequestSummary"}
    },
    "SubscriptionStatus":{
      "type":"string",
      "enum":[
        "APPROVED",
        "REVOKED",
        "CANCELLED"
      ]
    },
    "SubscriptionSummary":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "status",
        "subscribedListing",
        "subscribedPrincipal",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription exists.</p>"
        },
        "id":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subscription.</p>"
        },
        "retainPermissions":{
          "shape":"Boolean",
          "documentation":"<p>The retain permissions included in the subscription.</p>"
        },
        "status":{
          "shape":"SubscriptionStatus",
          "documentation":"<p>The status of the subscription.</p>"
        },
        "subscribedListing":{
          "shape":"SubscribedListing",
          "documentation":"<p>The listing included in the subscription.</p>"
        },
        "subscribedPrincipal":{
          "shape":"SubscribedPrincipal",
          "documentation":"<p>The principal included in the subscription.</p>"
        },
        "subscriptionRequestId":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request for the subscription.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription.</p>"
        }
      },
      "documentation":"<p>The details of the subscription.</p>"
    },
    "SubscriptionTargetForm":{
      "type":"structure",
      "required":[
        "content",
        "formName"
      ],
      "members":{
        "content":{
          "shape":"String",
          "documentation":"<p>The content of the subscription target configuration.</p>"
        },
        "formName":{
          "shape":"FormName",
          "documentation":"<p>The form name included in the subscription target configuration.</p>"
        }
      },
      "documentation":"<p>The details of the subscription target configuration.</p>"
    },
    "SubscriptionTargetForms":{
      "type":"list",
      "member":{"shape":"SubscriptionTargetForm"}
    },
    "SubscriptionTargetId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "SubscriptionTargetName":{
      "type":"string",
      "max":256,
      "min":1,
      "sensitive":true
    },
    "SubscriptionTargetSummary":{
      "type":"structure",
      "required":[
        "applicableAssetTypes",
        "authorizedPrincipals",
        "createdAt",
        "createdBy",
        "domainId",
        "environmentId",
        "id",
        "manageAccessRole",
        "name",
        "projectId",
        "provider",
        "subscriptionTargetConfig",
        "type"
      ],
      "members":{
        "applicableAssetTypes":{
          "shape":"ApplicableAssetTypes",
          "documentation":"<p>The asset types included in the subscription target.</p>"
        },
        "authorizedPrincipals":{
          "shape":"AuthorizedPrincipalIdentifiers",
          "documentation":"<p>The authorized principals included in the subscription target.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription target was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription target.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the subscription target exists.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment of the subscription target.</p>"
        },
        "id":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The identifier of the subscription target.</p>"
        },
        "manageAccessRole":{
          "shape":"String",
          "documentation":"<p>The manage access role specified in the subscription target.</p>"
        },
        "name":{
          "shape":"SubscriptionTargetName",
          "documentation":"<p>The name of the subscription target.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project specified in the subscription target.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the subscription target.</p>"
        },
        "subscriptionTargetConfig":{
          "shape":"SubscriptionTargetForms",
          "documentation":"<p>The configuration of the subscription target.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of the subscription target.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription target was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription target.</p>"
        }
      },
      "documentation":"<p>The details of the subscription target.</p>"
    },
    "SubscriptionTargets":{
      "type":"list",
      "member":{"shape":"SubscriptionTargetSummary"}
    },
    "Subscriptions":{
      "type":"list",
      "member":{"shape":"SubscriptionSummary"}
    },
    "SyntheticTimestamp_date_time":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "TagKey":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^[\\w \\.:/=+@-]+$"
    },
    "TagKeyList":{
      "type":"list",
      "member":{"shape":"TagKey"}
    },
    "TagResourceRequest":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tags"
      ],
      "members":{
        "resourceArn":{
          "shape":"String",
          "documentation":"<p>The ARN of the resource to be tagged in Amazon DataZone.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>Specifies the tags for the <code>TagResource</code> action.</p>"
        }
      }
    },
    "TagResourceResponse":{
      "type":"structure",
      "members":{
      }
    },
    "TagValue":{
      "type":"string",
      "max":256,
      "min":0,
      "pattern":"^[\\w \\.:/=+@-]*$"
    },
    "Tags":{
      "type":"map",
      "key":{"shape":"TagKey"},
      "value":{"shape":"TagValue"}
    },
    "TaskId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "TaskStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "INACTIVE"
      ]
    },
    "TermRelations":{
      "type":"structure",
      "members":{
        "classifies":{
          "shape":"TermRelationsClassifiesList",
          "documentation":"<p>The classifies of the term relations.</p>"
        },
        "isA":{
          "shape":"TermRelationsIsAList",
          "documentation":"<p>The <code>isA</code> property of the term relations.</p>"
        }
      },
      "documentation":"<p>The details of the term relations.</p>"
    },
    "TermRelationsClassifiesList":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":10,
      "min":1
    },
    "TermRelationsIsAList":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":10,
      "min":1
    },
    "ThrottlingException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The request was denied due to request throttling.</p>",
      "error":{
        "httpStatusCode":429,
        "senderFault":true
      },
      "exception":true,
      "retryable":{"throttling":false}
    },
    "TimeSeriesDataPointFormInput":{
      "type":"structure",
      "required":[
        "formName",
        "timestamp",
        "typeIdentifier"
      ],
      "members":{
        "content":{
          "shape":"TimeSeriesDataPointFormInputContentString",
          "documentation":"<p>The content of the time series data points form.</p>"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series data points form.</p>"
        },
        "timestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of the time series data points form.</p>"
        },
        "typeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The ID of the type of the time series data points form.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision type of the time series data points form.</p>"
        }
      },
      "documentation":"<p>The time series data points form.</p>"
    },
    "TimeSeriesDataPointFormInputContentString":{
      "type":"string",
      "max":500000,
      "min":0
    },
    "TimeSeriesDataPointFormInputList":{
      "type":"list",
      "member":{"shape":"TimeSeriesDataPointFormInput"}
    },
    "TimeSeriesDataPointFormOutput":{
      "type":"structure",
      "required":[
        "formName",
        "timestamp",
        "typeIdentifier"
      ],
      "members":{
        "content":{
          "shape":"TimeSeriesDataPointFormOutputContentString",
          "documentation":"<p>The content of the time series data points form.</p>"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series data points form.</p>"
        },
        "id":{
          "shape":"DataPointIdentifier",
          "documentation":"<p>The ID of the time series data points form.</p>"
        },
        "timestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of the time series data points form.</p>"
        },
        "typeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The ID of the type of the time series data points form.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision type of the time series data points form.</p>"
        }
      },
      "documentation":"<p>The time series data points form.</p>"
    },
    "TimeSeriesDataPointFormOutputContentString":{
      "type":"string",
      "max":500000,
      "min":0
    },
    "TimeSeriesDataPointFormOutputList":{
      "type":"list",
      "member":{"shape":"TimeSeriesDataPointFormOutput"}
    },
    "TimeSeriesDataPointIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "TimeSeriesDataPointSummaryFormOutput":{
      "type":"structure",
      "required":[
        "formName",
        "timestamp",
        "typeIdentifier"
      ],
      "members":{
        "contentSummary":{
          "shape":"TimeSeriesDataPointSummaryFormOutputContentSummaryString",
          "documentation":"<p>The content of the summary of the time series data points form.</p>"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series data points summary form.</p>"
        },
        "id":{
          "shape":"DataPointIdentifier",
          "documentation":"<p>The ID of the time series data points summary form.</p>"
        },
        "timestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of the time series data points summary form.</p>"
        },
        "typeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The type ID of the time series data points summary form.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The type revision of the time series data points summary form.</p>"
        }
      },
      "documentation":"<p>The summary of the time series data points form.</p>"
    },
    "TimeSeriesDataPointSummaryFormOutputContentSummaryString":{
      "type":"string",
      "max":20000,
      "min":0
    },
    "TimeSeriesDataPointSummaryFormOutputList":{
      "type":"list",
      "member":{"shape":"TimeSeriesDataPointSummaryFormOutput"}
    },
    "TimeSeriesEntityType":{
      "type":"string",
      "enum":[
        "ASSET",
        "LISTING"
      ]
    },
    "TimeSeriesFormName":{
      "type":"string",
      "max":128,
      "min":1
    },
    "Timestamp":{"type":"timestamp"},
    "Timezone":{
      "type":"string",
      "enum":[
        "UTC",
        "AFRICA_JOHANNESBURG",
        "AMERICA_MONTREAL",
        "AMERICA_SAO_PAULO",
        "ASIA_BAHRAIN",
        "ASIA_BANGKOK",
        "ASIA_CALCUTTA",
        "ASIA_DUBAI",
        "ASIA_HONG_KONG",
        "ASIA_JAKARTA",
        "ASIA_KUALA_LUMPUR",
        "ASIA_SEOUL",
        "ASIA_SHANGHAI",
        "ASIA_SINGAPORE",
        "ASIA_TAIPEI",
        "ASIA_TOKYO",
        "AUSTRALIA_MELBOURNE",
        "AUSTRALIA_SYDNEY",
        "CANADA_CENTRAL",
        "CET",
        "CST6CDT",
        "ETC_GMT",
        "ETC_GMT0",
        "ETC_GMT_ADD_0",
        "ETC_GMT_ADD_1",
        "ETC_GMT_ADD_10",
        "ETC_GMT_ADD_11",
        "ETC_GMT_ADD_12",
        "ETC_GMT_ADD_2",
        "ETC_GMT_ADD_3",
        "ETC_GMT_ADD_4",
        "ETC_GMT_ADD_5",
        "ETC_GMT_ADD_6",
        "ETC_GMT_ADD_7",
        "ETC_GMT_ADD_8",
        "ETC_GMT_ADD_9",
        "ETC_GMT_NEG_0",
        "ETC_GMT_NEG_1",
        "ETC_GMT_NEG_10",
        "ETC_GMT_NEG_11",
        "ETC_GMT_NEG_12",
        "ETC_GMT_NEG_13",
        "ETC_GMT_NEG_14",
        "ETC_GMT_NEG_2",
        "ETC_GMT_NEG_3",
        "ETC_GMT_NEG_4",
        "ETC_GMT_NEG_5",
        "ETC_GMT_NEG_6",
        "ETC_GMT_NEG_7",
        "ETC_GMT_NEG_8",
        "ETC_GMT_NEG_9",
        "EUROPE_DUBLIN",
        "EUROPE_LONDON",
        "EUROPE_PARIS",
        "EUROPE_STOCKHOLM",
        "EUROPE_ZURICH",
        "ISRAEL",
        "MEXICO_GENERAL",
        "MST7MDT",
        "PACIFIC_AUCKLAND",
        "US_CENTRAL",
        "US_EASTERN",
        "US_MOUNTAIN",
        "US_PACIFIC"
      ]
    },
    "Title":{
      "type":"string",
      "max":1000,
      "min":0,
      "sensitive":true
    },
    "Topic":{
      "type":"structure",
      "required":[
        "resource",
        "role",
        "subject"
      ],
      "members":{
        "resource":{"shape":"NotificationResource"},
        "role":{
          "shape":"NotificationRole",
          "documentation":"<p>The role of the resource mentioned in a notification.</p>"
        },
        "subject":{
          "shape":"String",
          "documentation":"<p>The subject of the resource mentioned in a notification.</p>"
        }
      },
      "documentation":"<p>The topic of the notification.</p>"
    },
    "TypeName":{
      "type":"string",
      "max":256,
      "min":1,
      "pattern":"^[^\\.]*"
    },
    "TypesSearchScope":{
      "type":"string",
      "enum":[
        "ASSET_TYPE",
        "FORM_TYPE"
      ]
    },
    "UnauthorizedException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>You do not have permission to perform this action.</p>",
      "error":{
        "httpStatusCode":401,
        "senderFault":true
      },
      "exception":true
    },
    "UntagResourceRequest":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tagKeys"
      ],
      "members":{
        "resourceArn":{
          "shape":"String",
          "documentation":"<p>The ARN of the resource to be untagged in Amazon DataZone.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tagKeys":{
          "shape":"TagKeyList",
          "documentation":"<p>Specifies the tag keys for the <code>UntagResource</code> action.</p>",
          "location":"querystring",
          "locationName":"tagKeys"
        }
      }
    },
    "UntagResourceResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateDataSourceInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "assetFormsInput":{
          "shape":"FormInputList",
          "documentation":"<p>The asset forms to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "configuration":{
          "shape":"DataSourceConfigurationInput",
          "documentation":"<p>The configuration to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain in which to update a data source.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>The enable setting to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "identifier":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "publishOnImport":{
          "shape":"Boolean",
          "documentation":"<p>The publish on import setting to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "recommendation":{
          "shape":"RecommendationConfiguration",
          "documentation":"<p>The recommendation to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "schedule":{
          "shape":"ScheduleConfiguration",
          "documentation":"<p>The schedule to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        }
      }
    },
    "UpdateDataSourceOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentId",
        "id",
        "name",
        "projectId"
      ],
      "members":{
        "assetFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The asset forms to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "configuration":{
          "shape":"DataSourceConfigurationOutput",
          "documentation":"<p>The configuration to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was updated.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a data source is to be updated.</p>"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>The enable setting to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment in which a data source is to be updated.</p>"
        },
        "errorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source to be updated.</p>"
        },
        "lastRunAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was last run.</p>"
        },
        "lastRunErrorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>The last run error message of the data source.</p>"
        },
        "lastRunStatus":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The last run status of the data source.</p>"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project where data source is to be updated.</p>"
        },
        "publishOnImport":{
          "shape":"Boolean",
          "documentation":"<p>The publish on import setting to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "recommendation":{
          "shape":"RecommendationConfiguration",
          "documentation":"<p>The recommendation to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "schedule":{
          "shape":"ScheduleConfiguration",
          "documentation":"<p>The schedule to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "status":{
          "shape":"DataSourceStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "type":{
          "shape":"DataSourceType",
          "documentation":"<p>The type to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was updated.</p>"
        }
      }
    },
    "UpdateDomainInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"clientToken"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description to be updated as part of the <code>UpdateDomain</code> action.</p>"
        },
        "domainExecutionRole":{
          "shape":"RoleArn",
          "documentation":"<p>The domain execution role to be updated as part of the <code>UpdateDomain</code> action.</p>"
        },
        "identifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon Web Services domain that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name to be updated as part of the <code>UpdateDomain</code> action.</p>"
        },
        "singleSignOn":{
          "shape":"SingleSignOn",
          "documentation":"<p>The single sign-on option to be updated as part of the <code>UpdateDomain</code> action.</p>"
        }
      }
    },
    "UpdateDomainOutput":{
      "type":"structure",
      "required":["id"],
      "members":{
        "description":{
          "shape":"String",
          "documentation":"<p>The description to be updated as part of the <code>UpdateDomain</code> action.</p>"
        },
        "domainExecutionRole":{
          "shape":"RoleArn",
          "documentation":"<p>The domain execution role to be updated as part of the <code>UpdateDomain</code> action.</p>"
        },
        "id":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>"
        },
        "lastUpdatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>Specifies the timestamp of when the domain was last updated.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name to be updated as part of the <code>UpdateDomain</code> action.</p>"
        },
        "singleSignOn":{
          "shape":"SingleSignOn",
          "documentation":"<p>The single sign-on option of the Amazon DataZone domain.</p>"
        }
      }
    },
    "UpdateEnvironmentInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "description":{
          "shape":"String",
          "documentation":"<p>The description to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain in which the environment is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "identifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        }
      }
    },
    "UpdateEnvironmentOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "environmentProfileId",
        "name",
        "projectId",
        "provider"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The identifier of the Amazon Web Services account in which the environment is to be updated.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services Region in which the environment is updated.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created the environment.</p>"
        },
        "deploymentProperties":{
          "shape":"DeploymentProperties",
          "documentation":"<p>The deployment properties to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain in which the environment is to be updated.</p>"
        },
        "environmentActions":{
          "shape":"EnvironmentActionList",
          "documentation":"<p>The environment actions to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The blueprint identifier of the environment.</p>"
        },
        "environmentProfileId":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The profile identifier of the environment.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "id":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment that is to be updated.</p>"
        },
        "lastDeployment":{
          "shape":"Deployment",
          "documentation":"<p>The last deployment of the environment.</p>"
        },
        "name":{
          "shape":"EnvironmentName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The project identifier of the environment.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider identifier of the environment.</p>"
        },
        "provisionedResources":{
          "shape":"ResourceList",
          "documentation":"<p>The provisioned resources to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "status":{
          "shape":"EnvironmentStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        }
      }
    },
    "UpdateEnvironmentProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The Amazon Web Services account in which a specified environment profile is to be udpated.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services Region in which a specified environment profile is to be updated.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description to be updated as part of the <code>UpdateEnvironmentProfile</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which an environment profile is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The identifier of the environment profile that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateEnvironmentProfile</code> action.</p>"
        },
        "userParameters":{
          "shape":"EnvironmentParametersList",
          "documentation":"<p>The user parameters to be updated as part of the <code>UpdateEnvironmentProfile</code> action.</p>"
        }
      }
    },
    "UpdateEnvironmentProfileOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "environmentBlueprintId",
        "id",
        "name"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The Amazon Web Services account in which a specified environment profile is to be udpated.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services Region in which a specified environment profile is to be updated.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment profile was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created the environment profile.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description to be updated as part of the <code>UpdateEnvironmentProfile</code> action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the environment profile is to be updated.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the blueprint of the environment profile that is to be updated.</p>"
        },
        "id":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The identifier of the environment profile that is to be udpated.</p>"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateEnvironmentProfile</code> action.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project of the environment profile that is to be updated.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment profile was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters to be updated as part of the <code>UpdateEnvironmentProfile</code> action.</p>"
        }
      }
    },
    "UpdateGlossaryInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"GlossaryDescription",
          "documentation":"<p>The description to be updated as part of the <code>UpdateGlossary</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a business glossary is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"GlossaryId",
          "documentation":"<p>The identifier of the business glossary to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"GlossaryName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateGlossary</code> action.</p>"
        },
        "status":{
          "shape":"GlossaryStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateGlossary</code> action.</p>"
        }
      }
    },
    "UpdateGlossaryOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId"
      ],
      "members":{
        "description":{
          "shape":"GlossaryDescription",
          "documentation":"<p>The description to be updated as part of the <code>UpdateGlossary</code> action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a business glossary is to be updated.</p>"
        },
        "id":{
          "shape":"GlossaryId",
          "documentation":"<p>The identifier of the business glossary that is to be updated.</p>"
        },
        "name":{
          "shape":"GlossaryName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateGlossary</code> action.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project in which to update a business glossary.</p>"
        },
        "status":{
          "shape":"GlossaryStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateGlossary</code> action.</p>"
        }
      }
    },
    "UpdateGlossaryTermInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a business glossary term is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "glossaryIdentifier":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The identifier of the business glossary in which a term is to be updated.</p>"
        },
        "identifier":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The identifier of the business glossary term that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "longDescription":{
          "shape":"LongDescription",
          "documentation":"<p>The long description to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The short description to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "status":{
          "shape":"GlossaryTermStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "termRelations":{
          "shape":"TermRelations",
          "documentation":"<p>The term relations to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        }
      }
    },
    "UpdateGlossaryTermOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "glossaryId",
        "id",
        "name",
        "status"
      ],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a business glossary term is to be updated.</p>"
        },
        "glossaryId":{
          "shape":"GlossaryId",
          "documentation":"<p>The identifier of the business glossary in which a term is to be updated.</p>"
        },
        "id":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The identifier of the business glossary term that is to be updated.</p>"
        },
        "longDescription":{
          "shape":"LongDescription",
          "documentation":"<p>The long description to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The short description to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "status":{
          "shape":"GlossaryTermStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "termRelations":{
          "shape":"TermRelations",
          "documentation":"<p>The term relations to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        }
      }
    },
    "UpdateGroupProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "groupIdentifier",
        "status"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a group profile is updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "groupIdentifier":{
          "shape":"GroupIdentifier",
          "documentation":"<p>The identifier of the group profile that is updated.</p>",
          "location":"uri",
          "locationName":"groupIdentifier"
        },
        "status":{
          "shape":"GroupProfileStatus",
          "documentation":"<p>The status of the group profile that is updated.</p>"
        }
      }
    },
    "UpdateGroupProfileOutput":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a group profile is updated.</p>"
        },
        "groupName":{
          "shape":"GroupProfileName",
          "documentation":"<p>The name of the group profile that is updated.</p>"
        },
        "id":{
          "shape":"GroupProfileId",
          "documentation":"<p>The identifier of the group profile that is updated.</p>"
        },
        "status":{
          "shape":"GroupProfileStatus",
          "documentation":"<p>The status of the group profile that is updated.</p>"
        }
      }
    },
    "UpdateProjectInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description to be updated as part of the <code>UpdateProject</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a project is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms to be updated as part of the <code>UpdateProject</code> action.</p>"
        },
        "identifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateProject</code> action.</p>"
        }
      }
    },
    "UpdateProjectOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the project.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the project that is to be updated.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a project is updated.</p>"
        },
        "failureReasons":{
          "shape":"FailureReasons",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms of the project that are to be updated.</p>"
        },
        "id":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that is to be updated.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was last updated.</p>"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of the project that is to be updated.</p>"
        },
        "projectStatus":{
          "shape":"ProjectStatus",
          "documentation":"<p>The status of the project.</p>"
        }
      }
    },
    "UpdateSubscriptionGrantStatusInput":{
      "type":"structure",
      "required":[
        "assetIdentifier",
        "domainIdentifier",
        "identifier",
        "status"
      ],
      "members":{
        "assetIdentifier":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of the asset the subscription grant status of which is to be updated.</p>",
          "location":"uri",
          "locationName":"assetIdentifier"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription grant status is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "failureCause":{
          "shape":"FailureCause",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "identifier":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The identifier of the subscription grant the status of which is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "status":{
          "shape":"SubscriptionGrantStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateSubscriptionGrantStatus</code> action.</p>"
        },
        "targetName":{
          "shape":"String",
          "documentation":"<p>The target name to be updated as part of the <code>UpdateSubscriptionGrantStatus</code> action.</p>"
        }
      }
    },
    "UpdateSubscriptionGrantStatusOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "grantedEntity",
        "id",
        "status",
        "subscriptionTargetId",
        "updatedAt"
      ],
      "members":{
        "assets":{
          "shape":"SubscribedAssets",
          "documentation":"<p>The details of the asset for which the subscription grant is created.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription grant status was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone domain user who created the subscription grant status.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription grant status is to be updated.</p>"
        },
        "grantedEntity":{
          "shape":"GrantedEntity",
          "documentation":"<p>The granted entity to be updated as part of the <code>UpdateSubscriptionGrantStatus</code> action.</p>"
        },
        "id":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The identifier of the subscription grant.</p>"
        },
        "status":{
          "shape":"SubscriptionGrantOverallStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateSubscriptionGrantStatus</code> action.</p>"
        },
        "subscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subscription.</p>"
        },
        "subscriptionTargetId":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The identifier of the subscription target whose subscription grant status is to be updated.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription grant status is to be updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription grant status.</p>"
        }
      }
    },
    "UpdateSubscriptionRequestInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier",
        "requestReason"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription request is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the <code>UpdateSubscriptionRequest</code> action.</p>"
        }
      }
    },
    "UpdateSubscriptionRequestOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "requestReason",
        "status",
        "subscribedListings",
        "subscribedPrincipals",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription request was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription request.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>The decision comment of the <code>UpdateSubscriptionRequest</code> action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription request is to be updated.</p>"
        },
        "id":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request that is to be updated.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the <code>UpdateSubscriptionRequest</code> action.</p>"
        },
        "reviewerId":{
          "shape":"String",
          "documentation":"<p>The identifier of the Amazon DataZone user who reviews the subscription request.</p>"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>The status of the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"UpdateSubscriptionRequestOutputSubscribedListingsList",
          "documentation":"<p>The subscribed listings of the subscription request.</p>"
        },
        "subscribedPrincipals":{
          "shape":"UpdateSubscriptionRequestOutputSubscribedPrincipalsList",
          "documentation":"<p>The subscribed principals of the subscription request.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription request was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription request.</p>"
        }
      }
    },
    "UpdateSubscriptionRequestOutputSubscribedListingsList":{
      "type":"list",
      "member":{"shape":"SubscribedListing"},
      "max":1,
      "min":1
    },
    "UpdateSubscriptionRequestOutputSubscribedPrincipalsList":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipal"},
      "max":1,
      "min":1
    },
    "UpdateSubscriptionTargetInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "identifier"
      ],
      "members":{
        "applicableAssetTypes":{
          "shape":"ApplicableAssetTypes",
          "documentation":"<p>The applicable asset types to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "authorizedPrincipals":{
          "shape":"AuthorizedPrincipalIdentifiers",
          "documentation":"<p>The authorized principals to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription target is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment in which a subscription target is to be updated.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>Identifier of the subscription target that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "manageAccessRole":{
          "shape":"String",
          "documentation":"<p>The manage access role to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "name":{
          "shape":"SubscriptionTargetName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "subscriptionTargetConfig":{
          "shape":"SubscriptionTargetForms",
          "documentation":"<p>The configuration to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        }
      }
    },
    "UpdateSubscriptionTargetOutput":{
      "type":"structure",
      "required":[
        "applicableAssetTypes",
        "authorizedPrincipals",
        "createdAt",
        "createdBy",
        "domainId",
        "environmentId",
        "id",
        "manageAccessRole",
        "name",
        "projectId",
        "provider",
        "subscriptionTargetConfig",
        "type"
      ],
      "members":{
        "applicableAssetTypes":{
          "shape":"ApplicableAssetTypes",
          "documentation":"<p>The applicable asset types to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "authorizedPrincipals":{
          "shape":"AuthorizedPrincipalIdentifiers",
          "documentation":"<p>The authorized principals to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when a subscription target was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription target.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription target is to be updated.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment in which a subscription target is to be updated.</p>"
        },
        "id":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>Identifier of the subscription target that is to be updated.</p>"
        },
        "manageAccessRole":{
          "shape":"String",
          "documentation":"<p>The manage access role to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "name":{
          "shape":"SubscriptionTargetName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project in which a subscription target is to be updated.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "subscriptionTargetConfig":{
          "shape":"SubscriptionTargetForms",
          "documentation":"<p>The configuration to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription target was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription target.</p>"
        }
      }
    },
    "UpdateUserProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "status",
        "userIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a user profile is updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "status":{
          "shape":"UserProfileStatus",
          "documentation":"<p>The status of the user profile that are to be updated.</p>"
        },
        "type":{
          "shape":"UserProfileType",
          "documentation":"<p>The type of the user profile that are to be updated.</p>"
        },
        "userIdentifier":{
          "shape":"UserIdentifier",
          "documentation":"<p>The identifier of the user whose user profile is to be updated.</p>",
          "location":"uri",
          "locationName":"userIdentifier"
        }
      }
    },
    "UpdateUserProfileOutput":{
      "type":"structure",
      "members":{
        "details":{"shape":"UserProfileDetails"},
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a user profile is updated.</p>"
        },
        "id":{
          "shape":"UserProfileId",
          "documentation":"<p>The identifier of the user profile.</p>"
        },
        "status":{
          "shape":"UserProfileStatus",
          "documentation":"<p>The status of the user profile.</p>"
        },
        "type":{
          "shape":"UserProfileType",
          "documentation":"<p>The type of the user profile.</p>"
        }
      }
    },
    "UpdatedAt":{"type":"timestamp"},
    "UpdatedBy":{"type":"string"},
    "UserAssignment":{
      "type":"string",
      "enum":[
        "AUTOMATIC",
        "MANUAL"
      ]
    },
    "UserDesignation":{
      "type":"string",
      "enum":[
        "PROJECT_OWNER",
        "PROJECT_CONTRIBUTOR"
      ]
    },
    "UserDetails":{
      "type":"structure",
      "required":["userId"],
      "members":{
        "userId":{
          "shape":"String",
          "documentation":"<p>The identifier of the Amazon DataZone user.</p>"
        }
      },
      "documentation":"<p>The user details of a project member.</p>"
    },
    "UserIdentifier":{
      "type":"string",
      "pattern":"(^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$|^[a-zA-Z_0-9+=,.@-]+$|^arn:aws:iam::\\d{12}:.+$)"
    },
    "UserProfileDetails":{
      "type":"structure",
      "members":{
        "iam":{
          "shape":"IamUserProfileDetails",
          "documentation":"<p>The IAM details included in the user profile details.</p>"
        },
        "sso":{
          "shape":"SsoUserProfileDetails",
          "documentation":"<p>The single sign-on details included in the user profile details.</p>"
        }
      },
      "documentation":"<p>The details of the user profile in Amazon DataZone.</p>",
      "union":true
    },
    "UserProfileId":{
      "type":"string",
      "pattern":"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
    },
    "UserProfileName":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"^[a-zA-Z_0-9+=,.@-]+$",
      "sensitive":true
    },
    "UserProfileStatus":{
      "type":"string",
      "enum":[
        "ASSIGNED",
        "NOT_ASSIGNED",
        "ACTIVATED",
        "DEACTIVATED"
      ]
    },
    "UserProfileSummaries":{
      "type":"list",
      "member":{"shape":"UserProfileSummary"}
    },
    "UserProfileSummary":{
      "type":"structure",
      "members":{
        "details":{
          "shape":"UserProfileDetails",
          "documentation":"<p>The details of the user profile.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain of the user profile.</p>"
        },
        "id":{
          "shape":"UserProfileId",
          "documentation":"<p>The ID of the user profile.</p>"
        },
        "status":{
          "shape":"UserProfileStatus",
          "documentation":"<p>The status of the user profile.</p>"
        },
        "type":{
          "shape":"UserProfileType",
          "documentation":"<p>The type of the user profile.</p>"
        }
      },
      "documentation":"<p>The details of the user profile.</p>"
    },
    "UserProfileType":{
      "type":"string",
      "enum":[
        "IAM",
        "SSO"
      ]
    },
    "UserSearchText":{
      "type":"string",
      "max":1024,
      "min":0,
      "sensitive":true
    },
    "UserSearchType":{
      "type":"string",
      "enum":[
        "SSO_USER",
        "DATAZONE_USER",
        "DATAZONE_SSO_USER",
        "DATAZONE_IAM_USER"
      ]
    },
    "UserType":{
      "type":"string",
      "enum":[
        "IAM_USER",
        "IAM_ROLE",
        "SSO_USER"
      ]
    },
    "ValidationException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The input fails to satisfy the constraints specified by the Amazon Web Services service.</p>",
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    }
  },
  "documentation":"<p>Amazon DataZone is a data management service that enables you to catalog, discover, govern, share, and analyze your data. With Amazon DataZone, you can share and access your data across accounts and supported regions. Amazon DataZone simplifies your experience across Amazon Web Services services, including, but not limited to, Amazon Redshift, Amazon Athena, Amazon Web Services Glue, and Amazon Web Services Lake Formation.</p>"
}
