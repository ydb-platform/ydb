{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2023-01-27",
    "endpointPrefix":"timestream-influxdb",
    "jsonVersion":"1.0",
    "protocol":"json",
    "ripServiceName":"timestream-influxdb",
    "serviceAbbreviation":"Timestream InfluxDB",
    "serviceFullName":"Timestream InfluxDB",
    "serviceId":"Timestream InfluxDB",
    "signatureVersion":"v4",
    "signingName":"timestream-influxdb",
    "targetPrefix":"AmazonTimestreamInfluxDB",
    "uid":"timestream-influxdb-2023-01-27"
  },
  "operations":{
    "CreateDbInstance":{
      "name":"CreateDbInstance",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateDbInstanceInput"},
      "output":{"shape":"CreateDbInstanceOutput"},
      "errors":[
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"},
        {"shape":"ConflictException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Creates a new Timestream for InfluxDB DB instance.</p>",
      "idempotent":true
    },
    "CreateDbParameterGroup":{
      "name":"CreateDbParameterGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateDbParameterGroupInput"},
      "output":{"shape":"CreateDbParameterGroupOutput"},
      "errors":[
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"},
        {"shape":"ConflictException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Creates a new Timestream for InfluxDB DB parameter group to associate with DB instances.</p>",
      "idempotent":true
    },
    "DeleteDbInstance":{
      "name":"DeleteDbInstance",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteDbInstanceInput"},
      "output":{"shape":"DeleteDbInstanceOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"},
        {"shape":"ConflictException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Deletes a Timestream for InfluxDB DB instance.</p>",
      "idempotent":true
    },
    "GetDbInstance":{
      "name":"GetDbInstance",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetDbInstanceInput"},
      "output":{"shape":"GetDbInstanceOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Returns a Timestream for InfluxDB DB instance.</p>"
    },
    "GetDbParameterGroup":{
      "name":"GetDbParameterGroup",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetDbParameterGroupInput"},
      "output":{"shape":"GetDbParameterGroupOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Returns a Timestream for InfluxDB DB parameter group.</p>"
    },
    "ListDbInstances":{
      "name":"ListDbInstances",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListDbInstancesInput"},
      "output":{"shape":"ListDbInstancesOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Returns a list of Timestream for InfluxDB DB instances.</p>"
    },
    "ListDbParameterGroups":{
      "name":"ListDbParameterGroups",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListDbParameterGroupsInput"},
      "output":{"shape":"ListDbParameterGroupsOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Returns a list of Timestream for InfluxDB DB parameter groups.</p>"
    },
    "ListTagsForResource":{
      "name":"ListTagsForResource",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListTagsForResourceRequest"},
      "output":{"shape":"ListTagsForResourceResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>A list of tags applied to the resource.</p>"
    },
    "TagResource":{
      "name":"TagResource",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"TagResourceRequest"},
      "errors":[
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Tags are composed of a Key/Value pairs. You can use tags to categorize and track your Timestream for InfluxDB resources.</p>",
      "idempotent":true
    },
    "UntagResource":{
      "name":"UntagResource",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UntagResourceRequest"},
      "errors":[
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Removes the tag from the specified resource.</p>",
      "idempotent":true
    },
    "UpdateDbInstance":{
      "name":"UpdateDbInstance",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateDbInstanceInput"},
      "output":{"shape":"UpdateDbInstanceOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"},
        {"shape":"ConflictException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Updates a Timestream for InfluxDB DB instance.</p>",
      "idempotent":true
    }
  },
  "shapes":{
    "AccessDeniedException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"}
      },
      "documentation":"<p>You do not have sufficient access to perform this action.</p>",
      "exception":true
    },
    "AllocatedStorage":{
      "type":"integer",
      "box":true,
      "max":16384,
      "min":20
    },
    "Arn":{
      "type":"string",
      "max":1011,
      "min":1,
      "pattern":"arn:aws[a-z\\-]*:timestream\\-influxdb:[a-z0-9\\-]+:[0-9]{12}:(db\\-instance|db\\-parameter\\-group)/[a-zA-Z0-9]{3,64}"
    },
    "Boolean":{
      "type":"boolean",
      "box":true
    },
    "Bucket":{
      "type":"string",
      "max":64,
      "min":2,
      "pattern":"[^_][^\"]*"
    },
    "ConflictException":{
      "type":"structure",
      "required":[
        "message",
        "resourceId",
        "resourceType"
      ],
      "members":{
        "message":{"shape":"String"},
        "resourceId":{
          "shape":"String",
          "documentation":"<p>The identifier for the Timestream for InfluxDB resource associated with the request.</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>The type of Timestream for InfluxDB resource associated with the request.</p>"
        }
      },
      "documentation":"<p>The request conflicts with an existing resource in Timestream for InfluxDB.</p>",
      "exception":true
    },
    "CreateDbInstanceInput":{
      "type":"structure",
      "required":[
        "name",
        "password",
        "dbInstanceType",
        "vpcSubnetIds",
        "vpcSecurityGroupIds",
        "allocatedStorage"
      ],
      "members":{
        "name":{
          "shape":"DbInstanceName",
          "documentation":"<p>The name that uniquely identifies the DB instance when interacting with the Amazon Timestream for InfluxDB API and CLI commands. This name will also be a prefix included in the endpoint. DB instance names must be unique per customer and per region.</p>"
        },
        "username":{
          "shape":"Username",
          "documentation":"<p>The username of the initial admin user created in InfluxDB. Must start with a letter and can't end with a hyphen or contain two consecutive hyphens. For example, my-user1. This username will allow you to access the InfluxDB UI to perform various administrative tasks and also use the InfluxDB CLI to create an operator token. These attributes will be stored in a Secret created in Amazon Secrets Manager in your account.</p>"
        },
        "password":{
          "shape":"Password",
          "documentation":"<p>The password of the initial admin user created in InfluxDB. This password will allow you to access the InfluxDB UI to perform various administrative tasks and also use the InfluxDB CLI to create an operator token. These attributes will be stored in a Secret created in AWS SecretManager in your account.</p>"
        },
        "organization":{
          "shape":"Organization",
          "documentation":"<p>The name of the initial organization for the initial admin user in InfluxDB. An InfluxDB organization is a workspace for a group of users.</p>"
        },
        "bucket":{
          "shape":"Bucket",
          "documentation":"<p>The name of the initial InfluxDB bucket. All InfluxDB data is stored in a bucket. A bucket combines the concept of a database and a retention period (the duration of time that each data point persists). A bucket belongs to an organization.</p>"
        },
        "dbInstanceType":{
          "shape":"DbInstanceType",
          "documentation":"<p>The Timestream for InfluxDB DB instance type to run InfluxDB on.</p>"
        },
        "vpcSubnetIds":{
          "shape":"VpcSubnetIdList",
          "documentation":"<p>A list of VPC subnet IDs to associate with the DB instance. Provide at least two VPC subnet IDs in different availability zones when deploying with a Multi-AZ standby.</p>"
        },
        "vpcSecurityGroupIds":{
          "shape":"VpcSecurityGroupIdList",
          "documentation":"<p>A list of VPC security group IDs to associate with the DB instance.</p>"
        },
        "publiclyAccessible":{
          "shape":"Boolean",
          "documentation":"<p>Configures the DB instance with a public IP to facilitate access.</p>"
        },
        "dbStorageType":{
          "shape":"DbStorageType",
          "documentation":"<p>The Timestream for InfluxDB DB storage type to read and write InfluxDB data.</p> <p>You can choose between 3 different types of provisioned Influx IOPS included storage according to your workloads requirements:</p> <ul> <li> <p>Influx IO Included 3000 IOPS</p> </li> <li> <p>Influx IO Included 12000 IOPS</p> </li> <li> <p>Influx IO Included 16000 IOPS</p> </li> </ul>"
        },
        "allocatedStorage":{
          "shape":"AllocatedStorage",
          "documentation":"<p>The amount of storage to allocate for your DB storage type in GiB (gibibytes).</p>"
        },
        "dbParameterGroupIdentifier":{
          "shape":"DbParameterGroupIdentifier",
          "documentation":"<p>The id of the DB parameter group to assign to your DB instance. DB parameter groups specify how the database is configured. For example, DB parameter groups can specify the limit for query concurrency.</p>"
        },
        "deploymentType":{
          "shape":"DeploymentType",
          "documentation":"<p>Specifies whether the DB instance will be deployed as a standalone instance or with a Multi-AZ standby for high availability.</p>"
        },
        "logDeliveryConfiguration":{
          "shape":"LogDeliveryConfiguration",
          "documentation":"<p>Configuration for sending InfluxDB engine logs to a specified S3 bucket.</p>"
        },
        "tags":{
          "shape":"RequestTagMap",
          "documentation":"<p>A list of key-value pairs to associate with the DB instance.</p>"
        }
      }
    },
    "CreateDbInstanceOutput":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "arn",
        "vpcSubnetIds"
      ],
      "members":{
        "id":{
          "shape":"DbInstanceId",
          "documentation":"<p>A service-generated unique identifier.</p>"
        },
        "name":{
          "shape":"DbInstanceName",
          "documentation":"<p>The customer-supplied name that uniquely identifies the DB instance when interacting with the Amazon Timestream for InfluxDB API and CLI commands.</p>"
        },
        "arn":{
          "shape":"Arn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the DB instance.</p>"
        },
        "status":{
          "shape":"Status",
          "documentation":"<p>The status of the DB instance.</p>"
        },
        "endpoint":{
          "shape":"String",
          "documentation":"<p>The endpoint used to connect to InfluxDB. The default InfluxDB port is 8086.</p>"
        },
        "dbInstanceType":{
          "shape":"DbInstanceType",
          "documentation":"<p>The Timestream for InfluxDB instance type that InfluxDB runs on.</p>"
        },
        "dbStorageType":{
          "shape":"DbStorageType",
          "documentation":"<p>The Timestream for InfluxDB DB storage type that InfluxDB stores data on.</p>"
        },
        "allocatedStorage":{
          "shape":"AllocatedStorage",
          "documentation":"<p>The amount of storage allocated for your DB storage type (in gibibytes).</p>"
        },
        "deploymentType":{
          "shape":"DeploymentType",
          "documentation":"<p>Specifies whether the Timestream for InfluxDB is deployed as Single-AZ or with a MultiAZ Standby for High availability.</p>"
        },
        "vpcSubnetIds":{
          "shape":"VpcSubnetIdList",
          "documentation":"<p>A list of VPC subnet IDs associated with the DB instance.</p>"
        },
        "publiclyAccessible":{
          "shape":"Boolean",
          "documentation":"<p>Indicates if the DB instance has a public IP to facilitate access.</p>"
        },
        "vpcSecurityGroupIds":{
          "shape":"VpcSecurityGroupIdList",
          "documentation":"<p>A list of VPC security group IDs associated with the DB instance.</p>"
        },
        "dbParameterGroupIdentifier":{
          "shape":"DbParameterGroupIdentifier",
          "documentation":"<p>The id of the DB parameter group assigned to your DB instance.</p>"
        },
        "availabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone in which the DB instance resides.</p>"
        },
        "secondaryAvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone in which the standby instance is located when deploying with a MultiAZ standby instance.</p>"
        },
        "logDeliveryConfiguration":{
          "shape":"LogDeliveryConfiguration",
          "documentation":"<p>Configuration for sending InfluxDB engine logs to send to specified S3 bucket.</p>"
        },
        "influxAuthParametersSecretArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret containing the initial InfluxDB authorization parameters. The secret value is a JSON formatted key-value pair holding InfluxDB authorization values: organization, bucket, username, and password.</p>"
        }
      }
    },
    "CreateDbParameterGroupInput":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{
          "shape":"DbParameterGroupName",
          "documentation":"<p>The name of the DB parameter group. The name must be unique per customer and per region.</p>"
        },
        "description":{
          "shape":"CreateDbParameterGroupInputDescriptionString",
          "documentation":"<p>A description of the DB parameter group.</p>"
        },
        "parameters":{
          "shape":"Parameters",
          "documentation":"<p>A list of the parameters that comprise the DB parameter group.</p>"
        },
        "tags":{
          "shape":"RequestTagMap",
          "documentation":"<p>A list of key-value pairs to associate with the DB parameter group.</p>"
        }
      }
    },
    "CreateDbParameterGroupInputDescriptionString":{
      "type":"string",
      "max":500,
      "min":0
    },
    "CreateDbParameterGroupOutput":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "arn"
      ],
      "members":{
        "id":{
          "shape":"DbParameterGroupId",
          "documentation":"<p>A service-generated unique identifier.</p>"
        },
        "name":{
          "shape":"DbParameterGroupName",
          "documentation":"<p>The customer-supplied name that uniquely identifies the DB parameter group when interacting with the Amazon Timestream for InfluxDB API and CLI commands.</p>"
        },
        "arn":{
          "shape":"Arn",
          "documentation":"<p>The Amazon Resource Name (ARM) of the DB parameter group.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the DB parameter group.</p>"
        },
        "parameters":{
          "shape":"Parameters",
          "documentation":"<p>A list of the parameters that comprise the DB parameter group.</p>"
        }
      }
    },
    "DbInstanceId":{
      "type":"string",
      "max":64,
      "min":3,
      "pattern":"[a-zA-Z0-9]+"
    },
    "DbInstanceIdentifier":{
      "type":"string",
      "max":64,
      "min":3,
      "pattern":"[a-zA-Z0-9]+"
    },
    "DbInstanceName":{
      "type":"string",
      "max":40,
      "min":3,
      "pattern":"[a-zA-z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*"
    },
    "DbInstanceSummary":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "arn"
      ],
      "members":{
        "id":{
          "shape":"DbInstanceId",
          "documentation":"<p>The service-generated unique identifier of the DB instance.</p>"
        },
        "name":{
          "shape":"DbInstanceName",
          "documentation":"<p>This customer-supplied name uniquely identifies the DB instance when interacting with the Amazon Timestream for InfluxDB API and AWS CLI commands.</p>"
        },
        "arn":{
          "shape":"Arn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the DB instance.</p>"
        },
        "status":{
          "shape":"Status",
          "documentation":"<p>The status of the DB instance.</p>"
        },
        "endpoint":{
          "shape":"String",
          "documentation":"<p>The endpoint used to connect to InfluxDB. The default InfluxDB port is 8086.</p>"
        },
        "dbInstanceType":{
          "shape":"DbInstanceType",
          "documentation":"<p>The Timestream for InfluxDB instance type to run InfluxDB on.</p>"
        },
        "dbStorageType":{
          "shape":"DbStorageType",
          "documentation":"<p>The storage type for your DB instance.</p>"
        },
        "allocatedStorage":{
          "shape":"AllocatedStorage",
          "documentation":"<p>The amount of storage to allocate for your DbStorageType in GiB (gibibytes).</p>"
        },
        "deploymentType":{
          "shape":"DeploymentType",
          "documentation":"<p>Single-Instance or with a MultiAZ Standby for High availability.</p>"
        }
      },
      "documentation":"<p>Contains a summary of a DB instance.</p>"
    },
    "DbInstanceSummaryList":{
      "type":"list",
      "member":{"shape":"DbInstanceSummary"}
    },
    "DbInstanceType":{
      "type":"string",
      "enum":[
        "db.influx.medium",
        "db.influx.large",
        "db.influx.xlarge",
        "db.influx.2xlarge",
        "db.influx.4xlarge",
        "db.influx.8xlarge",
        "db.influx.12xlarge",
        "db.influx.16xlarge"
      ]
    },
    "DbParameterGroupId":{
      "type":"string",
      "max":64,
      "min":3,
      "pattern":"[a-zA-Z0-9]+"
    },
    "DbParameterGroupIdentifier":{
      "type":"string",
      "max":64,
      "min":3,
      "pattern":"[a-zA-Z0-9]+"
    },
    "DbParameterGroupName":{
      "type":"string",
      "max":64,
      "min":3,
      "pattern":"[a-zA-z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*"
    },
    "DbParameterGroupSummary":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "arn"
      ],
      "members":{
        "id":{
          "shape":"DbParameterGroupId",
          "documentation":"<p>A service-generated unique identifier.</p>"
        },
        "name":{
          "shape":"DbParameterGroupName",
          "documentation":"<p>This customer-supplied name uniquely identifies the parameter group.</p>"
        },
        "arn":{
          "shape":"Arn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the DB parameter group.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>A description of the DB parameter group.</p>"
        }
      },
      "documentation":"<p>Contains a summary of a DB parameter group.</p>"
    },
    "DbParameterGroupSummaryList":{
      "type":"list",
      "member":{"shape":"DbParameterGroupSummary"}
    },
    "DbStorageType":{
      "type":"string",
      "enum":[
        "InfluxIOIncludedT1",
        "InfluxIOIncludedT2",
        "InfluxIOIncludedT3"
      ]
    },
    "DeleteDbInstanceInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"DbInstanceIdentifier",
          "documentation":"<p>The id of the DB instance.</p>"
        }
      }
    },
    "DeleteDbInstanceOutput":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "arn",
        "vpcSubnetIds"
      ],
      "members":{
        "id":{
          "shape":"DbInstanceId",
          "documentation":"<p>A service-generated unique identifier.</p>"
        },
        "name":{
          "shape":"DbInstanceName",
          "documentation":"<p>The customer-supplied name that uniquely identifies the DB instance when interacting with the Amazon Timestream for InfluxDB API and CLI commands.</p>"
        },
        "arn":{
          "shape":"Arn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the DB instance.</p>"
        },
        "status":{
          "shape":"Status",
          "documentation":"<p>The status of the DB instance.</p>"
        },
        "endpoint":{
          "shape":"String",
          "documentation":"<p>The endpoint used to connect to InfluxDB. The default InfluxDB port is 8086.</p>"
        },
        "dbInstanceType":{
          "shape":"DbInstanceType",
          "documentation":"<p>The Timestream for InfluxDB instance type that InfluxDB runs on.</p>"
        },
        "dbStorageType":{
          "shape":"DbStorageType",
          "documentation":"<p>The Timestream for InfluxDB DB storage type that InfluxDB stores data on.</p>"
        },
        "allocatedStorage":{
          "shape":"AllocatedStorage",
          "documentation":"<p>The amount of storage allocated for your DB storage type (in gibibytes).</p>"
        },
        "deploymentType":{
          "shape":"DeploymentType",
          "documentation":"<p>Specifies whether the Timestream for InfluxDB is deployed as Single-AZ or with a MultiAZ Standby for High availability.</p>"
        },
        "vpcSubnetIds":{
          "shape":"VpcSubnetIdList",
          "documentation":"<p>A list of VPC subnet IDs associated with the DB instance.</p>"
        },
        "publiclyAccessible":{
          "shape":"Boolean",
          "documentation":"<p>Indicates if the DB instance has a public IP to facilitate access.</p>"
        },
        "vpcSecurityGroupIds":{
          "shape":"VpcSecurityGroupIdList",
          "documentation":"<p>A list of VPC security group IDs associated with the DB instance.</p>"
        },
        "dbParameterGroupIdentifier":{
          "shape":"DbParameterGroupIdentifier",
          "documentation":"<p>The id of the DB parameter group assigned to your DB instance.</p>"
        },
        "availabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone in which the DB instance resides.</p>"
        },
        "secondaryAvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone in which the standby instance is located when deploying with a MultiAZ standby instance.</p>"
        },
        "logDeliveryConfiguration":{
          "shape":"LogDeliveryConfiguration",
          "documentation":"<p>Configuration for sending InfluxDB engine logs to send to specified S3 bucket.</p>"
        },
        "influxAuthParametersSecretArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret containing the initial InfluxDB authorization parameters. The secret value is a JSON formatted key-value pair holding InfluxDB authorization values: organization, bucket, username, and password.</p>"
        }
      }
    },
    "DeploymentType":{
      "type":"string",
      "enum":[
        "SINGLE_AZ",
        "WITH_MULTIAZ_STANDBY"
      ]
    },
    "GetDbInstanceInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"DbInstanceIdentifier",
          "documentation":"<p>The id of the DB instance.</p>"
        }
      }
    },
    "GetDbInstanceOutput":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "arn",
        "vpcSubnetIds"
      ],
      "members":{
        "id":{
          "shape":"DbInstanceId",
          "documentation":"<p>A service-generated unique identifier.</p>"
        },
        "name":{
          "shape":"DbInstanceName",
          "documentation":"<p>The customer-supplied name that uniquely identifies the DB instance when interacting with the Amazon Timestream for InfluxDB API and CLI commands.</p>"
        },
        "arn":{
          "shape":"Arn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the DB instance.</p>"
        },
        "status":{
          "shape":"Status",
          "documentation":"<p>The status of the DB instance.</p>"
        },
        "endpoint":{
          "shape":"String",
          "documentation":"<p>The endpoint used to connect to InfluxDB. The default InfluxDB port is 8086.</p>"
        },
        "dbInstanceType":{
          "shape":"DbInstanceType",
          "documentation":"<p>The Timestream for InfluxDB instance type that InfluxDB runs on.</p>"
        },
        "dbStorageType":{
          "shape":"DbStorageType",
          "documentation":"<p>The Timestream for InfluxDB DB storage type that InfluxDB stores data on.</p>"
        },
        "allocatedStorage":{
          "shape":"AllocatedStorage",
          "documentation":"<p>The amount of storage allocated for your DB storage type (in gibibytes).</p>"
        },
        "deploymentType":{
          "shape":"DeploymentType",
          "documentation":"<p>Specifies whether the Timestream for InfluxDB is deployed as Single-AZ or with a MultiAZ Standby for High availability.</p>"
        },
        "vpcSubnetIds":{
          "shape":"VpcSubnetIdList",
          "documentation":"<p>A list of VPC subnet IDs associated with the DB instance.</p>"
        },
        "publiclyAccessible":{
          "shape":"Boolean",
          "documentation":"<p>Indicates if the DB instance has a public IP to facilitate access.</p>"
        },
        "vpcSecurityGroupIds":{
          "shape":"VpcSecurityGroupIdList",
          "documentation":"<p>A list of VPC security group IDs associated with the DB instance.</p>"
        },
        "dbParameterGroupIdentifier":{
          "shape":"DbParameterGroupIdentifier",
          "documentation":"<p>The id of the DB parameter group assigned to your DB instance.</p>"
        },
        "availabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone in which the DB instance resides.</p>"
        },
        "secondaryAvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone in which the standby instance is located when deploying with a MultiAZ standby instance.</p>"
        },
        "logDeliveryConfiguration":{
          "shape":"LogDeliveryConfiguration",
          "documentation":"<p>Configuration for sending InfluxDB engine logs to send to specified S3 bucket.</p>"
        },
        "influxAuthParametersSecretArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret containing the initial InfluxDB authorization parameters. The secret value is a JSON formatted key-value pair holding InfluxDB authorization values: organization, bucket, username, and password.</p>"
        }
      }
    },
    "GetDbParameterGroupInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"DbParameterGroupIdentifier",
          "documentation":"<p>The id of the DB parameter group.</p>"
        }
      }
    },
    "GetDbParameterGroupOutput":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "arn"
      ],
      "members":{
        "id":{
          "shape":"DbParameterGroupId",
          "documentation":"<p>A service-generated unique identifier.</p>"
        },
        "name":{
          "shape":"DbParameterGroupName",
          "documentation":"<p>The customer-supplied name that uniquely identifies the DB parameter group when interacting with the Amazon Timestream for InfluxDB API and CLI commands.</p>"
        },
        "arn":{
          "shape":"Arn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the DB parameter group.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>A description of the DB parameter group.</p>"
        },
        "parameters":{
          "shape":"Parameters",
          "documentation":"<p>The parameters that comprise the DB parameter group.</p>"
        }
      }
    },
    "InfluxDBv2Parameters":{
      "type":"structure",
      "members":{
        "fluxLogEnabled":{
          "shape":"Boolean",
          "documentation":"<p>Include option to show detailed logs for Flux queries.</p> <p>Default: false</p>"
        },
        "logLevel":{
          "shape":"LogLevel",
          "documentation":"<p>Log output level. InfluxDB outputs log entries with severity levels greater than or equal to the level specified.</p> <p>Default: info</p>"
        },
        "noTasks":{
          "shape":"Boolean",
          "documentation":"<p>Disable the task scheduler. If problematic tasks prevent InfluxDB from starting, use this option to start InfluxDB without scheduling or executing tasks.</p> <p>Default: false</p>"
        },
        "queryConcurrency":{
          "shape":"InfluxDBv2ParametersQueryConcurrencyInteger",
          "documentation":"<p>Number of queries allowed to execute concurrently. Setting to 0 allows an unlimited number of concurrent queries.</p> <p>Default: 0</p>"
        },
        "queryQueueSize":{
          "shape":"InfluxDBv2ParametersQueryQueueSizeInteger",
          "documentation":"<p>Maximum number of queries allowed in execution queue. When queue limit is reached, new queries are rejected. Setting to 0 allows an unlimited number of queries in the queue.</p> <p>Default: 0</p>"
        },
        "tracingType":{
          "shape":"TracingType",
          "documentation":"<p>Enable tracing in InfluxDB and specifies the tracing type. Tracing is disabled by default.</p>"
        },
        "metricsDisabled":{
          "shape":"Boolean",
          "documentation":"<p>Disable the HTTP /metrics endpoint which exposes <a href=\"https://docs.influxdata.com/influxdb/v2/reference/internals/metrics/\">internal InfluxDB metrics</a>.</p> <p>Default: false</p>"
        }
      },
      "documentation":"<p>All the customer-modifiable InfluxDB v2 parameters in Timestream for InfluxDB.</p>"
    },
    "InfluxDBv2ParametersQueryConcurrencyInteger":{
      "type":"integer",
      "box":true,
      "max":256,
      "min":0
    },
    "InfluxDBv2ParametersQueryQueueSizeInteger":{
      "type":"integer",
      "box":true,
      "max":256,
      "min":0
    },
    "Integer":{
      "type":"integer",
      "box":true
    },
    "InternalServerException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"}
      },
      "documentation":"<p>The request processing has failed because of an unknown error, exception or failure.</p>",
      "exception":true,
      "fault":true,
      "retryable":{"throttling":false}
    },
    "ListDbInstancesInput":{
      "type":"structure",
      "members":{
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The pagination token. To resume pagination, provide the NextToken value as argument of a subsequent API invocation.</p>"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of items to return in the output. If the total number of items available is more than the value specified, a NextToken is provided in the output. To resume pagination, provide the NextToken value as argument of a subsequent API invocation.</p>"
        }
      }
    },
    "ListDbInstancesOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"DbInstanceSummaryList",
          "documentation":"<p>A list of Timestream for InfluxDB DB instance summaries.</p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>Token from a previous call of the operation. When this value is provided, the service returns results from where the previous response left off.</p>"
        }
      }
    },
    "ListDbParameterGroupsInput":{
      "type":"structure",
      "members":{
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The pagination token. To resume pagination, provide the NextToken value as argument of a subsequent API invocation.</p>"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of items to return in the output. If the total number of items available is more than the value specified, a NextToken is provided in the output. To resume pagination, provide the NextToken value as argument of a subsequent API invocation.</p>"
        }
      }
    },
    "ListDbParameterGroupsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"DbParameterGroupSummaryList",
          "documentation":"<p>A list of Timestream for InfluxDB DB parameter group summaries.</p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>Token from a previous call of the operation. When this value is provided, the service returns results from where the previous response left off.</p>"
        }
      }
    },
    "ListTagsForResourceRequest":{
      "type":"structure",
      "required":["resourceArn"],
      "members":{
        "resourceArn":{
          "shape":"Arn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the tagged resource.</p>"
        }
      }
    },
    "ListTagsForResourceResponse":{
      "type":"structure",
      "members":{
        "tags":{
          "shape":"ResponseTagMap",
          "documentation":"<p>A list of tags used to categorize and track resources.</p>"
        }
      }
    },
    "LogDeliveryConfiguration":{
      "type":"structure",
      "required":["s3Configuration"],
      "members":{
        "s3Configuration":{
          "shape":"S3Configuration",
          "documentation":"<p>Configuration for S3 bucket log delivery.</p>"
        }
      },
      "documentation":"<p>Configuration for sending InfluxDB engine logs to send to specified S3 bucket.</p>"
    },
    "LogLevel":{
      "type":"string",
      "enum":[
        "debug",
        "info",
        "error"
      ]
    },
    "MaxResults":{
      "type":"integer",
      "box":true,
      "max":100,
      "min":1
    },
    "NextToken":{"type":"string"},
    "Organization":{
      "type":"string",
      "max":64,
      "min":1
    },
    "Parameters":{
      "type":"structure",
      "members":{
        "InfluxDBv2":{
          "shape":"InfluxDBv2Parameters",
          "documentation":"<p>All the customer-modifiable InfluxDB v2 parameters in Timestream for InfluxDB.</p>"
        }
      },
      "documentation":"<p>The parameters that comprise the parameter group.</p>",
      "union":true
    },
    "Password":{
      "type":"string",
      "max":64,
      "min":8,
      "pattern":"[a-zA-Z0-9]+",
      "sensitive":true
    },
    "RequestTagMap":{
      "type":"map",
      "key":{"shape":"TagKey"},
      "value":{"shape":"TagValue"},
      "max":200,
      "min":1
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "required":[
        "message",
        "resourceId",
        "resourceType"
      ],
      "members":{
        "message":{"shape":"String"},
        "resourceId":{
          "shape":"String",
          "documentation":"<p>The identifier for the Timestream for InfluxDB resource associated with the request.</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>The type of Timestream for InfluxDB resource associated with the request.</p>"
        }
      },
      "documentation":"<p>The requested resource was not found or does not exist.</p>",
      "exception":true
    },
    "ResponseTagMap":{
      "type":"map",
      "key":{"shape":"TagKey"},
      "value":{"shape":"TagValue"},
      "max":200,
      "min":0
    },
    "S3Configuration":{
      "type":"structure",
      "required":[
        "bucketName",
        "enabled"
      ],
      "members":{
        "bucketName":{
          "shape":"S3ConfigurationBucketNameString",
          "documentation":"<p>The name of the S3 bucket to deliver logs to.</p>"
        },
        "enabled":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether log delivery to the S3 bucket is enabled.</p>"
        }
      },
      "documentation":"<p>Configuration for S3 bucket log delivery.</p>"
    },
    "S3ConfigurationBucketNameString":{
      "type":"string",
      "max":63,
      "min":3,
      "pattern":"[0-9a-z]+[0-9a-z\\.\\-]*[0-9a-z]+"
    },
    "ServiceQuotaExceededException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"}
      },
      "documentation":"<p>The request exceeds the service quota.</p>",
      "exception":true
    },
    "Status":{
      "type":"string",
      "enum":[
        "CREATING",
        "AVAILABLE",
        "DELETING",
        "MODIFYING",
        "UPDATING",
        "DELETED",
        "FAILED"
      ]
    },
    "String":{"type":"string"},
    "TagKey":{
      "type":"string",
      "max":128,
      "min":1
    },
    "TagKeys":{
      "type":"list",
      "member":{"shape":"TagKey"},
      "max":200,
      "min":1
    },
    "TagResourceRequest":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tags"
      ],
      "members":{
        "resourceArn":{
          "shape":"Arn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the tagged resource.</p>"
        },
        "tags":{
          "shape":"RequestTagMap",
          "documentation":"<p>A list of tags used to categorize and track resources.</p>"
        }
      }
    },
    "TagValue":{
      "type":"string",
      "max":256,
      "min":0
    },
    "ThrottlingException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"},
        "retryAfterSeconds":{
          "shape":"Integer",
          "documentation":"<p>The number of seconds the caller should wait before retrying.</p>"
        }
      },
      "documentation":"<p>The request was denied due to request throttling.</p>",
      "exception":true,
      "retryable":{"throttling":false}
    },
    "TracingType":{
      "type":"string",
      "enum":[
        "log",
        "jaeger"
      ]
    },
    "UntagResourceRequest":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tagKeys"
      ],
      "members":{
        "resourceArn":{
          "shape":"Arn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the tagged resource.</p>"
        },
        "tagKeys":{
          "shape":"TagKeys",
          "documentation":"<p>The keys used to identify the tags.</p>"
        }
      }
    },
    "UpdateDbInstanceInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"DbInstanceIdentifier",
          "documentation":"<p>The id of the DB instance.</p>"
        },
        "logDeliveryConfiguration":{
          "shape":"LogDeliveryConfiguration",
          "documentation":"<p>Configuration for sending InfluxDB engine logs to send to specified S3 bucket.</p>"
        },
        "dbParameterGroupIdentifier":{
          "shape":"DbParameterGroupIdentifier",
          "documentation":"<p>The id of the DB parameter group to assign to your DB instance. DB parameter groups specify how the database is configured. For example, DB parameter groups can specify the limit for query concurrency.</p>"
        }
      }
    },
    "UpdateDbInstanceOutput":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "arn",
        "vpcSubnetIds"
      ],
      "members":{
        "id":{
          "shape":"DbInstanceId",
          "documentation":"<p>A service-generated unique identifier.</p>"
        },
        "name":{
          "shape":"DbInstanceName",
          "documentation":"<p>This customer-supplied name uniquely identifies the DB instance when interacting with the Amazon Timestream for InfluxDB API and AWS CLI commands.</p>"
        },
        "arn":{
          "shape":"Arn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the DB instance.</p>"
        },
        "status":{
          "shape":"Status",
          "documentation":"<p>The status of the DB instance.</p>"
        },
        "endpoint":{
          "shape":"String",
          "documentation":"<p>The endpoint used to connect to InfluxDB. The default InfluxDB port is 8086.</p>"
        },
        "dbInstanceType":{
          "shape":"DbInstanceType",
          "documentation":"<p>The Timestream for InfluxDB instance type that InfluxDB runs on.</p>"
        },
        "dbStorageType":{
          "shape":"DbStorageType",
          "documentation":"<p>The Timestream for InfluxDB DB storage type that InfluxDB stores data on.</p>"
        },
        "allocatedStorage":{
          "shape":"AllocatedStorage",
          "documentation":"<p>The amount of storage allocated for your DB storage type (in gibibytes).</p>"
        },
        "deploymentType":{
          "shape":"DeploymentType",
          "documentation":"<p>Specifies whether the Timestream for InfluxDB is deployed as Single-AZ or with a MultiAZ Standby for High availability.</p>"
        },
        "vpcSubnetIds":{
          "shape":"VpcSubnetIdList",
          "documentation":"<p>A list of VPC subnet IDs associated with the DB instance.</p>"
        },
        "publiclyAccessible":{
          "shape":"Boolean",
          "documentation":"<p>Indicates if the DB instance has a public IP to facilitate access.</p>"
        },
        "vpcSecurityGroupIds":{
          "shape":"VpcSecurityGroupIdList",
          "documentation":"<p>A list of VPC security group IDs associated with the DB instance.</p>"
        },
        "dbParameterGroupIdentifier":{
          "shape":"DbParameterGroupIdentifier",
          "documentation":"<p>The id of the DB parameter group assigned to your DB instance.</p>"
        },
        "availabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone in which the DB instance resides.</p>"
        },
        "secondaryAvailabilityZone":{
          "shape":"String",
          "documentation":"<p>The Availability Zone in which the standby instance is located when deploying with a MultiAZ standby instance.</p>"
        },
        "logDeliveryConfiguration":{
          "shape":"LogDeliveryConfiguration",
          "documentation":"<p>Configuration for sending InfluxDB engine logs to send to specified S3 bucket.</p>"
        },
        "influxAuthParametersSecretArn":{
          "shape":"String",
          "documentation":"<p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret containing the initial InfluxDB authorization parameters. The secret value is a JSON formatted key-value pair holding InfluxDB authorization values: organization, bucket, username, and password.</p>"
        }
      }
    },
    "Username":{
      "type":"string",
      "max":64,
      "min":1,
      "sensitive":true
    },
    "ValidationException":{
      "type":"structure",
      "required":[
        "message",
        "reason"
      ],
      "members":{
        "message":{"shape":"String"},
        "reason":{
          "shape":"ValidationExceptionReason",
          "documentation":"<p>The reason that validation failed.</p>"
        }
      },
      "documentation":"<p>The input fails to satisfy the constraints specified by Timestream for InfluxDB.</p>",
      "exception":true
    },
    "ValidationExceptionReason":{
      "type":"string",
      "enum":[
        "FIELD_VALIDATION_FAILED",
        "OTHER"
      ]
    },
    "VpcSecurityGroupId":{
      "type":"string",
      "max":64,
      "min":0,
      "pattern":"sg-[a-z0-9]+"
    },
    "VpcSecurityGroupIdList":{
      "type":"list",
      "member":{"shape":"VpcSecurityGroupId"},
      "max":5,
      "min":1
    },
    "VpcSubnetId":{
      "type":"string",
      "max":64,
      "min":0,
      "pattern":"subnet-[a-z0-9]+"
    },
    "VpcSubnetIdList":{
      "type":"list",
      "member":{"shape":"VpcSubnetId"},
      "max":3,
      "min":1
    }
  },
  "documentation":"<p>Amazon Timestream for InfluxDB is a managed time-series database engine that makes it easy for application developers and DevOps teams to run InfluxDB databases on AWS for near real-time time-series applications using open-source APIs. With Amazon Timestream for InfluxDB, it is easy to set up, operate, and scale time-series workloads that can answer queries with single-digit millisecond query response time.</p>"
}
