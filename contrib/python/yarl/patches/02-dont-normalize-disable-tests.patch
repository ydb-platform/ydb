--- contrib/python/yarl/tests/test_url.py	(index)
+++ contrib/python/yarl/tests/test_url.py	(working tree)
@@ -1439,6 +1439,7 @@ def test_is_default_port_for_absolute_url_without_port():
     assert url.is_default_port()
 
 
+@pytest.mark.skip
 def test_is_default_port_for_absolute_url_with_default_port():
     url = URL("http://example.com:80")
     assert url.is_default_port()
--- contrib/python/yarl/tests/test_url_build.py	(index)
+++ contrib/python/yarl/tests/test_url_build.py	(working tree)
@@ -15,16 +15,19 @@ def test_build_simple():
     assert str(u) == "http://127.0.0.1"
 
 
+@pytest.mark.skip
 def test_url_build_ipv6():
     u = URL.build(scheme="http", host="::1")
     assert str(u) == "http://::1"
 
 
+@pytest.mark.skip
 def test_url_build_ipv6_brackets():
     u = URL.build(scheme="http", host="[::1]")
     assert str(u) == "http://::1"
 
 
+@pytest.mark.skip
 def test_url_ipv4_in_ipv6():
     u = URL.build(scheme="http", host="2001:db8:122:344::192.0.2.33")
     assert str(u) == "http://2001:db8:122:344::c000:221"
--- contrib/python/yarl/tests/test_url_update_netloc.py	(index)
+++ contrib/python/yarl/tests/test_url_update_netloc.py	(working tree)
@@ -196,6 +196,7 @@ def test_with_port():
     assert str(url.with_port(8888)) == "http://example.com:8888"
 
 
+@pytest.mark.skip
 def test_with_default_port_normalization() -> None:
     url = URL("http://example.com")
     assert str(url.with_scheme("https")) == "https://example.com"
@@ -203,6 +204,7 @@ def test_with_default_port_normalization() -> None:
     assert str(url.with_port(443).with_scheme("https")) == "https://example.com"
 
 
+@pytest.mark.skip
 def test_with_custom_port_normalization() -> None:
     url = URL("http://example.com")
     u88 = url.with_port(88)
@@ -211,6 +213,7 @@ def test_with_custom_port_normalization() -> None:
     assert str(u88.with_scheme("https")) == "https://example.com:88"
 
 
+@pytest.mark.skip
 def test_with_explicit_port_normalization() -> None:
     url = URL("http://example.com")
     u80 = url.with_port(80)
