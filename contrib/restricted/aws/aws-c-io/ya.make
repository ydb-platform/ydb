# Generated by devtools/yamaker from nixpkgs 22.11.

LIBRARY()

LICENSE(
    Apache-2.0 AND
    Custom-Oasis-Pkcs11
)

LICENSE_TEXTS(.yandex_meta/licenses.list.txt)

VERSION(0.13.21)

ORIGINAL_SOURCE(https://github.com/awslabs/aws-c-io/archive/v0.13.21.tar.gz)

PEERDIR(
    contrib/restricted/aws/aws-c-cal
    contrib/restricted/aws/aws-c-common
)

ADDINCL(
    GLOBAL contrib/restricted/aws/aws-c-io/include
)

NO_COMPILER_WARNINGS()

NO_RUNTIME()

CFLAGS(
    -DAWS_CAL_USE_IMPORT_EXPORT
    -DAWS_COMMON_USE_IMPORT_EXPORT
    -DAWS_IO_USE_IMPORT_EXPORT
    -DAWS_USE_EPOLL
    -DHAVE_SYSCONF
    -DS2N_CLONE_SUPPORTED
    -DS2N_CPUID_AVAILABLE
    -DS2N_FALL_THROUGH_SUPPORTED
    -DS2N_FEATURES_AVAILABLE
    -DS2N_KYBER512R3_AVX2_BMI2
    -DS2N_LIBCRYPTO_SUPPORTS_EVP_MD5_SHA1_HASH
    -DS2N_LIBCRYPTO_SUPPORTS_EVP_MD_CTX_SET_PKEY_CTX
    -DS2N_LIBCRYPTO_SUPPORTS_EVP_RC4
    -DS2N_MADVISE_SUPPORTED
    -DS2N_STACKTRACE
    -DS2N___RESTRICT__SUPPORTED
)

IF (CLANG_CL)
    CFLAGS(
        -DAWS_IO_EXPORTS
        -DAWS_USE_IO_COMPLETION_PORTS
        -std=c99
    )
ELSEIF (OS_WINDOWS)
    CFLAGS(
        -DAWS_IO_EXPORTS
        -DAWS_USE_IO_COMPLETION_PORTS
    )
ELSE()
    PEERDIR(
        contrib/restricted/aws/s2n
    )
    CFLAGS(
        -DUSE_S2N
    )
ENDIF()

SRCS(
    source/alpn_handler.c
    source/channel.c
    source/channel_bootstrap.c
    source/event_loop.c
    source/exponential_backoff_retry_strategy.c
    source/host_resolver.c
    source/io.c
    source/message_pool.c
    source/pem_utils.c
    source/pkcs11_lib.c
    source/pkcs11_tls_op_handler.c
    source/pki_utils.c
    source/retry_strategy.c
    source/socket_channel_handler.c
    source/standard_retry_strategy.c
    source/statistics.c
    source/stream.c
    source/tls_channel_handler.c
    source/tls_channel_handler_shared.c
)

IF (OS_DARWIN)
    SRCS(
        source/bsd/kqueue_event_loop.c
        source/posix/host_resolver.c
        source/posix/pipe.c
        source/posix/shared_library.c
        source/posix/socket.c
        source/s2n/s2n_tls_channel_handler.c
    )
ELSEIF (OS_LINUX)
    SRCS(
        source/linux/epoll_event_loop.c
        source/posix/host_resolver.c
        source/posix/pipe.c
        source/posix/shared_library.c
        source/posix/socket.c
        source/s2n/s2n_tls_channel_handler.c
    )
ENDIF()

END()
