# File format ($ symbol means the beginning of a line):
#
# $ # this message
# $ # =======================
# $     # comments (all commentaries should starts with some number of spaces and # symbol)
# $ IGNORE_FILES {file1.ext1} {file2.ext2} - (optional) ignore listed files when generating license macro and credits
# $ RENAME {original license id} TO {new license id} # user comments - (optional) use {new license id} instead {original license id} in ya.make files
# $ # user comments
# $
# ${action} {license id} {license text hash}
# $BELONGS ./ya/make/file/relative/path/1/ya.make ./ya/make/2/ya.make
# ${all_file_action} filename
# $ # user commentaries (many lines)
# $ generated description - files with this license, license text... (some number of lines that starts with some number of spaces, do not modify)
# ${action} {license spdx} {license text hash}
# $BELONGS ./ya/make/file/relative/path/3/ya.make
# ${all_file_action} filename
# $    #    user commentaries
# $ generated description
# $ ...
#
# You can modify action, all_file_action and add commentaries
# Available actions:
# keep - keep license in contrib and use in credits
# skip - skip license
# remove - remove all files with this license
# rename - save license text/links into licenses texts file, but not store SPDX into LINCENSE macro. You should store correct license id into devtools.license.spdx.txt file
#
# {all file action} records will be generated when license text contains filename that exists on filesystem (in contrib directory)
# We suppose that that files can contain some license info
# Available all file actions:
# FILE_IGNORE - ignore file (do nothing)
# FILE_INCLUDE - include all file data into licenses text file
# =======================

KEEP     COPYRIGHT_SERVICE_LABEL 1017e4a7fef836fa656381426c398d61
BELONGS ya.make
    License text:
        // Copyright Alexander Nasonov & Paul A. Bristow 2006.
    Scancode info:
        Original SPDX id: COPYRIGHT_SERVICE_LABEL
        Score           : 100.00
        Match type      : COPYRIGHT
    Files with this license:
        include/boost/detail/lcast_precision.hpp [1:1]

KEEP     COPYRIGHT_SERVICE_LABEL 2a09550ee1639dbc41d6a39a2c375d5d
BELONGS ya.make
    License text:
        // Copyright (c) 2013 John Maddock, Antony Polukhin
    Scancode info:
        Original SPDX id: COPYRIGHT_SERVICE_LABEL
        Score           : 100.00
        Match type      : COPYRIGHT
    Files with this license:
        include/boost/detail/basic_pointerbuf.hpp [6:6]

KEEP     COPYRIGHT_SERVICE_LABEL 2a3b1092793f083bc8f7481a948c88cf
BELONGS ya.make
    License text:
        // Copyright Kevlin Henney, 2000-2005.
        // Copyright Alexander Nasonov, 2006-2010.
        // Copyright Antony Polukhin, 2011-2024.
    Scancode info:
        Original SPDX id: COPYRIGHT_SERVICE_LABEL
        Score           : 100.00
        Match type      : COPYRIGHT
    Files with this license:
        include/boost/lexical_cast.hpp [1:3]
        include/boost/lexical_cast/bad_lexical_cast.hpp [1:3]
        include/boost/lexical_cast/detail/converter_lexical.hpp [1:3]
        include/boost/lexical_cast/detail/converter_lexical_streams.hpp [1:3]
        include/boost/lexical_cast/detail/converter_numeric.hpp [1:3]
        include/boost/lexical_cast/detail/inf_nan.hpp [1:3]
        include/boost/lexical_cast/detail/is_character.hpp [1:3]
        include/boost/lexical_cast/detail/lcast_basic_unlockedbuf.hpp [1:3]
        include/boost/lexical_cast/detail/lcast_char_constants.hpp [1:3]
        include/boost/lexical_cast/detail/lcast_unsigned_converters.hpp [1:3]
        include/boost/lexical_cast/detail/widest_char.hpp [1:3]
        include/boost/lexical_cast/try_lexical_convert.hpp [1:3]

KEEP     COPYRIGHT_SERVICE_LABEL 8974b0c1dff112772f6f0fcdf1ac331a
BELONGS ya.make
    License text:
        // Copyright Kevlin Henney, 2000-2005.
        // Copyright Alexander Nasonov, 2006-2010.
        // Copyright Antony Polukhin, 2011-2024.
    Scancode info:
        Original SPDX id: COPYRIGHT_SERVICE_LABEL
        Score           : 100.00
        Match type      : COPYRIGHT
    Files with this license:
        include/boost/lexical_cast.hpp [1:3]
        include/boost/lexical_cast/bad_lexical_cast.hpp [1:3]
        include/boost/lexical_cast/detail/converter_lexical.hpp [1:3]
        include/boost/lexical_cast/detail/converter_lexical_streams.hpp [1:3]
        include/boost/lexical_cast/detail/converter_numeric.hpp [1:3]
        include/boost/lexical_cast/detail/inf_nan.hpp [1:3]
        include/boost/lexical_cast/detail/is_character.hpp [1:3]
        include/boost/lexical_cast/detail/lcast_basic_unlockedbuf.hpp [1:3]
        include/boost/lexical_cast/detail/lcast_char_constants.hpp [1:3]
        include/boost/lexical_cast/detail/lcast_unsigned_converters.hpp [1:3]
        include/boost/lexical_cast/detail/widest_char.hpp [1:3]
        include/boost/lexical_cast/try_lexical_convert.hpp [1:3]

KEEP     COPYRIGHT_SERVICE_LABEL 9f8ddedc31fda0856ae4d05bb2d4001b
BELONGS ya.make
    License text:
        // Copyright Kevlin Henney, 2000-2005.
        // Copyright Alexander Nasonov, 2006-2010.
        // Copyright Antony Polukhin, 2011-2024.
    Scancode info:
        Original SPDX id: COPYRIGHT_SERVICE_LABEL
        Score           : 100.00
        Match type      : COPYRIGHT
    Files with this license:
        include/boost/lexical_cast.hpp [1:3]
        include/boost/lexical_cast/bad_lexical_cast.hpp [1:3]
        include/boost/lexical_cast/detail/buffer_view.hpp [1:1]
        include/boost/lexical_cast/detail/converter_lexical.hpp [1:3]
        include/boost/lexical_cast/detail/converter_lexical_streams.hpp [1:3]
        include/boost/lexical_cast/detail/converter_numeric.hpp [1:3]
        include/boost/lexical_cast/detail/inf_nan.hpp [1:3]
        include/boost/lexical_cast/detail/is_character.hpp [1:3]
        include/boost/lexical_cast/detail/lcast_basic_unlockedbuf.hpp [1:3]
        include/boost/lexical_cast/detail/lcast_char_constants.hpp [1:3]
        include/boost/lexical_cast/detail/lcast_unsigned_converters.hpp [1:3]
        include/boost/lexical_cast/detail/widest_char.hpp [1:3]
        include/boost/lexical_cast/try_lexical_convert.hpp [1:3]
