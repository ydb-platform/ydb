# File format ($ symbol means the beginning of a line):
#
# $ # this message
# $ # =======================
# $     # comments (all commentaries should starts with some number of spaces and # symbol)
# $ IGNORE_FILES {file1.ext1} {file2.ext2} - (optional) ignore listed files when generating license macro and credits
# $ RENAME {original license id} TO {new license id} # user comments - (optional) use {new license id} instead {original license id} in ya.make files
# $ # user comments
# $
# ${action} {license id} {license text hash}
# $BELONGS ./ya/make/file/relative/path/1/ya.make ./ya/make/2/ya.make
# ${all_file_action} filename
# $ # user commentaries (many lines)
# $ generated description - files with this license, license text... (some number of lines that starts with some number of spaces, do not modify)
# ${action} {license spdx} {license text hash}
# $BELONGS ./ya/make/file/relative/path/3/ya.make
# ${all_file_action} filename
# $    #    user commentaries
# $ generated description
# $ ...
#
# You can modify action, all_file_action and add commentaries
# Available actions:
# keep - keep license in contrib and use in credits
# skip - skip license
# remove - remove all files with this license
# rename - save license text/links into licenses texts file, but not store SPDX into LINCENSE macro. You should store correct license id into devtools.license.spdx.txt file
#
# {all file action} records will be generated when license text contains filename that exists on filesystem (in contrib directory)
# We suppose that that files can contain some license info
# Available all file actions:
# FILE_IGNORE - ignore file (do nothing)
# FILE_INCLUDE - include all file data into licenses text file
# =======================

KEEP     BSL-1.0              47a0454637d4fa45d78eb2557ccd70c4
BELONGS ya.make
    License text:
        // Distributed under the Boost Software License, Version 1.0. (See
        // accompanying file LICENSE_1_0.txt or copy at
        // http://www.boost.org/LICENSE_1_0.txt)
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 100.00
        Match type      : NOTICE
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        include/boost/aligned_storage.hpp [9:11]
        include/boost/type_traits/aligned_storage.hpp [9:11]
        include/boost/type_traits/floating_point_promotion.hpp [2:4]
        include/boost/type_traits/integral_promotion.hpp [2:4]
        include/boost/type_traits/promote.hpp [2:4]

KEEP     BSL-1.0              559be58c893ad9d438fca25af1254413
BELONGS ya.make
    Note: matched license text is too long. Read it in the source files.
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 94.74
        Match type      : NOTICE
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        include/boost/type_traits/is_abstract.hpp [12:16]

KEEP     BSL-1.0              745252704aa72167f50d9aad40337785
BELONGS ya.make
    License text:
        //  Distributed under the Boost Software License, Version 1.0.
        //  See accompanying file LICENSE_1_0.txt or copy at
        //  http://www.boost.org/LICENSE_1_0.txt
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 100.00
        Match type      : NOTICE
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        include/boost/type_traits/common_type.hpp [7:9]
        include/boost/type_traits/copy_cv.hpp [7:9]
        include/boost/type_traits/detail/common_arithmetic_type.hpp [7:9]
        include/boost/type_traits/detail/common_type_impl.hpp [7:9]
        include/boost/type_traits/detail/composite_member_pointer_type.hpp [7:9]
        include/boost/type_traits/detail/composite_pointer_type.hpp [7:9]
        include/boost/type_traits/detail/is_swappable_cxx_11.hpp [7:9]
        include/boost/type_traits/detail/mp_defer.hpp [7:9]
        include/boost/type_traits/is_list_constructible.hpp [6:8]
        include/boost/type_traits/is_noncopyable.hpp [7:9]
        include/boost/type_traits/is_nothrow_swappable.hpp [6:8]
        include/boost/type_traits/is_swappable.hpp [6:8]
        include/boost/type_traits/type_identity.hpp [7:9]

KEEP     BSL-1.0              7526d5c5fd651b8d0d6103857fbf3a46
BELONGS ya.make
    License text:
        //  Use, modification and distribution are subject to the Boost Software License,
        //  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
        //  http://www.boost.org/LICENSE_1_0.txt).
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 100.00
        Match type      : NOTICE
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        include/boost/type_traits.hpp [2:4]
        include/boost/type_traits/add_const.hpp [4:6]
        include/boost/type_traits/add_cv.hpp [4:6]
        include/boost/type_traits/add_pointer.hpp [3:5]
        include/boost/type_traits/add_reference.hpp [3:5]
        include/boost/type_traits/add_volatile.hpp [4:6]
        include/boost/type_traits/alignment_of.hpp [3:5]
        include/boost/type_traits/alignment_traits.hpp [3:5]
        include/boost/type_traits/arithmetic_traits.hpp [2:4]
        include/boost/type_traits/array_traits.hpp [3:5]
        include/boost/type_traits/broken_compiler_spec.hpp [3:5]
        include/boost/type_traits/composite_traits.hpp [3:5]
        include/boost/type_traits/conditional.hpp [2:4]
        include/boost/type_traits/config.hpp [3:5]
        include/boost/type_traits/conversion_traits.hpp [6:8]
        include/boost/type_traits/cv_traits.hpp [3:5]
        include/boost/type_traits/decay.hpp [2:4]
        include/boost/type_traits/detail/config.hpp [3:5]
        include/boost/type_traits/detail/has_binary_operator.hpp [3:5]
        include/boost/type_traits/detail/has_postfix_operator.hpp [3:5]
        include/boost/type_traits/detail/has_prefix_operator.hpp [3:5]
        include/boost/type_traits/detail/ice_and.hpp [3:5]
        include/boost/type_traits/detail/ice_eq.hpp [2:4]
        include/boost/type_traits/detail/ice_not.hpp [2:4]
        include/boost/type_traits/detail/ice_or.hpp [2:4]
        include/boost/type_traits/detail/is_function_cxx_03.hpp [5:7]
        include/boost/type_traits/detail/is_function_cxx_11.hpp [5:7]
        include/boost/type_traits/detail/is_function_msvc10_fix.hpp [3:5]
        include/boost/type_traits/detail/is_function_ptr_helper.hpp [5:7]
        include/boost/type_traits/detail/is_function_ptr_tester.hpp [4:6]
        include/boost/type_traits/detail/is_mem_fun_pointer_impl.hpp [4:6]
        include/boost/type_traits/detail/is_mem_fun_pointer_tester.hpp [4:6]
        include/boost/type_traits/detail/is_member_function_pointer_cxx_03.hpp [4:6]
        include/boost/type_traits/detail/is_member_function_pointer_cxx_11.hpp [4:6]
        include/boost/type_traits/detail/is_rvalue_reference_msvc10_fix.hpp [3:5]
        include/boost/type_traits/detail/yes_no_type.hpp [3:5]
        include/boost/type_traits/extent.hpp [3:5]
        include/boost/type_traits/function_traits.hpp [3:5]
        include/boost/type_traits/has_bit_and.hpp [3:5]
        include/boost/type_traits/has_bit_and_assign.hpp [3:5]
        include/boost/type_traits/has_bit_or.hpp [3:5]
        include/boost/type_traits/has_bit_or_assign.hpp [3:5]
        include/boost/type_traits/has_bit_xor.hpp [3:5]
        include/boost/type_traits/has_bit_xor_assign.hpp [3:5]
        include/boost/type_traits/has_complement.hpp [3:5]
        include/boost/type_traits/has_dereference.hpp [3:5]
        include/boost/type_traits/has_divides.hpp [3:5]
        include/boost/type_traits/has_divides_assign.hpp [3:5]
        include/boost/type_traits/has_equal_to.hpp [3:5]
        include/boost/type_traits/has_greater.hpp [3:5]
        include/boost/type_traits/has_greater_equal.hpp [3:5]
        include/boost/type_traits/has_left_shift.hpp [3:5]
        include/boost/type_traits/has_left_shift_assign.hpp [3:5]
        include/boost/type_traits/has_less.hpp [3:5]
        include/boost/type_traits/has_less_equal.hpp [3:5]
        include/boost/type_traits/has_logical_and.hpp [3:5]
        include/boost/type_traits/has_logical_not.hpp [3:5]
        include/boost/type_traits/has_logical_or.hpp [3:5]
        include/boost/type_traits/has_minus.hpp [3:5]
        include/boost/type_traits/has_minus_assign.hpp [3:5]
        include/boost/type_traits/has_modulus.hpp [3:5]
        include/boost/type_traits/has_modulus_assign.hpp [3:5]
        include/boost/type_traits/has_multiplies.hpp [3:5]
        include/boost/type_traits/has_multiplies_assign.hpp [3:5]
        include/boost/type_traits/has_negate.hpp [3:5]
        include/boost/type_traits/has_new_operator.hpp [3:5]
        include/boost/type_traits/has_not_equal_to.hpp [3:5]
        include/boost/type_traits/has_nothrow_assign.hpp [3:5]
        include/boost/type_traits/has_nothrow_constructor.hpp [3:5]
        include/boost/type_traits/has_nothrow_copy.hpp [3:5]
        include/boost/type_traits/has_nothrow_destructor.hpp [3:5]
        include/boost/type_traits/has_operator.hpp [3:5]
        include/boost/type_traits/has_plus.hpp [3:5]
        include/boost/type_traits/has_post_decrement.hpp [3:5]
        include/boost/type_traits/has_post_increment.hpp [3:5]
        include/boost/type_traits/has_pre_decrement.hpp [3:5]
        include/boost/type_traits/has_pre_increment.hpp [3:5]
        include/boost/type_traits/has_right_shift.hpp [3:5]
        include/boost/type_traits/has_right_shift_assign.hpp [3:5]
        include/boost/type_traits/has_trivial_assign.hpp [3:5]
        include/boost/type_traits/has_trivial_constructor.hpp [3:5]
        include/boost/type_traits/has_trivial_copy.hpp [3:5]
        include/boost/type_traits/has_trivial_destructor.hpp [3:5]
        include/boost/type_traits/has_trivial_move_assign.hpp [5:7]
        include/boost/type_traits/has_trivial_move_constructor.hpp [5:7]
        include/boost/type_traits/has_unary_minus.hpp [3:5]
        include/boost/type_traits/has_unary_plus.hpp [3:5]
        include/boost/type_traits/has_virtual_destructor.hpp [3:5]
        include/boost/type_traits/ice.hpp [3:5]
        include/boost/type_traits/intrinsics.hpp [2:4]
        include/boost/type_traits/is_arithmetic.hpp [3:5]
        include/boost/type_traits/is_array.hpp [4:6]
        include/boost/type_traits/is_assignable.hpp [3:5]
        include/boost/type_traits/is_base_and_derived.hpp [3:5]
        include/boost/type_traits/is_base_of.hpp [3:5]
        include/boost/type_traits/is_base_of_tr1.hpp [3:5]
        include/boost/type_traits/is_class.hpp [3:5]
        include/boost/type_traits/is_complete.hpp [3:5]
        include/boost/type_traits/is_complex.hpp [2:4]
        include/boost/type_traits/is_compound.hpp [3:5]
        include/boost/type_traits/is_const.hpp [6:8]
        include/boost/type_traits/is_constructible.hpp [3:5]
        include/boost/type_traits/is_convertible.hpp [6:8]
        include/boost/type_traits/is_copy_assignable.hpp [3:5]
        include/boost/type_traits/is_copy_constructible.hpp [3:5]
        include/boost/type_traits/is_default_constructible.hpp [3:5]
        include/boost/type_traits/is_destructible.hpp [3:5]
        include/boost/type_traits/is_empty.hpp [3:5]
        include/boost/type_traits/is_enum.hpp [4:6]
        include/boost/type_traits/is_final.hpp [4:6]
        include/boost/type_traits/is_float.hpp [2:4]
        include/boost/type_traits/is_floating_point.hpp [2:4]
        include/boost/type_traits/is_function.hpp [5:7]
        include/boost/type_traits/is_fundamental.hpp [3:5]
        include/boost/type_traits/is_integral.hpp [3:5]
        include/boost/type_traits/is_lvalue_reference.hpp [6:8]
        include/boost/type_traits/is_member_function_pointer.hpp [4:6]
        include/boost/type_traits/is_member_object_pointer.hpp [3:5]
        include/boost/type_traits/is_member_pointer.hpp [6:8]
        include/boost/type_traits/is_nothrow_move_assignable.hpp [5:7]
        include/boost/type_traits/is_nothrow_move_constructible.hpp [5:7]
        include/boost/type_traits/is_object.hpp [3:5]
        include/boost/type_traits/is_pod.hpp [3:5]
        include/boost/type_traits/is_pointer.hpp [6:8]
        include/boost/type_traits/is_polymorphic.hpp [2:4]
        include/boost/type_traits/is_reference.hpp [6:8]
        include/boost/type_traits/is_rvalue_reference.hpp [3:5]
        include/boost/type_traits/is_same.hpp [6:8]
        include/boost/type_traits/is_scalar.hpp [3:5]
        include/boost/type_traits/is_signed.hpp [3:5]
        include/boost/type_traits/is_stateless.hpp [3:5]
        include/boost/type_traits/is_union.hpp [4:6]
        include/boost/type_traits/is_unsigned.hpp [3:5]
        include/boost/type_traits/is_virtual_base_of.hpp [3:5]
        include/boost/type_traits/is_void.hpp [3:5]
        include/boost/type_traits/is_volatile.hpp [6:8]
        include/boost/type_traits/make_signed.hpp [3:5]
        include/boost/type_traits/make_unsigned.hpp [3:5]
        include/boost/type_traits/object_traits.hpp [2:4]
        include/boost/type_traits/rank.hpp [3:5]
        include/boost/type_traits/reference_traits.hpp [3:5]
        include/boost/type_traits/remove_all_extents.hpp [3:5]
        include/boost/type_traits/remove_bounds.hpp [3:5]
        include/boost/type_traits/remove_const.hpp [4:6]
        include/boost/type_traits/remove_cv.hpp [4:6]
        include/boost/type_traits/remove_cv_ref.hpp [3:5]
        include/boost/type_traits/remove_extent.hpp [3:5]
        include/boost/type_traits/remove_pointer.hpp [3:5]
        include/boost/type_traits/remove_reference.hpp [3:5]
        include/boost/type_traits/remove_volatile.hpp [4:6]
        include/boost/type_traits/same_traits.hpp [2:4]
        include/boost/type_traits/transform_traits.hpp [2:4]
        include/boost/type_traits/type_with_alignment.hpp [2:4]

KEEP     BSL-1.0              aa58ff9cdc0b0b6a3fedf7f97fd19c54
BELONGS ya.make
    License text:
        //  Use, modification and distribution are subject to the Boost Software License,
        //  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
        //  http://www.boost.org/LICENSE_1_0.txt).
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 100.00
        Match type      : NOTICE
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        include/boost/type_traits/has_plus_assign.hpp [3:5]

KEEP     BSL-1.0              bd5d1d3e2ab4557acb808f71d4a03783
BELONGS ya.make
    License text:
        // Distributed under the Boost Software License, Version 1.0. 
        // (See accompanying file LICENSE_1_0.txt or copy at 
        // http://www.boost.org/LICENSE_1_0.txt)
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 100.00
        Match type      : NOTICE
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        include/boost/type_traits/detail/bool_trait_def.hpp [6:8]
        include/boost/type_traits/detail/bool_trait_undef.hpp [6:8]
        include/boost/type_traits/detail/template_arity_spec.hpp [5:7]

KEEP     BSL-1.0              c01de0902348b7c9494d50eaacc721eb
BELONGS ya.make
    License text:
         * Distributed under the Boost Software License, Version 1.0.
         * (See accompanying file LICENSE_1_0.txt or copy at
         * http://www.boost.org/LICENSE_1_0.txt)
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 100.00
        Match type      : NOTICE
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        include/boost/type_traits/detail/is_likely_lambda.hpp [2:4]

KEEP     BSL-1.0              c46f3c60dd92897a012b3be18f48ec4c
BELONGS ya.make
    License text:
        //  Use, modification and distribution are subject to the 
        //  Boost Software License, Version 1.0. (See accompanying file 
        //  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 100.00
        Match type      : NOTICE
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        include/boost/type_traits/integral_constant.hpp [2:4]

KEEP     BSL-1.0              da2a87ccf5ae416e33c8d6bfe78baa14
BELONGS ya.make
    License text:
        //  Distributed under the Boost Software License, Version 1.0.
        //  See http://www.boost.org/LICENSE_1_0.txt
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 100.00
        Match type      : NOTICE
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        include/boost/type_traits/add_lvalue_reference.hpp [3:4]
        include/boost/type_traits/add_rvalue_reference.hpp [5:6]
        include/boost/type_traits/declval.hpp [5:6]
        include/boost/utility/declval.hpp [5:6]

KEEP     BSL-1.0              e36b3a71b94a65181100fbb5aeb04562
BELONGS ya.make
    License text:
        Distributed under the Boost Software License,
        Version 1.0. (See accompanying file LICENSE_1_0.txt
        or copy at http://www.boost.org/LICENSE_1_0.txt)
    Scancode info:
        Original SPDX id: BSL-1.0
        Score           : 100.00
        Match type      : NOTICE
        Links           : http://www.boost.org/LICENSE_1_0.txt, http://www.boost.org/users/license.html, https://spdx.org/licenses/BSL-1.0
    Files with this license:
        include/boost/type_traits/conjunction.hpp [5:7]
        include/boost/type_traits/copy_cv_ref.hpp [5:7]
        include/boost/type_traits/copy_reference.hpp [5:7]
        include/boost/type_traits/detail/detector.hpp [5:7]
        include/boost/type_traits/detected.hpp [5:7]
        include/boost/type_traits/detected_or.hpp [5:7]
        include/boost/type_traits/disjunction.hpp [5:7]
        include/boost/type_traits/enable_if.hpp [11:13]
        include/boost/type_traits/is_bounded_array.hpp [5:7]
        include/boost/type_traits/is_detected.hpp [5:7]
        include/boost/type_traits/is_detected_convertible.hpp [5:7]
        include/boost/type_traits/is_detected_exact.hpp [5:7]
        include/boost/type_traits/is_scoped_enum.hpp [5:7]
        include/boost/type_traits/is_trivially_copyable.hpp [5:7]
        include/boost/type_traits/is_unbounded_array.hpp [5:7]
        include/boost/type_traits/is_unscoped_enum.hpp [5:7]
        include/boost/type_traits/make_void.hpp [5:7]
        include/boost/type_traits/negation.hpp [5:7]
        include/boost/type_traits/nonesuch.hpp [5:7]
