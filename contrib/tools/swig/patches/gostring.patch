Fix go vet warning "possible misuse of unsafe.Pointer".
--- a/Lib/go/gostring.swg
+++ b/Lib/go/gostring.swg
@@ -19,11 +19,11 @@
 // Go code to convert a string allocated in C++ memory to one
 // allocated in Go memory.
 %fragment("CopyString", "go_runtime") %{
-type swig_gostring struct { p uintptr; n int }
+type swig_gostring struct { p unsafe.Pointer; n int }
 func swigCopyString(s string) string {
   p := *(*swig_gostring)(unsafe.Pointer(&s))
-  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
-  Swig_free(p.p)
+  r := string((*[0x7fffffff]byte)(p.p)[:p.n])
+  Swig_free(uintptr(p.p))
   return r
 }
 %}
