// Code generated by ./cmd/ch-gen-col, DO NOT EDIT.

package proto

// ColFixedStr32 represents FixedStr32 column.
type ColFixedStr32 [][32]byte

// Compile-time assertions for ColFixedStr32.
var (
	_ ColInput  = ColFixedStr32{}
	_ ColResult = (*ColFixedStr32)(nil)
	_ Column    = (*ColFixedStr32)(nil)
)

// Rows returns count of rows in column.
func (c ColFixedStr32) Rows() int {
	return len(c)
}

// Reset resets data in row, preserving capacity for efficiency.
func (c *ColFixedStr32) Reset() {
	*c = (*c)[:0]
}

// Type returns ColumnType of FixedStr32.
func (ColFixedStr32) Type() ColumnType {
	return ColumnTypeFixedString.With("32")
}

// Row returns i-th row of column.
func (c ColFixedStr32) Row(i int) [32]byte {
	return c[i]
}

// Append [32]byte to column.
func (c *ColFixedStr32) Append(v [32]byte) {
	*c = append(*c, v)
}

// Append [32]byte slice to column.
func (c *ColFixedStr32) AppendArr(vs [][32]byte) {
	*c = append(*c, vs...)
}

// LowCardinality returns LowCardinality for FixedStr32 .
func (c *ColFixedStr32) LowCardinality() *ColLowCardinality[[32]byte] {
	return &ColLowCardinality[[32]byte]{
		index: c,
	}
}

// Array is helper that creates Array of [32]byte.
func (c *ColFixedStr32) Array() *ColArr[[32]byte] {
	return &ColArr[[32]byte]{
		Data: c,
	}
}

// Nullable is helper that creates Nullable([32]byte).
func (c *ColFixedStr32) Nullable() *ColNullable[[32]byte] {
	return &ColNullable[[32]byte]{
		Values: c,
	}
}

// NewArrFixedStr32 returns new Array(FixedStr32).
func NewArrFixedStr32() *ColArr[[32]byte] {
	return &ColArr[[32]byte]{
		Data: new(ColFixedStr32),
	}
}
