// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: protos/ydb_value.proto

package Ydb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type_PrimitiveTypeId int32

const (
	Type_PRIMITIVE_TYPE_ID_UNSPECIFIED Type_PrimitiveTypeId = 0
	Type_BOOL                          Type_PrimitiveTypeId = 6
	Type_INT8                          Type_PrimitiveTypeId = 7
	Type_UINT8                         Type_PrimitiveTypeId = 5
	Type_INT16                         Type_PrimitiveTypeId = 8
	Type_UINT16                        Type_PrimitiveTypeId = 9
	Type_INT32                         Type_PrimitiveTypeId = 1
	Type_UINT32                        Type_PrimitiveTypeId = 2
	Type_INT64                         Type_PrimitiveTypeId = 3
	Type_UINT64                        Type_PrimitiveTypeId = 4
	Type_FLOAT                         Type_PrimitiveTypeId = 33
	Type_DOUBLE                        Type_PrimitiveTypeId = 32
	Type_DATE                          Type_PrimitiveTypeId = 48
	Type_DATETIME                      Type_PrimitiveTypeId = 49
	Type_TIMESTAMP                     Type_PrimitiveTypeId = 50
	Type_INTERVAL                      Type_PrimitiveTypeId = 51
	Type_TZ_DATE                       Type_PrimitiveTypeId = 52
	Type_TZ_DATETIME                   Type_PrimitiveTypeId = 53
	Type_TZ_TIMESTAMP                  Type_PrimitiveTypeId = 54
	Type_STRING                        Type_PrimitiveTypeId = 4097
	Type_UTF8                          Type_PrimitiveTypeId = 4608
	Type_YSON                          Type_PrimitiveTypeId = 4609
	Type_JSON                          Type_PrimitiveTypeId = 4610
	Type_UUID                          Type_PrimitiveTypeId = 4611
	Type_JSON_DOCUMENT                 Type_PrimitiveTypeId = 4612
	Type_DYNUMBER                      Type_PrimitiveTypeId = 4866
)

// Enum value maps for Type_PrimitiveTypeId.
var (
	Type_PrimitiveTypeId_name = map[int32]string{
		0:    "PRIMITIVE_TYPE_ID_UNSPECIFIED",
		6:    "BOOL",
		7:    "INT8",
		5:    "UINT8",
		8:    "INT16",
		9:    "UINT16",
		1:    "INT32",
		2:    "UINT32",
		3:    "INT64",
		4:    "UINT64",
		33:   "FLOAT",
		32:   "DOUBLE",
		48:   "DATE",
		49:   "DATETIME",
		50:   "TIMESTAMP",
		51:   "INTERVAL",
		52:   "TZ_DATE",
		53:   "TZ_DATETIME",
		54:   "TZ_TIMESTAMP",
		4097: "STRING",
		4608: "UTF8",
		4609: "YSON",
		4610: "JSON",
		4611: "UUID",
		4612: "JSON_DOCUMENT",
		4866: "DYNUMBER",
	}
	Type_PrimitiveTypeId_value = map[string]int32{
		"PRIMITIVE_TYPE_ID_UNSPECIFIED": 0,
		"BOOL":                          6,
		"INT8":                          7,
		"UINT8":                         5,
		"INT16":                         8,
		"UINT16":                        9,
		"INT32":                         1,
		"UINT32":                        2,
		"INT64":                         3,
		"UINT64":                        4,
		"FLOAT":                         33,
		"DOUBLE":                        32,
		"DATE":                          48,
		"DATETIME":                      49,
		"TIMESTAMP":                     50,
		"INTERVAL":                      51,
		"TZ_DATE":                       52,
		"TZ_DATETIME":                   53,
		"TZ_TIMESTAMP":                  54,
		"STRING":                        4097,
		"UTF8":                          4608,
		"YSON":                          4609,
		"JSON":                          4610,
		"UUID":                          4611,
		"JSON_DOCUMENT":                 4612,
		"DYNUMBER":                      4866,
	}
)

func (x Type_PrimitiveTypeId) Enum() *Type_PrimitiveTypeId {
	p := new(Type_PrimitiveTypeId)
	*p = x
	return p
}

func (x Type_PrimitiveTypeId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type_PrimitiveTypeId) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_value_proto_enumTypes[0].Descriptor()
}

func (Type_PrimitiveTypeId) Type() protoreflect.EnumType {
	return &file_protos_ydb_value_proto_enumTypes[0]
}

func (x Type_PrimitiveTypeId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type_PrimitiveTypeId.Descriptor instead.
func (Type_PrimitiveTypeId) EnumDescriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{10, 0}
}

type DecimalType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Precision uint32 `protobuf:"varint,1,opt,name=precision,proto3" json:"precision,omitempty"`
	Scale     uint32 `protobuf:"varint,2,opt,name=scale,proto3" json:"scale,omitempty"`
}

func (x *DecimalType) Reset() {
	*x = DecimalType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecimalType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecimalType) ProtoMessage() {}

func (x *DecimalType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecimalType.ProtoReflect.Descriptor instead.
func (*DecimalType) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{0}
}

func (x *DecimalType) GetPrecision() uint32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *DecimalType) GetScale() uint32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

type OptionalType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *Type `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *OptionalType) Reset() {
	*x = OptionalType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalType) ProtoMessage() {}

func (x *OptionalType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalType.ProtoReflect.Descriptor instead.
func (*OptionalType) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{1}
}

func (x *OptionalType) GetItem() *Type {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *Type `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ListType) Reset() {
	*x = ListType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListType) ProtoMessage() {}

func (x *ListType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListType.ProtoReflect.Descriptor instead.
func (*ListType) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{2}
}

func (x *ListType) GetItem() *Type {
	if x != nil {
		return x.Item
	}
	return nil
}

type VariantType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*VariantType_TupleItems
	//	*VariantType_StructItems
	Type isVariantType_Type `protobuf_oneof:"type"`
}

func (x *VariantType) Reset() {
	*x = VariantType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariantType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariantType) ProtoMessage() {}

func (x *VariantType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariantType.ProtoReflect.Descriptor instead.
func (*VariantType) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{3}
}

func (m *VariantType) GetType() isVariantType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *VariantType) GetTupleItems() *TupleType {
	if x, ok := x.GetType().(*VariantType_TupleItems); ok {
		return x.TupleItems
	}
	return nil
}

func (x *VariantType) GetStructItems() *StructType {
	if x, ok := x.GetType().(*VariantType_StructItems); ok {
		return x.StructItems
	}
	return nil
}

type isVariantType_Type interface {
	isVariantType_Type()
}

type VariantType_TupleItems struct {
	TupleItems *TupleType `protobuf:"bytes,1,opt,name=tuple_items,json=tupleItems,proto3,oneof"`
}

type VariantType_StructItems struct {
	StructItems *StructType `protobuf:"bytes,2,opt,name=struct_items,json=structItems,proto3,oneof"`
}

func (*VariantType_TupleItems) isVariantType_Type() {}

func (*VariantType_StructItems) isVariantType_Type() {}

type TupleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*Type `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *TupleType) Reset() {
	*x = TupleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TupleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TupleType) ProtoMessage() {}

func (x *TupleType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TupleType.ProtoReflect.Descriptor instead.
func (*TupleType) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{4}
}

func (x *TupleType) GetElements() []*Type {
	if x != nil {
		return x.Elements
	}
	return nil
}

type StructMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type *Type  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *StructMember) Reset() {
	*x = StructMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructMember) ProtoMessage() {}

func (x *StructMember) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructMember.ProtoReflect.Descriptor instead.
func (*StructMember) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{5}
}

func (x *StructMember) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StructMember) GetType() *Type {
	if x != nil {
		return x.Type
	}
	return nil
}

type StructType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*StructMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *StructType) Reset() {
	*x = StructType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructType) ProtoMessage() {}

func (x *StructType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructType.ProtoReflect.Descriptor instead.
func (*StructType) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{6}
}

func (x *StructType) GetMembers() []*StructMember {
	if x != nil {
		return x.Members
	}
	return nil
}

type DictType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     *Type `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Payload *Type `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DictType) Reset() {
	*x = DictType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictType) ProtoMessage() {}

func (x *DictType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictType.ProtoReflect.Descriptor instead.
func (*DictType) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{7}
}

func (x *DictType) GetKey() *Type {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DictType) GetPayload() *Type {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaggedType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag  string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Type *Type  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *TaggedType) Reset() {
	*x = TaggedType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaggedType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaggedType) ProtoMessage() {}

func (x *TaggedType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaggedType.ProtoReflect.Descriptor instead.
func (*TaggedType) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{8}
}

func (x *TaggedType) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *TaggedType) GetType() *Type {
	if x != nil {
		return x.Type
	}
	return nil
}

type PgType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pg object id of the type
	// full registry could be found here: https://github.com/postgres/postgres/blob/master/src/include/catalog/pg_type.dat
	Oid uint32 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"` // required
	// advanced type details useful for pg wire format proxying
	Typlen int32 `protobuf:"varint,2,opt,name=typlen,proto3" json:"typlen,omitempty"` // optional, set to 0 by default
	Typmod int32 `protobuf:"varint,3,opt,name=typmod,proto3" json:"typmod,omitempty"` // optional, set to 0 by default
}

func (x *PgType) Reset() {
	*x = PgType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PgType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PgType) ProtoMessage() {}

func (x *PgType) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PgType.ProtoReflect.Descriptor instead.
func (*PgType) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{9}
}

func (x *PgType) GetOid() uint32 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *PgType) GetTyplen() int32 {
	if x != nil {
		return x.Typlen
	}
	return 0
}

func (x *PgType) GetTypmod() int32 {
	if x != nil {
		return x.Typmod
	}
	return 0
}

type Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*Type_TypeId
	//	*Type_DecimalType
	//	*Type_OptionalType
	//	*Type_ListType
	//	*Type_TupleType
	//	*Type_StructType
	//	*Type_DictType
	//	*Type_VariantType
	//	*Type_TaggedType
	//	*Type_VoidType
	//	*Type_NullType
	//	*Type_EmptyListType
	//	*Type_EmptyDictType
	//	*Type_PgType
	Type isType_Type `protobuf_oneof:"type"`
}

func (x *Type) Reset() {
	*x = Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type) ProtoMessage() {}

func (x *Type) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type.ProtoReflect.Descriptor instead.
func (*Type) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{10}
}

func (m *Type) GetType() isType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Type) GetTypeId() Type_PrimitiveTypeId {
	if x, ok := x.GetType().(*Type_TypeId); ok {
		return x.TypeId
	}
	return Type_PRIMITIVE_TYPE_ID_UNSPECIFIED
}

func (x *Type) GetDecimalType() *DecimalType {
	if x, ok := x.GetType().(*Type_DecimalType); ok {
		return x.DecimalType
	}
	return nil
}

func (x *Type) GetOptionalType() *OptionalType {
	if x, ok := x.GetType().(*Type_OptionalType); ok {
		return x.OptionalType
	}
	return nil
}

func (x *Type) GetListType() *ListType {
	if x, ok := x.GetType().(*Type_ListType); ok {
		return x.ListType
	}
	return nil
}

func (x *Type) GetTupleType() *TupleType {
	if x, ok := x.GetType().(*Type_TupleType); ok {
		return x.TupleType
	}
	return nil
}

func (x *Type) GetStructType() *StructType {
	if x, ok := x.GetType().(*Type_StructType); ok {
		return x.StructType
	}
	return nil
}

func (x *Type) GetDictType() *DictType {
	if x, ok := x.GetType().(*Type_DictType); ok {
		return x.DictType
	}
	return nil
}

func (x *Type) GetVariantType() *VariantType {
	if x, ok := x.GetType().(*Type_VariantType); ok {
		return x.VariantType
	}
	return nil
}

func (x *Type) GetTaggedType() *TaggedType {
	if x, ok := x.GetType().(*Type_TaggedType); ok {
		return x.TaggedType
	}
	return nil
}

func (x *Type) GetVoidType() structpb.NullValue {
	if x, ok := x.GetType().(*Type_VoidType); ok {
		return x.VoidType
	}
	return structpb.NullValue(0)
}

func (x *Type) GetNullType() structpb.NullValue {
	if x, ok := x.GetType().(*Type_NullType); ok {
		return x.NullType
	}
	return structpb.NullValue(0)
}

func (x *Type) GetEmptyListType() structpb.NullValue {
	if x, ok := x.GetType().(*Type_EmptyListType); ok {
		return x.EmptyListType
	}
	return structpb.NullValue(0)
}

func (x *Type) GetEmptyDictType() structpb.NullValue {
	if x, ok := x.GetType().(*Type_EmptyDictType); ok {
		return x.EmptyDictType
	}
	return structpb.NullValue(0)
}

func (x *Type) GetPgType() *PgType {
	if x, ok := x.GetType().(*Type_PgType); ok {
		return x.PgType
	}
	return nil
}

type isType_Type interface {
	isType_Type()
}

type Type_TypeId struct {
	// Data types
	TypeId Type_PrimitiveTypeId `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3,enum=Ydb.Type_PrimitiveTypeId,oneof"`
}

type Type_DecimalType struct {
	DecimalType *DecimalType `protobuf:"bytes,2,opt,name=decimal_type,json=decimalType,proto3,oneof"`
}

type Type_OptionalType struct {
	// Container types
	OptionalType *OptionalType `protobuf:"bytes,101,opt,name=optional_type,json=optionalType,proto3,oneof"`
}

type Type_ListType struct {
	ListType *ListType `protobuf:"bytes,102,opt,name=list_type,json=listType,proto3,oneof"`
}

type Type_TupleType struct {
	TupleType *TupleType `protobuf:"bytes,103,opt,name=tuple_type,json=tupleType,proto3,oneof"`
}

type Type_StructType struct {
	StructType *StructType `protobuf:"bytes,104,opt,name=struct_type,json=structType,proto3,oneof"`
}

type Type_DictType struct {
	DictType *DictType `protobuf:"bytes,105,opt,name=dict_type,json=dictType,proto3,oneof"`
}

type Type_VariantType struct {
	VariantType *VariantType `protobuf:"bytes,106,opt,name=variant_type,json=variantType,proto3,oneof"`
}

type Type_TaggedType struct {
	TaggedType *TaggedType `protobuf:"bytes,107,opt,name=tagged_type,json=taggedType,proto3,oneof"`
}

type Type_VoidType struct {
	// Special types
	VoidType structpb.NullValue `protobuf:"varint,201,opt,name=void_type,json=voidType,proto3,enum=google.protobuf.NullValue,oneof"`
}

type Type_NullType struct {
	NullType structpb.NullValue `protobuf:"varint,202,opt,name=null_type,json=nullType,proto3,enum=google.protobuf.NullValue,oneof"`
}

type Type_EmptyListType struct {
	EmptyListType structpb.NullValue `protobuf:"varint,203,opt,name=empty_list_type,json=emptyListType,proto3,enum=google.protobuf.NullValue,oneof"`
}

type Type_EmptyDictType struct {
	EmptyDictType structpb.NullValue `protobuf:"varint,204,opt,name=empty_dict_type,json=emptyDictType,proto3,enum=google.protobuf.NullValue,oneof"`
}

type Type_PgType struct {
	PgType *PgType `protobuf:"bytes,205,opt,name=pg_type,json=pgType,proto3,oneof"`
}

func (*Type_TypeId) isType_Type() {}

func (*Type_DecimalType) isType_Type() {}

func (*Type_OptionalType) isType_Type() {}

func (*Type_ListType) isType_Type() {}

func (*Type_TupleType) isType_Type() {}

func (*Type_StructType) isType_Type() {}

func (*Type_DictType) isType_Type() {}

func (*Type_VariantType) isType_Type() {}

func (*Type_TaggedType) isType_Type() {}

func (*Type_VoidType) isType_Type() {}

func (*Type_NullType) isType_Type() {}

func (*Type_EmptyListType) isType_Type() {}

func (*Type_EmptyDictType) isType_Type() {}

func (*Type_PgType) isType_Type() {}

type ValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     *Value `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Payload *Value `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ValuePair) Reset() {
	*x = ValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuePair) ProtoMessage() {}

func (x *ValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValuePair.ProtoReflect.Descriptor instead.
func (*ValuePair) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{11}
}

func (x *ValuePair) GetKey() *Value {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ValuePair) GetPayload() *Value {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Value_BoolValue
	//	*Value_Int32Value
	//	*Value_Uint32Value
	//	*Value_Int64Value
	//	*Value_Uint64Value
	//	*Value_FloatValue
	//	*Value_DoubleValue
	//	*Value_BytesValue
	//	*Value_TextValue
	//	*Value_NullFlagValue
	//	*Value_NestedValue
	//	*Value_Low_128
	Value        isValue_Value `protobuf_oneof:"value"`
	Items        []*Value      `protobuf:"bytes,12,rep,name=items,proto3" json:"items,omitempty"`                                    // Used for List, Tuple, Struct types
	Pairs        []*ValuePair  `protobuf:"bytes,13,rep,name=pairs,proto3" json:"pairs,omitempty"`                                    // Used for Dict type
	VariantIndex uint32        `protobuf:"varint,14,opt,name=variant_index,json=variantIndex,proto3" json:"variant_index,omitempty"` // Used for Variant type
	High_128     uint64        `protobuf:"fixed64,16,opt,name=high_128,json=high128,proto3" json:"high_128,omitempty"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{12}
}

func (m *Value) GetValue() isValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Value) GetBoolValue() bool {
	if x, ok := x.GetValue().(*Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *Value) GetInt32Value() int32 {
	if x, ok := x.GetValue().(*Value_Int32Value); ok {
		return x.Int32Value
	}
	return 0
}

func (x *Value) GetUint32Value() uint32 {
	if x, ok := x.GetValue().(*Value_Uint32Value); ok {
		return x.Uint32Value
	}
	return 0
}

func (x *Value) GetInt64Value() int64 {
	if x, ok := x.GetValue().(*Value_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (x *Value) GetUint64Value() uint64 {
	if x, ok := x.GetValue().(*Value_Uint64Value); ok {
		return x.Uint64Value
	}
	return 0
}

func (x *Value) GetFloatValue() float32 {
	if x, ok := x.GetValue().(*Value_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *Value) GetDoubleValue() float64 {
	if x, ok := x.GetValue().(*Value_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (x *Value) GetBytesValue() []byte {
	if x, ok := x.GetValue().(*Value_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (x *Value) GetTextValue() string {
	if x, ok := x.GetValue().(*Value_TextValue); ok {
		return x.TextValue
	}
	return ""
}

func (x *Value) GetNullFlagValue() structpb.NullValue {
	if x, ok := x.GetValue().(*Value_NullFlagValue); ok {
		return x.NullFlagValue
	}
	return structpb.NullValue(0)
}

func (x *Value) GetNestedValue() *Value {
	if x, ok := x.GetValue().(*Value_NestedValue); ok {
		return x.NestedValue
	}
	return nil
}

func (x *Value) GetLow_128() uint64 {
	if x, ok := x.GetValue().(*Value_Low_128); ok {
		return x.Low_128
	}
	return 0
}

func (x *Value) GetItems() []*Value {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Value) GetPairs() []*ValuePair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

func (x *Value) GetVariantIndex() uint32 {
	if x != nil {
		return x.VariantIndex
	}
	return 0
}

func (x *Value) GetHigh_128() uint64 {
	if x != nil {
		return x.High_128
	}
	return 0
}

type isValue_Value interface {
	isValue_Value()
}

type Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,1,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Value_Int32Value struct {
	Int32Value int32 `protobuf:"fixed32,2,opt,name=int32_value,json=int32Value,proto3,oneof"`
}

type Value_Uint32Value struct {
	Uint32Value uint32 `protobuf:"fixed32,3,opt,name=uint32_value,json=uint32Value,proto3,oneof"`
}

type Value_Int64Value struct {
	Int64Value int64 `protobuf:"fixed64,4,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type Value_Uint64Value struct {
	Uint64Value uint64 `protobuf:"fixed64,5,opt,name=uint64_value,json=uint64Value,proto3,oneof"`
}

type Value_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,6,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Value_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,7,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type Value_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,8,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type Value_TextValue struct {
	TextValue string `protobuf:"bytes,9,opt,name=text_value,json=textValue,proto3,oneof"`
}

type Value_NullFlagValue struct {
	NullFlagValue structpb.NullValue `protobuf:"varint,10,opt,name=null_flag_value,json=nullFlagValue,proto3,enum=google.protobuf.NullValue,oneof"` // Set if current TValue is terminal Null
}

type Value_NestedValue struct {
	NestedValue *Value `protobuf:"bytes,11,opt,name=nested_value,json=nestedValue,proto3,oneof"` // Represents nested TValue for Optional<Optional<T>>(Null), or Variant<T> types
}

type Value_Low_128 struct {
	Low_128 uint64 `protobuf:"fixed64,15,opt,name=low_128,json=low128,proto3,oneof"`
}

func (*Value_BoolValue) isValue_Value() {}

func (*Value_Int32Value) isValue_Value() {}

func (*Value_Uint32Value) isValue_Value() {}

func (*Value_Int64Value) isValue_Value() {}

func (*Value_Uint64Value) isValue_Value() {}

func (*Value_FloatValue) isValue_Value() {}

func (*Value_DoubleValue) isValue_Value() {}

func (*Value_BytesValue) isValue_Value() {}

func (*Value_TextValue) isValue_Value() {}

func (*Value_NullFlagValue) isValue_Value() {}

func (*Value_NestedValue) isValue_Value() {}

func (*Value_Low_128) isValue_Value() {}

type TypedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *Type  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TypedValue) Reset() {
	*x = TypedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypedValue) ProtoMessage() {}

func (x *TypedValue) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypedValue.ProtoReflect.Descriptor instead.
func (*TypedValue) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{13}
}

func (x *TypedValue) GetType() *Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *TypedValue) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of column
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type of column
	Type *Type `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{14}
}

func (x *Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Column) GetType() *Type {
	if x != nil {
		return x.Type
	}
	return nil
}

// Represents table-like structure with ordered set of rows and columns
type ResultSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Metadata of columns
	Columns []*Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	// Rows of table
	Rows []*Value `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	// Flag indicates the result was truncated
	Truncated bool `protobuf:"varint,3,opt,name=truncated,proto3" json:"truncated,omitempty"`
}

func (x *ResultSet) Reset() {
	*x = ResultSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_value_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultSet) ProtoMessage() {}

func (x *ResultSet) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_value_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultSet.ProtoReflect.Descriptor instead.
func (*ResultSet) Descriptor() ([]byte, []int) {
	return file_protos_ydb_value_proto_rawDescGZIP(), []int{15}
}

func (x *ResultSet) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *ResultSet) GetRows() []*Value {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ResultSet) GetTruncated() bool {
	if x != nil {
		return x.Truncated
	}
	return false
}

var File_protos_ydb_value_proto protoreflect.FileDescriptor

var file_protos_ydb_value_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x79, 0x64, 0x62, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x59, 0x64, 0x62, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x0b, 0x44,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x22, 0x2d,
	0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x29, 0x0a,
	0x08, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x7e, 0x0a, 0x0b, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x74, 0x75, 0x70, 0x6c, 0x65,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x74, 0x75, 0x70, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x32, 0x0a, 0x09, 0x54, 0x75, 0x70, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x41, 0x0a, 0x0c,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x39, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x4c, 0x0a, 0x08, 0x44, 0x69,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x3d, 0x0a, 0x0a, 0x54, 0x61, 0x67, 0x67,
	0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x06, 0x50, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6f, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x6c, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x79, 0x70, 0x6d, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70,
	0x6d, 0x6f, 0x64, 0x22, 0x83, 0x09, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x07,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x35, 0x0a, 0x0c, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x44,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x75, 0x70, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x09, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x59, 0x64, 0x62,
	0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0b,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x74,
	0x61, 0x67, 0x67, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x67, 0x65, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x61, 0x67, 0x67, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x3a, 0x0a, 0x09, 0x76, 0x6f, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xc9, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x76, 0x6f, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x6e,
	0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6e,
	0x75, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xcb, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52,
	0x0d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45,
	0x0a, 0x0f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0xcd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x50, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x70, 0x67, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf0,
	0x02, 0x0a, 0x0f, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x52, 0x49, 0x4d, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x06, 0x12,
	0x08, 0x0a, 0x04, 0x49, 0x4e, 0x54, 0x38, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x49, 0x4e,
	0x54, 0x38, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x08, 0x12,
	0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x49,
	0x4e, 0x54, 0x33, 0x32, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e, 0x54, 0x33, 0x32,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x03, 0x12, 0x0a, 0x0a,
	0x06, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f,
	0x41, 0x54, 0x10, 0x21, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x20,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54, 0x45, 0x10, 0x30, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x41,
	0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x31, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45,
	0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x32, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x56, 0x41, 0x4c, 0x10, 0x33, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x5a, 0x5f, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x34, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x5a, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d,
	0x45, 0x10, 0x35, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x5a, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54,
	0x41, 0x4d, 0x50, 0x10, 0x36, 0x12, 0x0b, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x81, 0x20, 0x12, 0x09, 0x0a, 0x04, 0x55, 0x54, 0x46, 0x38, 0x10, 0x80, 0x24, 0x12, 0x09, 0x0a,
	0x04, 0x59, 0x53, 0x4f, 0x4e, 0x10, 0x81, 0x24, 0x12, 0x09, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e,
	0x10, 0x82, 0x24, 0x12, 0x09, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x10, 0x83, 0x24, 0x12, 0x12,
	0x0a, 0x0d, 0x4a, 0x53, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x84, 0x24, 0x12, 0x0d, 0x0a, 0x08, 0x44, 0x59, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x82,
	0x26, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x09, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x1c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xe7, 0x04, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0f, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x75, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x07, 0x48, 0x00,
	0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a,
	0x0b, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x10, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x23, 0x0a, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a,
	0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x44, 0x0a, 0x0f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x75, 0x6c, 0x6c, 0x46, 0x6c,
	0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x0c, 0x6e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x6c, 0x6f, 0x77, 0x5f,
	0x31, 0x32, 0x38, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x06, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x6f, 0x77,
	0x31, 0x32, 0x38, 0x12, 0x20, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x31, 0x32, 0x38, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x07, 0x68, 0x69, 0x67, 0x68, 0x31, 0x32, 0x38, 0x42, 0x07, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x4d, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x70, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x12, 0x25, 0x0a,
	0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x54, 0x0a, 0x0e, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64,
	0x62, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x67,
	0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x59, 0x64, 0x62, 0xf8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_ydb_value_proto_rawDescOnce sync.Once
	file_protos_ydb_value_proto_rawDescData = file_protos_ydb_value_proto_rawDesc
)

func file_protos_ydb_value_proto_rawDescGZIP() []byte {
	file_protos_ydb_value_proto_rawDescOnce.Do(func() {
		file_protos_ydb_value_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_ydb_value_proto_rawDescData)
	})
	return file_protos_ydb_value_proto_rawDescData
}

var file_protos_ydb_value_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_ydb_value_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_protos_ydb_value_proto_goTypes = []interface{}{
	(Type_PrimitiveTypeId)(0), // 0: Ydb.Type.PrimitiveTypeId
	(*DecimalType)(nil),       // 1: Ydb.DecimalType
	(*OptionalType)(nil),      // 2: Ydb.OptionalType
	(*ListType)(nil),          // 3: Ydb.ListType
	(*VariantType)(nil),       // 4: Ydb.VariantType
	(*TupleType)(nil),         // 5: Ydb.TupleType
	(*StructMember)(nil),      // 6: Ydb.StructMember
	(*StructType)(nil),        // 7: Ydb.StructType
	(*DictType)(nil),          // 8: Ydb.DictType
	(*TaggedType)(nil),        // 9: Ydb.TaggedType
	(*PgType)(nil),            // 10: Ydb.PgType
	(*Type)(nil),              // 11: Ydb.Type
	(*ValuePair)(nil),         // 12: Ydb.ValuePair
	(*Value)(nil),             // 13: Ydb.Value
	(*TypedValue)(nil),        // 14: Ydb.TypedValue
	(*Column)(nil),            // 15: Ydb.Column
	(*ResultSet)(nil),         // 16: Ydb.ResultSet
	(structpb.NullValue)(0),   // 17: google.protobuf.NullValue
}
var file_protos_ydb_value_proto_depIdxs = []int32{
	11, // 0: Ydb.OptionalType.item:type_name -> Ydb.Type
	11, // 1: Ydb.ListType.item:type_name -> Ydb.Type
	5,  // 2: Ydb.VariantType.tuple_items:type_name -> Ydb.TupleType
	7,  // 3: Ydb.VariantType.struct_items:type_name -> Ydb.StructType
	11, // 4: Ydb.TupleType.elements:type_name -> Ydb.Type
	11, // 5: Ydb.StructMember.type:type_name -> Ydb.Type
	6,  // 6: Ydb.StructType.members:type_name -> Ydb.StructMember
	11, // 7: Ydb.DictType.key:type_name -> Ydb.Type
	11, // 8: Ydb.DictType.payload:type_name -> Ydb.Type
	11, // 9: Ydb.TaggedType.type:type_name -> Ydb.Type
	0,  // 10: Ydb.Type.type_id:type_name -> Ydb.Type.PrimitiveTypeId
	1,  // 11: Ydb.Type.decimal_type:type_name -> Ydb.DecimalType
	2,  // 12: Ydb.Type.optional_type:type_name -> Ydb.OptionalType
	3,  // 13: Ydb.Type.list_type:type_name -> Ydb.ListType
	5,  // 14: Ydb.Type.tuple_type:type_name -> Ydb.TupleType
	7,  // 15: Ydb.Type.struct_type:type_name -> Ydb.StructType
	8,  // 16: Ydb.Type.dict_type:type_name -> Ydb.DictType
	4,  // 17: Ydb.Type.variant_type:type_name -> Ydb.VariantType
	9,  // 18: Ydb.Type.tagged_type:type_name -> Ydb.TaggedType
	17, // 19: Ydb.Type.void_type:type_name -> google.protobuf.NullValue
	17, // 20: Ydb.Type.null_type:type_name -> google.protobuf.NullValue
	17, // 21: Ydb.Type.empty_list_type:type_name -> google.protobuf.NullValue
	17, // 22: Ydb.Type.empty_dict_type:type_name -> google.protobuf.NullValue
	10, // 23: Ydb.Type.pg_type:type_name -> Ydb.PgType
	13, // 24: Ydb.ValuePair.key:type_name -> Ydb.Value
	13, // 25: Ydb.ValuePair.payload:type_name -> Ydb.Value
	17, // 26: Ydb.Value.null_flag_value:type_name -> google.protobuf.NullValue
	13, // 27: Ydb.Value.nested_value:type_name -> Ydb.Value
	13, // 28: Ydb.Value.items:type_name -> Ydb.Value
	12, // 29: Ydb.Value.pairs:type_name -> Ydb.ValuePair
	11, // 30: Ydb.TypedValue.type:type_name -> Ydb.Type
	13, // 31: Ydb.TypedValue.value:type_name -> Ydb.Value
	11, // 32: Ydb.Column.type:type_name -> Ydb.Type
	15, // 33: Ydb.ResultSet.columns:type_name -> Ydb.Column
	13, // 34: Ydb.ResultSet.rows:type_name -> Ydb.Value
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_protos_ydb_value_proto_init() }
func file_protos_ydb_value_proto_init() {
	if File_protos_ydb_value_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_ydb_value_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecimalType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionalType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariantType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TupleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaggedType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PgType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_value_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_ydb_value_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*VariantType_TupleItems)(nil),
		(*VariantType_StructItems)(nil),
	}
	file_protos_ydb_value_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*Type_TypeId)(nil),
		(*Type_DecimalType)(nil),
		(*Type_OptionalType)(nil),
		(*Type_ListType)(nil),
		(*Type_TupleType)(nil),
		(*Type_StructType)(nil),
		(*Type_DictType)(nil),
		(*Type_VariantType)(nil),
		(*Type_TaggedType)(nil),
		(*Type_VoidType)(nil),
		(*Type_NullType)(nil),
		(*Type_EmptyListType)(nil),
		(*Type_EmptyDictType)(nil),
		(*Type_PgType)(nil),
	}
	file_protos_ydb_value_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*Value_BoolValue)(nil),
		(*Value_Int32Value)(nil),
		(*Value_Uint32Value)(nil),
		(*Value_Int64Value)(nil),
		(*Value_Uint64Value)(nil),
		(*Value_FloatValue)(nil),
		(*Value_DoubleValue)(nil),
		(*Value_BytesValue)(nil),
		(*Value_TextValue)(nil),
		(*Value_NullFlagValue)(nil),
		(*Value_NestedValue)(nil),
		(*Value_Low_128)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_ydb_value_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_ydb_value_proto_goTypes,
		DependencyIndexes: file_protos_ydb_value_proto_depIdxs,
		EnumInfos:         file_protos_ydb_value_proto_enumTypes,
		MessageInfos:      file_protos_ydb_value_proto_msgTypes,
	}.Build()
	File_protos_ydb_value_proto = out.File
	file_protos_ydb_value_proto_rawDesc = nil
	file_protos_ydb_value_proto_goTypes = nil
	file_protos_ydb_value_proto_depIdxs = nil
}
