#pragma once
#include <ydb/core/base/defs.h>

namespace NKikimr {
    enum class EStaticControlType {
        DataShardControlsDisableByKeyFilter                 /* "DataShardControls.DisableByKeyFilter" */,
        DataShardControlsCanCancelROWithReadSets            /* "DataShardControls.CanCancelROWithReadSets" */,
        DataShardControlsMaxTxInFly                         /* "DataShardControls.MaxTxInFly" */,
        DataShardControlsMaxTxLagMilliseconds               /* "DataShardControls.MaxTxLagMilliseconds" */,
        DataShardControlsDataTxProfileLogThresholdMs        /* "DataShardControls.DataTxProfile.LogThresholdMs" */,
        DataShardControlsDataTxProfileBufferThresholdMs     /* "DataShardControls.DataTxProfile.BufferThresholdMs" */,
        DataShardControlsDataTxProfileBufferSize            /* "DataShardControls.DataTxProfile.BufferSize" */,
        DataShardControlsCpuUsageReportThreshlodPercent     /* "DataShardControls.CpuUsageReportThreshlodPercent" */,
        DataShardControlsCpuUsageReportIntervalSeconds      /* "DataShardControls.CpuUsageReportIntervalSeconds" */,
        DataShardControlsHighDataSizeReportThreshlodBytes   /* "DataShardControls.HighDataSizeReportThreshlodBytes" */,
        DataShardControlsHighDataSizeReportIntervalSeconds  /* "DataShardControls.HighDataSizeReportIntervalSeconds" */,
        DataShardControlsBackupReadAheadLo                  /* "DataShardControls.BackupReadAheadLo" */,
        DataShardControlsBackupReadAheadHi                  /* "DataShardControls.BackupReadAheadHi" */,
        DataShardControlsTtlReadAheadLo                     /* "DataShardControls.TtlReadAheadLo" */,
        DataShardControlsTtlReadAheadHi                     /* "DataShardControls.TtlReadAheadHi" */,
        DataShardControlsEnableLockedWrites                 /* "DataShardControls.EnableLockedWrites" */,
        DataShardControlsMaxLockedWritesPerKey              /* "DataShardControls.MaxLockedWritesPerKey" */,
        DataShardControlsEnableLeaderLeases                 /* "DataShardControls.EnableLeaderLeases" */,
        DataShardControlsMinLeaderLeaseDurationUs           /* "DataShardControls.MinLeaderLeaseDurationUs" */,
        DataShardControlsChangeRecordDebugPrint             /* "DataShardControls.ChangeRecordDebugPrint" */,
        DataShardControlsIncrementalRestoreReadAheadLo      /* "DataShardControls.IncrementalRestoreReadAheadLo" */,
        DataShardControlsIncrementalRestoreReadAheadHi      /* "DataShardControls.IncrementalRestoreReadAheadHi" */,
        DataShardControlsCdcInitialScanReadAheadLo          /* "DataShardControls.CdcInitialScanReadAheadLo" */,
        DataShardControlsCdcInitialScanReadAheadHi          /* "DataShardControls.CdcInitialScanReadAheadHi" */,
        TxLimitControlsPerRequestDataSizeLimit              /* "TxLimitControls.PerRequestDataSizeLimit" */,
        TxLimitControlsPerShardReadSizeLimit                /* "TxLimitControls.PerShardReadSizeLimit" */,
        TxLimitControlsPerShardIncomingReadSetSizeLimit     /* "TxLimitControls.PerShardIncomingReadSetSizeLimit" */,
        TxLimitControlsDefaultTimeoutMs                     /* "TxLimitControls.DefaultTimeoutMs" */,
        TxLimitControlsMaxShardCount                        /* "TxLimitControls.MaxShardCount" */,
        TxLimitControlsMaxReadSetCount                      /* "TxLimitControls.MaxReadSetCount" */,
        TCMallocControlsProfileSamplingRate                 /* "TCMallocControls.ProfileSamplingRate" */,
        TCMallocControlsGuardedSamplingRate                 /* "TCMallocControls.GuardedSamplingRate" */,
        TCMallocControlsPageCacheTargetSize                 /* "TCMallocControls.PageCacheTargetSize" */,
        TCMallocControlsPageCacheReleaseRate                /* "TCMallocControls.PageCacheReleaseRate" */,
        TabletControlsMaxCommitRedoMB                       /* "TabletControls.MaxCommitRedoMB" */,
        SchemeShardAllowConditionalEraseOperations          /* "SchemeShard_AllowConditionalEraseOperations" */,
        SchemeShardDisablePublicationsOfDropping            /* "SchemeShard_DisablePublicationsOfDropping" */,
        SchemeShardFillAllocatePQ                           /* "SchemeShard_FillAllocatePQ" */,
        SchemeShardAllowDataColumnForIndexTable             /* "SchemeShard_AllowDataColumnForIndexTable" */,
        SchemeShardAllowServerlessStorageBilling            /* "SchemeShard_AllowServerlessStorageBilling" */,
        SchemeShardSplitMergePartCountLimit                 /* "SchemeShard_SplitMergePartCountLimit" */,
        SchemeShardFastSplitSizeThreshold                   /* "SchemeShard_FastSplitSizeThreshold" */,
        SchemeShardFastSplitRowCountThreshold               /* "SchemeShard_FastSplitRowCountThreshold" */,
        SchemeShardFastSplitCpuPercentageThreshold          /* "SchemeShard_FastSplitCpuPercentageThreshold" */,
        SchemeShardSplitByLoadEnabled                       /* "SchemeShard_SplitByLoadEnabled" */,
        SchemeShardSplitByLoadMaxShardsDefault              /* "SchemeShard_SplitByLoadMaxShardsDefault" */,
        SchemeShardMergeByLoadMinUptimeSec                  /* "SchemeShard_MergeByLoadMinUptimeSec" */,
        SchemeShardMergeByLoadMinLowLoadDurationSec         /* "SchemeShard_MergeByLoadMinLowLoadDurationSec" */,
        SchemeShardControlsForceShardSplitDataSize          /* "SchemeShardControls.ForceShardSplitDataSize" */,
        SchemeShardControlsDisableForceShardSplit           /* "SchemeShardControls.DisableForceShardSplit" */,
        ColumnShardControlsBlobWriteGrouppingEnabled        /* "ColumnShardControls.BlobWriteGrouppingEnabled" */,
        ColumnShardControlsCacheDataAfterIndexing           /* "ColumnShardControls.CacheDataAfterIndexing" */,
        ColumnShardControlsCacheDataAfterCompaction         /* "ColumnShardControls.CacheDataAfterCompaction" */,
        ColumnShardControlsMinBytesToIndex                  /* "ColumnShardControls.MinBytesToIndex" */,
        ColumnShardControlsMaxBytesToIndex                  /* "ColumnShardControls.MaxBytesToIndex" */,
        ColumnShardControlsInsertTableCommittedSize         /* "ColumnShardControls.InsertTableCommittedSize" */,
        ColumnShardControlsIndexGoodBlobSize                /* "ColumnShardControls.IndexGoodBlobSize" */,
        ColumnShardControlsGranuleOverloadBytes             /* "ColumnShardControls.GranuleOverloadBytes" */,
        ColumnShardControlsCompactionDelaySec               /* "ColumnShardControls.CompactionDelaySec" */,
        ColumnShardControlsGranuleIndexedPortionsSizeLimit  /* "ColumnShardControls.GranuleIndexedPortionsSizeLimit" */,
        ColumnShardControlsGranuleIndexedPortionsCountLimit /* "ColumnShardControls.GranuleIndexedPortionsCountLimit" */,
        BlobCacheMaxCacheDataSize                           /* "BlobCache.MaxCacheDataSize" */,
        BlobCacheMaxInFlightDataSize                        /* "BlobCache.MaxInFlightDataSize" */
    };
} // NKikimr
