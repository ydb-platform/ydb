syntax = "proto3";
option cc_enable_arenas = true;

package Fq.Private;

import "ydb/core/fq/libs/config/protos/storage.proto";
import "ydb/core/fq/libs/protos/dq_effects.proto";

import "ydb/library/yql/dq/actors/protos/dq_status_codes.proto";

import "ydb/public/api/protos/ydb_operation.proto";
import "ydb/public/api/protos/ydb_value.proto";
import "ydb/public/api/protos/ydb_issue_message.proto";
import "ydb/public/api/protos/annotations/validation.proto";

import "ydb/public/api/protos/draft/fq.proto";

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

////////////////////////////////////////////////////////////

message CompressedData {
    string method = 1;
    bytes data = 2;
}

message TaskResources {

    enum ResourceState {
        UNSPECIFIED = 0; // on start
        NOT_NEEDED = 1;  // is not configured to use - skip it
        PREPARE = 2;     // resource creating in progress (retriable)
        READY = 3;       // created and ready to go
        CLEANUP = 4;     // is being destroyed (cleanup), may be removed
    }

    ResourceState rate_limiter = 1;
    ResourceState compilation = 2;
    ResourceState topic_consumers_state = 3;
    repeated NYql.NDqProto.TExternalEffect external_effects = 4;
    uint32 final_run_no = 5;

    string rate_limiter_path = 10;
    repeated TopicConsumer topic_consumers = 11;
}

message GetTaskRequest {
    string tenant = 1;
    string owner_id = 2; // guid, should be refreshed on node restart
    string host = 3;
    Ydb.Operations.OperationParams operation_params = 4;

    message Filter {
        string query_executor = 1 [(Ydb.length).le = 100];
    }
    Filter filter = 5;
}

message SignedIdentity {
    string value = 1;
    string signature = 2;
}

message TopicConsumer {
    string database_id = 1;
    string database = 2;
    string topic_path = 3;
    string consumer_name = 4;
    string cluster_endpoint = 5;
    bool use_ssl = 6;
    string token_name = 7;
    bool add_bearer_to_token = 8;
}

message GetTaskResult {
    message Task {
        // come back later in 10 sec ?
        SignedIdentity result_id = 1;
        SignedIdentity query_id = 2;
        SignedIdentity job_id = 3;
        uint64 generation = 4;

        bool streaming = 5;
        repeated bytes dq_graph = 6; // deprecated: use dq_graph_compressed
        // text, connection and binding are empty if dq_graph is not empty
        string text = 7;
        repeated FederatedQuery.Connection connection = 8;
        repeated FederatedQuery.Binding binding = 9;

        string user_token = 10; // IAM token for debug
        repeated SignedIdentity service_accounts = 11;
        string user_id = 12;
        FederatedQuery.QueryContent.QueryType query_type = 13;
        string scope = 14;
        FederatedQuery.ExecuteMode execute_mode = 15;
        FederatedQuery.StateLoadMode state_load_mode = 16;
        FederatedQuery.QueryMeta.ComputeStatus status = 17;
        repeated FederatedQuery.ResultSetMeta result_set_meta = 18;
        repeated TopicConsumer created_topic_consumers = 19;
        int32 dq_graph_index = 20;
        map<string, string> sensor_labels = 21;

        bool automatic = 22;
        string query_name = 23;
        google.protobuf.Timestamp deadline = 24;
        FederatedQuery.StreamingDisposition disposition = 25;
        uint64 result_limit = 26;

        FederatedQuery.Limits limits = 27;
        google.protobuf.Duration execution_limit = 29;
        google.protobuf.Timestamp request_started_at = 30;
        repeated CompressedData dq_graph_compressed = 31;
        uint32 restart_count = 32;

        TaskResources resources = 33;
        FederatedQuery.QueryContent.QuerySyntax query_syntax = 34;
        string operation_id = 35;
        string execution_id = 36;
        NFq.NConfig.TYdbStorageConfig compute_connection = 37;
        google.protobuf.Duration result_ttl = 38;
        map<string, Ydb.TypedValue> parameters = 39;
    }
    repeated Task tasks = 1;
}

message GetTaskResponse {
    Ydb.Operations.Operation operation = 1; // GetTaskResult
}

message PingTaskRequest {
    string owner_id = 1;
    SignedIdentity query_id = 2;
    SignedIdentity job_id = 3;
    SignedIdentity result_id = 4;
    FederatedQuery.QueryMeta.ComputeStatus status = 5;
    repeated Ydb.Issue.IssueMessage issues = 6;
    uint32 result_set_count = 7;
    string statistics = 8;
    repeated FederatedQuery.ResultSetMeta result_set_meta = 9;
    string executer_info = 10;
    repeated bytes dq_graph = 11; // deprecated: use dq_graph_compressed
    string ast = 12; // deprecated: use ast_compressed
    string plan = 13; // deprecated: use plan_compressed
    bool resign_query = 14;
    Ydb.Operations.OperationParams operation_params = 15;
    repeated Ydb.Issue.IssueMessage transient_issues = 16;
    repeated TopicConsumer created_topic_consumers = 17;
    FederatedQuery.StateLoadMode state_load_mode = 18;
    FederatedQuery.StreamingDisposition disposition = 19;
    int32 dq_graph_index = 20;
    NYql.NDqProto.StatusIds.StatusCode status_code = 21;
    repeated CompressedData dq_graph_compressed = 23;
    CompressedData ast_compressed = 24;
    CompressedData plan_compressed = 25;
    string scope = 100;
    google.protobuf.Timestamp started_at = 101;
    google.protobuf.Timestamp finished_at = 102;
    google.protobuf.Timestamp deadline = 103;
    string tenant = 104;
    TaskResources resources = 33;
    repeated Ydb.Issue.IssueMessage internal_issues = 34;
    string operation_id = 35;
    string execution_id = 36;
    NYql.NDqProto.StatusIds.StatusCode pending_status_code = 37;
    bool dump_raw_statistics = 38;
    repeated Ydb.ValuePair flat_stats = 39;
}

message PingTaskResult {
    FederatedQuery.QueryAction action = 1;
    google.protobuf.Timestamp expired_at = 2;
}

message PingTaskResponse {
    Ydb.Operations.Operation operation = 1; // PingTaskResult
}

message WriteTaskResultRequest {
    string owner_id = 1;
    SignedIdentity result_id = 2;
    Ydb.ResultSet result_set = 3;
    uint32 result_set_id = 4;
    uint64 offset = 5;
    uint64 request_id = 6;
    Ydb.Operations.OperationParams operation_params = 7;
    google.protobuf.Timestamp deadline = 8;
}

message WriteTaskResultResult {
    uint64 request_id = 1;
    NYql.NDqProto.StatusIds.StatusCode status_code = 2;
}

message WriteTaskResultResponse {
    Ydb.Operations.Operation operation = 1; // WriteRowsResultResult
}

message NodeInfo {
    uint32 node_id = 1;
    string instance_id = 2;
    string hostname = 3;
    uint64 active_workers = 4;
    uint64 memory_limit = 5;
    uint64 memory_allocated = 6;
    uint32 interconnect_port = 7;
    string node_address = 8;
    string data_center = 9;
}

message NodesHealthCheckRequest {
    string tenant = 1;
    NodeInfo node = 2;
    Ydb.Operations.OperationParams operation_params = 6;
}

message NodesHealthCheckResult {
    repeated NodeInfo nodes = 1;
}

message NodesHealthCheckResponse {
    Ydb.Operations.Operation operation = 1; // NodesHealthCheckResult
}

message CreateRateLimiterResourceRequest {
    Ydb.Operations.OperationParams operation_params = 1;
    string owner_id = 2;
    SignedIdentity query_id = 3;
    string scope = 4;
    string tenant = 5;
}

message CreateRateLimiterResourceResult {
    string rate_limiter = 1;
}

message CreateRateLimiterResourceResponse {
    Ydb.Operations.Operation operation = 1; // CreateRateLimiterResourceResult
}

message DeleteRateLimiterResourceRequest {
    Ydb.Operations.OperationParams operation_params = 1;
    string owner_id = 2;
    SignedIdentity query_id = 3;
    string scope = 4;
    string tenant = 5;
}

message DeleteRateLimiterResourceResult {
}

message DeleteRateLimiterResourceResponse {
    Ydb.Operations.Operation operation = 1; // DeleteRateLimiterResourceResult
}
