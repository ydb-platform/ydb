#include "request_discriminator.h"

namespace NKikimr::NJaegerTracing {

const TRequestDiscriminator TRequestDiscriminator::EMPTY {
    .RequestType = ERequestType::UNSPECIFIED,
    .Database = NothingObject,
};

extern const THashMap<TStringBuf, ERequestType> NameToRequestType = {
    {"KeyValue.CreateVolume", ERequestType::KEYVALUE_CREATEVOLUME},
    {"KeyValue.DropVolume", ERequestType::KEYVALUE_DROPVOLUME},
    {"KeyValue.AlterVolume", ERequestType::KEYVALUE_ALTERVOLUME},
    {"KeyValue.DescribeVolume", ERequestType::KEYVALUE_DESCRIBEVOLUME},
    {"KeyValue.ListLocalPartitions", ERequestType::KEYVALUE_LISTLOCALPARTITIONS},
    {"KeyValue.AcquireLock", ERequestType::KEYVALUE_ACQUIRELOCK},
    {"KeyValue.ExecuteTransaction", ERequestType::KEYVALUE_EXECUTETRANSACTION},
    {"KeyValue.Read", ERequestType::KEYVALUE_READ},
    {"KeyValue.ReadRange", ERequestType::KEYVALUE_READRANGE},
    {"KeyValue.ListRange", ERequestType::KEYVALUE_LISTRANGE},
    {"KeyValue.GetStorageChannelStatus", ERequestType::KEYVALUE_GETSTORAGECHANNELSTATUS},

    {"Table.CreateSession", ERequestType::TABLE_CREATESESSION},
    {"Table.KeepAlive", ERequestType::TABLE_KEEPALIVE},
    {"Table.AlterTable", ERequestType::TABLE_ALTERTABLE},
    {"Table.CreateTable", ERequestType::TABLE_CREATETABLE},
    {"Table.DropTable", ERequestType::TABLE_DROPTABLE},
    {"Table.DescribeTable", ERequestType::TABLE_DESCRIBETABLE},
    {"Table.CopyTable", ERequestType::TABLE_COPYTABLE},
    {"Table.CopyTables", ERequestType::TABLE_COPYTABLES},
    {"Table.RenameTables", ERequestType::TABLE_RENAMETABLES},
    {"Table.ExplainDataQuery", ERequestType::TABLE_EXPLAINDATAQUERY},
    {"Table.ExecuteSchemeQuery", ERequestType::TABLE_EXECUTESCHEMEQUERY},
    {"Table.BeginTransaction", ERequestType::TABLE_BEGINTRANSACTION},
    {"Table.DescribeTableOptions", ERequestType::TABLE_DESCRIBETABLEOPTIONS},
    {"Table.DeleteSession", ERequestType::TABLE_DELETESESSION},
    {"Table.CommitTransaction", ERequestType::TABLE_COMMITTRANSACTION},
    {"Table.RollbackTransaction", ERequestType::TABLE_ROLLBACKTRANSACTION},
    {"Table.PrepareDataQuery", ERequestType::TABLE_PREPAREDATAQUERY},
    {"Table.ExecuteDataQuery", ERequestType::TABLE_EXECUTEDATAQUERY},
    {"Table.BulkUpsert", ERequestType::TABLE_BULKUPSERT},
    {"Table.StreamExecuteScanQuery", ERequestType::TABLE_STREAMEXECUTESCANQUERY},
    {"Table.StreamReadTable", ERequestType::TABLE_STREAMREADTABLE},
    {"Table.ReadRows", ERequestType::TABLE_READROWS},
    {"Table.DescribeExternalDataSource", ERequestType::TABLE_DESCRIBEEXTERNALDATASOURCE},
    {"Table.DescribeExternalTable", ERequestType::TABLE_DESCRIBEEXTERNALTABLE},

    {"Query.ExecuteQuery", ERequestType::QUERY_EXECUTEQUERY},
    {"Query.ExecuteScript", ERequestType::QUERY_EXECUTESCRIPT},
    {"Query.FetchScriptResults", ERequestType::QUERY_FETCHSCRIPTRESULTS},
    {"Query.CreateSession", ERequestType::QUERY_CREATESESSION},
    {"Query.DeleteSession", ERequestType::QUERY_DELETESESSION},
    {"Query.AttachSession", ERequestType::QUERY_ATTACHSESSION},
    {"Query.BeginTransaction", ERequestType::QUERY_BEGINTRANSACTION},
    {"Query.CommitTransaction", ERequestType::QUERY_COMMITTRANSACTION},
    {"Query.RollbackTransaction", ERequestType::QUERY_ROLLBACKTRANSACTION},

    {"Discovery.WhoAmI", ERequestType::DISCOVERY_WHOAMI},
    {"Discovery.NodeRegistration", ERequestType::DISCOVERY_NODEREGISTRATION},
    {"Discovery.ListEndpoints", ERequestType::DISCOVERY_LISTENDPOINTS},

    {"RateLimiter.CreateResource", ERequestType::RATELIMITER_CREATE_RESOURCE},
    {"RateLimiter.AlterResource", ERequestType::RATELIMITER_ALTER_RESOURCE},
    {"RateLimiter.DropResource", ERequestType::RATELIMITER_DROP_RESOURCE},
    {"RateLimiter.ListResources", ERequestType::RATELIMITER_LIST_RESOURCES},
    {"RateLimiter.DescribeResource", ERequestType::RATELIMITER_DESCRIBE_RESOURCE},
    {"RateLimiter.AcquireResource", ERequestType::RATELIMITER_ACQUIRE_RESOURCE},

    {"BSConfig.ReplaceStorageConfig", ERequestType::BSCONFIG_REPLACESTORAGECONFIG},
    {"BSConfig.FetchStorageConfig", ERequestType::BSCONFIG_FETCHSTORAGECONFIG},
    {"BSConfig.Bootstrap", ERequestType::BSCONFIG_BOOTSTRAP},

    {"Topic.StreamWrite", ERequestType::TOPIC_STREAMWRITE},
    {"Topic.StreamWrite.Init", ERequestType::TOPIC_STREAMWRITE_INIT},
    {"Topic.StreamWrite.Write", ERequestType::TOPIC_STREAMWRITE_WRITE},
    {"Topic.StreamWrite.UpdateToken", ERequestType::TOPIC_STREAMWRITE_UPDATE_TOKEN},
    {"Topic.StreamRead", ERequestType::TOPIC_STREAMREAD},
    {"Topic.StreamRead.Init", ERequestType::TOPIC_STREAMREAD_INIT},
    {"Topic.StreamRead.Read", ERequestType::TOPIC_STREAMREAD_READ},
    {"Topic.StreamRead.CommitOffset", ERequestType::TOPIC_STREAMREAD_COMMIT_OFFSET},
    {"Topic.StreamRead.PartitionSessionStatus", ERequestType::TOPIC_STREAMREAD_PARTITION_SESSION_STATUS},
    {"Topic.StreamRead.UpdateToken", ERequestType::TOPIC_STREAMREAD_UPDATE_TOKEN},
    {"Topic.StreamRead.DirectReadAck", ERequestType::TOPIC_STREAMREAD_DIRECT_READ_ACK},
    {"Topic.StreamRead.StartPartitionSession", ERequestType::TOPIC_STREAMREAD_START_PARTITION_SESSION},
    {"Topic.StreamRead.StopPartitionSession", ERequestType::TOPIC_STREAMREAD_STOP_PARTITION_SESSION},
    {"Topic.StreamDirectRead", ERequestType::TOPIC_STREAMDIRECTREAD},
    {"Topic.StreamDirectRead.Init", ERequestType::TOPIC_STREAMDIRECTREAD_INIT},
    {"Topic.StreamDirectRead.StartDirectReadPartitionSession", ERequestType::TOPIC_STREAMDIRECTREAD_START_DIRECT_READ_PARTITION_SESSION},
    {"Topic.StreamDirectRead.UpdateToken", ERequestType::TOPIC_STREAMDIRECTREAD_UPDATE_TOKEN},
    {"Topic.CommitOffset", ERequestType::TOPIC_COMMITOFFSET},
    {"Topic.UpdateOffsetsInTransaction", ERequestType::TOPIC_UPDATEOFFSETSINTRANSACTION},
    {"Topic.CreateTopic", ERequestType::TOPIC_CREATETOPIC},
    {"Topic.DescribeTopic", ERequestType::TOPIC_DESCRIBETOPIC},
    {"Topic.DescribePartition", ERequestType::TOPIC_DESCRIBEPARTITION},
    {"Topic.DescribeConsumer", ERequestType::TOPIC_DESCRIBECONSUMER},
    {"Topic.AlterTopic", ERequestType::TOPIC_ALTERTOPIC},
    {"Topic.DropTopic", ERequestType::TOPIC_DROPTOPIC},
};

extern const THashSet<ERequestType> NoDefaultSamplingRequestTypes = {
    ERequestType::TOPIC_STREAMWRITE,
    ERequestType::TOPIC_STREAMREAD,
    ERequestType::TOPIC_STREAMDIRECTREAD,
};

} // namespace NKikimr::NJaegerTracing
