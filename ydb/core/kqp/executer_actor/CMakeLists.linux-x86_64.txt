# This file was generated by the YaTool build system (https://github.com/yandex/yatool),
# from a source YaTool build configuration provided in ya.make files.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.
#
# Please refer to the build instructions in the repository for more information about manual
# changes in this file.

get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)

add_subdirectory(ut)

add_library(core-kqp-executer_actor)


target_compile_options(core-kqp-executer_actor PRIVATE
  -DUSE_CURRENT_UDF_ABI_VERSION
)

target_link_libraries(core-kqp-executer_actor PUBLIC
  contrib-libs-linux-headers
  contrib-libs-cxxsupp
  yutil
  library-actors-core
  cpp-containers-absl_flat_hash
  ydb-core-actorlib_impl
  ydb-core-base
  core-client-minikql_compile
  ydb-core-formats
  core-kqp-common
  core-kqp-compute_actor
  core-kqp-federated_query
  core-kqp-query_compiler
  core-kqp-rm_service
  core-kqp-topics
  kqp-gateway-local_rpc
  ydb-core-protos
  tx-long_tx_service-public
  ydb-core-ydb_convert
  services-metadata-abstract
  ydb-library-mkql_proto
  library-mkql_proto-protos
  dq-actors-compute
  yql-dq-runtime
  yql-dq-tasks
  providers-common-http_gateway
  tools-enum_parser-enum_serialization_runtime
)

target_sources(core-kqp-executer_actor PRIVATE
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_data_executer.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_scan_executer.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_scheme_executer.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_executer_impl.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_executer_stats.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_literal_executer.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_locks_helper.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_partition_helper.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_planner.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_planner_strategy.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_shards_resolver.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_result_channel.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_table_resolver.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_tasks_graph.cpp
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_tasks_validate.cpp
)


generate_enum_serilization(core-kqp-executer_actor
  ${PROJECT_SOURCE_DIR}/ydb/core/kqp/executer_actor/kqp_executer.h
  INCLUDE_HEADERS
  ydb/core/kqp/executer_actor/kqp_executer.h
)
