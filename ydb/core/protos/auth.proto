package NKikimrProto;
option java_package = "ru.yandex.kikimr.proto";

message TAuthConfig {
    optional TUserRegistryConfig UserRegistryConfig = 1;
    optional TTVMConfig TVMConfig = 2;
    optional string StaffApiUserToken = 3;
    optional string BlackBoxEndpoint = 4 [default = "blackbox.yandex-team.ru"];
    optional string AccessServiceEndpoint = 5 [default = "as.private-api.cloud.yandex.net:4286"];
    optional string UserAccountServiceEndpoint = 6 [default = "api-adapter.private-api.cloud.yandex.net:8443"];
    optional string ServiceAccountServiceEndpoint = 7 [default = "api-adapter.private-api.cloud.yandex.net:8443"];
    optional string StaffEndpoint = 10 [default = "staff-api.yandex-team.ru"];
    optional uint32 GrpcCacheSize = 16 [default = 1024];
    optional uint64 GrpcSuccessLifeTime = 17 [default = 60000]; // ms
    optional uint64 GrpcErrorLifeTime = 18 [default = 10000]; // ms
    optional bool UseBlackBox = 20 [default = true];
    optional bool UseAccessService = 21 [default = false];
    optional bool CacheAccessServiceAuthentication = 22 [default = false];
    optional bool CacheAccessServiceAuthorization = 23 [default = false];
    optional bool UseStaff = 25 [default = true];
    optional bool UseUserAccountService = 26 [default = false];
    optional bool UseServiceAccountService = 27 [default = false];
    optional bool UseLoginProvider = 29 [default = true];
    optional bool UseAccessServiceTLS = 31 [default = true];
    optional bool UseUserAccountServiceTLS = 32 [default = true];
    optional bool UseServiceAccountServiceTLS = 33 [default = true];
    optional bool CacheUserAccountService = 37 [default = true];
    optional bool CacheServiceAccountService = 38 [default = true];
    optional string TvmServiceDomain = 40 [default = "tvm"];
    optional string BlackBoxDomain = 41 [default = "blackbox"];
    optional string AccessServiceDomain = 42 [default = "as"];
    optional string UserAccountDomain = 43 [default = "passport"];
    optional string ServiceDomain = 44 [default = "service"];
    optional bool DomainLoginOnly = 45 [default = true];
    optional string LoginTokenExpireTime = 46 [default = "12h"];
    optional string RefreshPeriod = 50 [default = "1s"]; // how often we check for tickets freshness/expiration
    optional string RefreshTime = 51 [default = "1h"]; // we will try to refresh valid ticket within RefreshTime/2 and RefreshTime randomly
    optional string LifeTime = 52 [default = "1h"]; // for how long ticket will remain in the cache after last access
    optional string ExpireTime = 53 [default = "24h"]; // after what time ticket will be expired and removed from the cache
    optional string TVMExpireTime = 54 [default = "2m"]; // the same for TVM tickets
    optional string MinErrorRefreshTime = 55 [default = "1s"]; // min period for refresh of error ticket
    optional string MaxErrorRefreshTime = 56 [default = "1m"]; // max period for refresh of error ticket
    optional string PathToRootCA = 60 [default = "/etc/ssl/certs/YandexInternalRootCA.pem"]; // root CA certificate PEM/x509
    optional uint32 AccessServiceGrpcKeepAliveTimeMs = 70 [default = 10000]; // CLOUD-27573
    optional uint32 AccessServiceGrpcKeepAliveTimeoutMs = 71 [default = 1000]; // CLOUD-27573
    optional TStaffApiTvmSettings StaffApiTvmSettings = 72;
    optional TTokenAccessorConfig TokenAccessorConfig = 73;
    optional TLdapAuthentication LdapAuthentication = 74;
    optional string LdapAuthenticationDomain = 75 [default = "ldap"];
    optional bool UseAccessServiceApiKey = 76 [default = false]; // Use IAM ApiKey
    optional string AsSignatureExpireTime = 77 [default = "1m"];
    optional bool UseBuiltinDomain = 78 [default = true];
    optional string CertificateAuthenticationDomain = 80 [default = "cert"];
    optional bool EnableLoginAuthentication = 81 [default = true];
}

message TUserRegistryConfig {
    optional string Query = 1; // Must take uid (ui64) as parameter and return user (utf8)
}

message TTVMConfig {
    optional bool Enabled = 1;
    optional uint32 ServiceTVMId = 2;
    optional string PublicKeys = 3;
    optional bool UpdatePublicKeys = 4 [default = true];
    optional uint64 UpdatePublicKeysSuccessTimeout = 5 [default = 82800];
    optional uint64 UpdatePublicKeysFailureTimeout = 6 [default = 10];
}

message TStaffApiTvmSettings {
    optional string Host = 1;
    optional uint32 Port = 2;
    optional uint32 SelfTvmId = 3;
    optional string DiskCacheDir = 4;
    optional uint32 StaffAppId = 5;
    oneof Secret {
        string SecretEnvironmentVariable = 6;
        string PlainTextSecret = 7;
    }
}

message TTokenAccessorConfig {
    optional bool Enabled = 1;
    optional string Endpoint = 2; // endpoint of token accessor daemon. If you need to use the grpcs protocol then add a prefix grpcs://
    optional string SslCaCert = 3;
    optional uint64 ConnectionPoolSize = 4 [default = 10];
}

message TLdapAuthentication {
    message TUseTls {
        enum TCertRequire {
            NEVER = 1;
            ALLOW = 2;
            TRY = 3;
            DEMAND = 4;
            HARD = 5;
        };

        optional bool Enable = 1 [default = false];
        optional string CaCertFile = 2;
        optional TCertRequire CertRequire = 3 [default = DEMAND];
    }

    optional string Host = 1; // DEPRECATED: Use Hosts instead it
    optional uint32 Port = 2;
    required string BaseDn = 3;
    required string BindDn = 4;
    required string BindPassword = 5;
    optional string SearchFilter = 6;
    optional string SearchAttribute = 7;
    optional TUseTls UseTls = 8;
    optional string RequestedGroupAttribute = 9;
    repeated string Hosts = 10;
    optional string Scheme = 11 [default = "ldap"];
}
