import "ydb/core/protos/blob_depot_config.proto";
import "ydb/core/protos/base.proto";
import "ydb/core/protos/blobstorage_disk_color.proto";

package NKikimrBlobDepot;

enum EKeepState {
    Default = 0;
    Keep = 1;
    DoNotKeep = 2;
}

message TBlobSeqId {
    optional uint32 Channel = 1;
    optional uint32 Generation = 2;
    optional uint32 Step = 3;
    optional uint32 Index = 4;
}

message TBlobLocator {
    optional uint32 GroupId = 1;
    optional TBlobSeqId BlobSeqId = 2;
    optional uint32 Checksum = 3;
    optional uint64 TotalDataLen = 4;
    optional uint32 FooterLen = 5;
}

message TValueChain {
    optional TBlobLocator Locator = 1;
    optional uint64 SubrangeBegin = 2;
    optional uint64 SubrangeEnd = 3;
}

message TValue {
    optional bytes Meta = 1;
    repeated TValueChain ValueChain = 2;
    optional EKeepState KeepState = 3;
    optional bool Public = 4;
    optional bool GoingToAssimilate = 5;
    optional uint32 ValueVersion = 6;
}

message TGivenIdRange {
    message TChannelRange {
        optional uint32 Channel = 1;
        optional uint64 Begin = 2;
        optional uint64 End = 3;
    }
    repeated TChannelRange ChannelRanges = 1;
}

message TResolvedValueChain {
    optional uint32 GroupId = 1;
    optional NKikimrProto.TLogoBlobID BlobId = 2;
    optional uint32 SubrangeBegin = 3;
    optional uint32 SubrangeEnd = 4;
}



message TEvApplyConfig {
    optional uint64 TxId = 1;
    optional NKikimrBlobDepot.TBlobDepotConfig Config = 2;
}

message TEvApplyConfigResult {
    optional uint64 TabletId = 1;
    optional uint64 TxId = 2;
}

message TEvRegisterAgent {
    optional uint32 VirtualGroupId = 1; // for validation purposes
    optional fixed64 AgentInstanceId = 2; // randomly generated number every time agent starts from scratch
}

message TEvRegisterAgentResult {
    message TChannelGroupId {
        optional uint32 Channel = 1;
        optional uint32 GroupId = 2;
    };
    message TChannelKind {
        optional NKikimrBlobDepot.TChannelKind.E ChannelKind = 1;
        repeated TChannelGroupId ChannelGroups = 2;
    }
    optional uint32 Generation = 1;
    repeated TChannelKind ChannelKinds = 2;
    optional uint32 DecommitGroupId = 3;
    optional NKikimrBlobStorage.TPDiskSpaceColor.E SpaceColor = 4;
    optional float ApproximateFreeSpaceShare = 5;
}

message TEvAllocateIds {
    optional NKikimrBlobDepot.TChannelKind.E ChannelKind = 1;
    optional uint32 Count = 2;
}

message TEvAllocateIdsResult {
    optional NKikimrBlobDepot.TChannelKind.E ChannelKind = 1;
    optional uint32 Generation = 2; // executor generation, for validation purposes
    optional TGivenIdRange GivenIdRange = 3;
}

message TEvBlock {
    optional fixed64 TabletId = 1;
    optional uint32 BlockedGeneration = 2;
    optional uint64 IssuerGuid = 3;
}

message TEvBlockResult {
    optional NKikimrProto.EReplyStatus Status = 1;
    optional string ErrorReason = 2;
    optional uint32 TimeToLiveMs = 3;
}

message TEvPushNotify {
    message TBlockedTablet {
        optional fixed64 TabletId = 1;
        optional uint32 BlockedGeneration = 2;
        optional uint64 IssuerGuid = 3;
    }
    message TInvalidatedStep {
        optional uint32 Channel = 1;
        optional uint32 Generation = 2; // for validation purposes
        optional uint32 InvalidatedStep = 3;
    }
    repeated TBlockedTablet BlockedTablets = 1;
    repeated TInvalidatedStep InvalidatedSteps = 2;
    optional NKikimrBlobStorage.TPDiskSpaceColor.E SpaceColor = 3;
    optional float ApproximateFreeSpaceShare = 4;
}

message TEvPushNotifyResult {
    repeated TBlobSeqId WritesInFlight = 1;
    optional uint64 Id = 2; // original request cookie
}

message TEvQueryBlocks {
    repeated fixed64 TabletIds = 1;
}

message TEvQueryBlocksResult {
    repeated uint32 BlockedGenerations = 1;
    optional uint32 TimeToLiveMs = 2; // TTL starting since sending TEvQueryBlocks at agent
}

message TEvCollectGarbage {
    repeated NKikimrProto.TLogoBlobID Keep = 1;
    repeated NKikimrProto.TLogoBlobID DoNotKeep = 2;
    optional uint64 TabletId = 3;
    optional uint32 Generation = 4;
    optional uint32 PerGenerationCounter = 5;
    optional uint32 Channel = 6;
    optional bool Hard = 7;
    optional uint32 CollectGeneration = 8;
    optional uint64 CollectStep = 9;
}

message TEvCollectGarbageResult {
    optional NKikimrProto.EReplyStatus Status = 1;
    optional string ErrorReason = 2;
}

message TEvCommitBlobSeq {
    message TItem {
        optional TBlobLocator BlobLocator = 1; // GroupId and Generation are for validation purposes
        optional bytes Key = 2;
        optional bytes Meta = 3;
        optional bool UncertainWrite = 4;
        optional bool CommitNotify = 5;
    }

    repeated TItem Items = 1;
}

message TEvCommitBlobSeqResult {
    message TItem {
        optional NKikimrProto.EReplyStatus Status = 1;
        optional string ErrorReason = 2;
    }

    repeated TItem Items = 1;
}

message TEvDiscardSpoiledBlobSeq {
    repeated TBlobSeqId Items = 1;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TEvResolve -- lookup key in the Data table (and apply noncommitted changes if necessary) and return value chain for
// each of the found entries.

message TEvResolve {
    message TKeyRange {
        optional bytes BeginningKey = 1; // start from the very first key (if not set)
        optional bool IncludeBeginning = 2 [default = true];
        optional bytes EndingKey = 3; // end with the key beyond the last one (if not set)
        optional bool IncludeEnding = 4 [default = false];
        optional uint32 MaxKeys = 5 [default = 0]; // zero or unset value means infinite amount
        optional bool Reverse = 6 [default = false]; // reverse output
    }
    message TItem {
        oneof KeyDesignator {
            TKeyRange KeyRange = 1;
            bytes ExactKey = 2;
        }
        optional bool ReturnMeta = 3 [default = false];
        optional bool ReturnOwners = 4 [default = false];
        optional uint64 Cookie = 5; // request cookie to match response item
        optional fixed64 TabletId = 6; // used in virtual group mode to resolve keys of specific tablet
        optional bool MustRestoreFirst = 7;
    }

    repeated TItem Items = 1;
}

message TEvResolveResult {
    message TResolvedKey {
        optional uint64 Cookie = 1;
        optional bytes Key = 2;
        repeated TResolvedValueChain ValueChain = 3;
        optional bytes Meta = 4;
        repeated uint64 Owners = 5;
        optional string ErrorReason = 6; // if set, this means value wasn't resolved due to error
        optional uint32 ValueVersion = 7; // ValueChain version, gets increased every time value is changed
        optional bool ReliablyWritten = 8; // MustRestoreFirst was either set, or the blob is in local storage
    }
    optional NKikimrProto.EReplyStatus Status = 1; // OVERRUN means there are more messages on the way
    optional string ErrorReason = 2;
    repeated TResolvedKey ResolvedKeys = 3;
}

message TEvPushMetrics {
    optional uint64 BytesRead = 1; // since last update
    optional uint64 BytesWritten = 2; // since last update
}
