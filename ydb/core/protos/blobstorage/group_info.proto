import "ydb/core/protos/blobstorage/blobstorage_base3.proto";
import "ydb/core/protos/blobstorage/entity_status.proto";
import "ydb/core/protos/blobstorage/vdisk_location.proto";
import "ydb/library/actors/protos/interconnect.proto";

package NKikimrBlobStorage;
option java_package = "ru.yandex.kikimr.proto";

message TGroupInfo {
    message TFailRealm {
        message TFailDomain {
            repeated NKikimrBlobStorage.TVDiskLocation VDiskLocations = 1;
        }
        repeated TFailDomain FailDomains = 1;
    }

    optional uint32 GroupID = 1;
    optional uint32 GroupGeneration = 2;
    optional uint32 ErasureSpecies = 3;
    repeated TFailRealm Rings = 4; // name "Rings" for textual compatibility
    optional NKikimrBlobStorage.EEntityStatus EntityStatus = 5;
    optional uint32 EncryptionMode = 6 [default = 0];
    optional uint32 LifeCyclePhase = 7 [default = 0];
    optional bytes MainKeyId = 8 [default = ""];
    optional bytes EncryptedGroupKey = 9 [default = ""];
    optional uint64 GroupKeyNonce = 10 [default = 0];
    optional uint64 MainKeyVersion = 11 [default = 0];
    optional NActorsInterconnect.TScopeId AcceptedScope = 12; // some kind of ACL for scopes; empty = no restrictions
    optional string StoragePoolName = 13;
    optional EPDiskType DeviceType = 14;
    optional uint64 BlobDepotId = 15; // if filled, then this is virtual group
    optional NKikimrBlobStorage.TGroupDecommitStatus.E DecommitStatus = 16;
    repeated uint32 BridgeGroupIds = 17; // filled in for common group when operating in bridge mode
    optional uint32 GroupSizeInUnits = 18;
}