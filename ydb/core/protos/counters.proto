import "google/protobuf/descriptor.proto";

package NKikimr;

option java_package = "ru.yandex.kikimr.proto";

//
// Custom options to describe counters
//
message TRange {
    optional uint64 Value = 1;
    optional string Name = 2;
}

message TCounterOptions {
    optional string Name = 1;
    repeated TRange Ranges = 2;
    optional bool Integral = 3;
    optional string SVName = 4;
}

message TTxTypeOptions {
    optional string Name = 1;
}

message TLabeledCounterOptions {
    enum ECounterType {
        CT_SIMPLE = 1;
        CT_TIMELAG = 2;
        CT_DERIV = 3;
    }

    enum EAggregateFunc { //must be consistent with TTabletLabeledCountersBase::EAggreagateFunc
        EAF_MAX = 1;
        EAF_MIN = 2;
        EAF_SUM = 3;
    }

    optional string Name = 1;
    optional EAggregateFunc AggrFunc = 2;
    optional ECounterType Type = 3 [default = CT_SIMPLE];
    optional string SVName = 4 [default = ""];
}

message TLabeledCounterGroupNamesOptions {
    repeated string Names = 1;
}

extend google.protobuf.EnumValueOptions {
    optional TCounterOptions CounterOpts = 56672;
    optional TTxTypeOptions TxTypeOpts = 56673;
    optional TLabeledCounterOptions LabeledCounterOpts = 56676;
}

extend google.protobuf.EnumOptions {
    optional TCounterOptions GlobalCounterOpts = 56674;
    optional TLabeledCounterGroupNamesOptions GlobalGroupNamesOpts = 56677;
}

extend google.protobuf.FileOptions {
    optional string TabletTypeName = 56675;
}

//
// Counters common for every transaction type
//
enum ETxTypeSimpleCounters {
    COUNTER_TT_SIMPLE_IGNORE = 0;

    COUNTER_TT_INFLY = 1                                 [(CounterOpts) = {Name: "InFly"}];
}

enum ETxTypeCumulativeCounters {
    COUNTER_TT_CULUMATIVE_IGNORE = 0;

    COUNTER_TT_POSTPONED = 1                             [(CounterOpts) = {Name: "Postponed"}]; // Total restarts
    COUNTER_TT_RO_COMPLETED = 2                          [(CounterOpts) = {Name: "RoCompleted"}];
    COUNTER_TT_RW_COMPLETED = 3                          [(CounterOpts) = {Name: "RwCompleted"}];
    COUNTER_TT_WRITES = 4                                [(CounterOpts) = {Name: "Writes"}];
    COUNTER_TT_BYTES_WRITTEN = 5                         [(CounterOpts) = {Name: "WrittenBytes"}];
    COUNTER_TT_BYTES_READ = 6                            [(CounterOpts) = {Name: "ReadBytes"}];
    COUNTER_TT_EXECUTE_CPUTIME = 7                       [(CounterOpts) = {Name: "ExecuteCPUTime"}];
    COUNTER_TT_BOOKKEEPING_CPUTIME = 8                   [(CounterOpts) = {Name: "BookkeepingCPUTime"}];
    COUNTER_TT_COMMITED_CPUTIME = 9                      [(CounterOpts) = {Name: "CommitedCPUTime"}];
    COUNTER_TT_TOUCHED_BLOCKS = 10                       [(CounterOpts) = {Name: "TouchedBlocks"}];
    COUNTER_TT_LOADED_BLOCKS = 11                        [(CounterOpts) = {Name: "LoadedBlocks"}];
    COUNTER_TT_TERMINATED = 12                           [(CounterOpts) = {Name: "Terminated"}];
    COUNTER_TT_REDO_WRITTEN_BYTES = 13                   [(CounterOpts) = {Name: "RedoWrittenBytes"}];
    COUNTER_TT_ANNEX_WRITTEN_BYTES = 14                  [(CounterOpts) = {Name: "AnnexWrittenBytes"}];
}

enum ETxTypePercentileCounters {
    option (GlobalCounterOpts) = {
        Ranges: { Value: 500         Name: "(1) < 500 us"      }
        Ranges: { Value: 1000        Name: "(2) 0.5-1 ms"      }
        Ranges: { Value: 2000        Name: "(3) 1-2 ms"        }
        Ranges: { Value: 4000        Name: "(4) 2-4 ms"        }
        Ranges: { Value: 8000        Name: "(5) 4-8 ms"        }
        Ranges: { Value: 16000       Name: "(6) 8-16 ms"       }
        Ranges: { Value: 32000       Name: "(7) 16-32 ms"      }
        Ranges: { Value: 64000       Name: "(8) 32-64 ms"      }
        Ranges: { Value: 128000      Name: "(9) 64-128 ms"     }
        Ranges: { Value: 256000      Name: "(10) 128-256 ms"   }
        Ranges: { Value: 512000      Name: "(11) 256-512 ms"   }
        Ranges: { Value: 1024000     Name: "(12) 512-1024 ms"  }
        Ranges: { Value: 2000000     Name: "(13) 1024-2000 ms" }
        Ranges: { Value: 4000000     Name: "(14) 2-4 s"        }
        Ranges: { Value: 8000000     Name: "(15) 4-8 s"        }
        Ranges: { Value: 16000000    Name: "(16) 8-16 s"       }
        Ranges: { Value: 32000000    Name: "(17) 16-32 s"      }
    };

    COUNTER_TT_PERCENTILE_IGNORE = 0;
}
