import "ydb/core/protos/counters.proto";

package NKikimr.NBlobStorageController;

option java_package = "ru.yandex.kikimr.proto";

option (TabletTypeName) = "BSController"; // Used as prefix for all counters

enum ESimpleCounters {
    COUNTER_RESPONSE_TIME_USEC = 0  [(CounterOpts) = {Name: "ResponseTimeMicrosec"}];
    COUNTER_GROUPS_WITH_SLOTS_ON_FAULTY_DISKS = 1 [(CounterOpts) = {Name: "GroupsWithSlotsOnFaultyDisks"}];
    COUNTER_SLOTS_ON_FAULTY_DISKS = 2 [(CounterOpts) = {Name: "SlotsOnFaultyDisks"}];
    COUNTER_BYTES_ON_FAULTY_DISKS = 3 [(CounterOpts) = {Name: "BytesOnFaultyDisks"}];
    COUNTER_PDISKS_WITHOUT_EXPECTED_SLOT_COUNT = 4 [(CounterOpts) = {Name: "PDisksWithoutExpectedSlotCount"}];
    COUNTER_TO_BE_REMOVED_DISKS = 5 [(CounterOpts) = {Name: "ToBeRemovedDisks"}];
    COUNTER_GROUPS_WITH_SLOTS_ON_TO_BE_REMOVED_DISKS = 6 [(CounterOpts) = {Name: "GroupsWithSlotsOnToBeRemovedDisks"}];
    COUNTER_SLOTS_ON_TO_BE_REMOVED_DISKS = 7 [(CounterOpts) = {Name: "SlotsOnToBeRemovedDisks"}];
    COUNTER_BYTES_ON_TO_BE_REMOVED_DISKS = 8 [(CounterOpts) = {Name: "BytesOnToBeRemovedDisks"}];
    COUNTER_PDISKS_WITHOUT_EXPECTED_SERIAL = 9 [(CounterOpts) = {Name: "PDisksWithoutExpectedSerial"}];
    COUNTER_DRIVE_SERIAL_FREE = 10 [(CounterOpts) = {Name: "DriveSerialFree"}];
    COUNTER_DRIVE_SERIAL_REMOVED_BY_DSTOOL = 11 [(CounterOpts) = {Name: "DriveSerialRemovedByDstool"}];
    COUNTER_DRIVE_SERIAL_ADDED_BY_DSTOOL = 12 [(CounterOpts) = {Name: "DriveSerialAddedByDstool"}];
    COUNTER_DISK_SCRUB_WAITING_FOR_START = 13 [(CounterOpts) = {Name: "DiskScrubWaitingForStart"}];
    COUNTER_DISK_SCRUB_RUNNING = 14 [(CounterOpts) = {Name: "DiskScrubRunning"}];
    COUNTER_DISK_SCRUB_IN_PROGRESS = 15 [(CounterOpts) = {Name: "DiskScrubInProgress"}];
    COUNTER_DISK_SCRUB_FINISHED_OK = 16 [(CounterOpts) = {Name: "DiskScrubFinishedOk"}];
    COUNTER_DISK_SCRUB_FINISHED_ERR = 17 [(CounterOpts) = {Name: "DiskScrubFinishedErr"}];
    COUNTER_DISK_SCRUB_CUR_DISKS = 18 [(CounterOpts) = {Name: "CurrentlyScrubbedDisks"}];
    COUNTER_DISK_SCRUB_CUR_GROUPS = 19 [(CounterOpts) = {Name: "CurrentlyScrubbedGroups"}];
    COUNTER_SELF_HEAL_UNREASSIGNABLE_GROUPS = 20 [(CounterOpts) = {Name: "SelfHealUnreassignableGroups"}];
}

enum ECumulativeCounters {
    COUNTER_REGISTER_NODE_COUNT = 0 [(CounterOpts) = {Name: "RegisterNodeCount"}];
    COUNTER_REGISTER_NODE_USEC  = 1 [(CounterOpts) = {Name: "RegisterNodeMicrosec"}];
    COUNTER_GET_GROUP_COUNT = 2 [(CounterOpts) = {Name: "GetGroupCount"}];
    COUNTER_GET_GROUP_USEC  = 3 [(CounterOpts) = {Name: "GetGroupMicrosec"}];
    COUNTER_SELECT_GROUPS_COUNT = 4 [(CounterOpts) = {Name: "SelectGroupsCount"}];
    COUNTER_SELECT_GROUPS_USEC  = 5 [(CounterOpts) = {Name: "SelectGroupsMicrosec"}];
    COUNTER_UPDATE_DISK_METRICS_COUNT = 6 [(CounterOpts) = {Name: "UpdateDiskMetricsCount"}];
    COUNTER_UPDATE_DISK_METRICS_USEC  = 7 [(CounterOpts) = {Name: "UpdateDiskMetricsMicrosec"}];
    COUNTER_NODE_REPORT_COUNT = 8 [(CounterOpts) = {Name: "NodeReportCount"}];
    COUNTER_NODE_REPORT_USEC  = 9 [(CounterOpts) = {Name: "NodeReportMicrosec"}];
    COUNTER_CONFIG_COUNT = 10 [(CounterOpts) = {Name: "ConfigCount"}];
    COUNTER_CONFIG_USEC  = 11 [(CounterOpts) = {Name: "ConfigMicrosec"}];
    COUNTER_REQUEST_INFO_COUNT = 12 [(CounterOpts) = {Name: "RequestInfoCount"}];
    COUNTER_REQUEST_INFO_USEC  = 13 [(CounterOpts) = {Name: "RequestInfoMicrosec"}];

    COUNTER_SELFHEAL_REASSIGN_BSC_REQUESTS = 14 [(CounterOpts) = {Name: "SelfHealReassignBscRequests"}];
    COUNTER_SELFHEAL_REASSIGN_BSC_OK = 15 [(CounterOpts) = {Name: "SelfHealReassignBscOk"}];
    COUNTER_SELFHEAL_REASSIGN_BSC_ERR = 16 [(CounterOpts) = {Name: "SelfHealReassignBscErr"}];

    COUNTER_CONFIGCMD_DEFINE_HOST_CONFIG_USEC = 17 [(CounterOpts) = {Name: "DefineHostConfig"}];
    COUNTER_CONFIGCMD_READ_HOST_CONFIG_USEC = 18 [(CounterOpts) = {Name: "ReadHostConfig"}];
    COUNTER_CONFIGCMD_DELETE_HOST_CONFIG_USEC = 19 [(CounterOpts) = {Name: "DeleteHostConfig"}];
    COUNTER_CONFIGCMD_DEFINE_BOX_USEC = 20 [(CounterOpts) = {Name: "DefineBox"}];
    COUNTER_CONFIGCMD_READ_BOX_USEC = 21 [(CounterOpts) = {Name: "ReadBox"}];
    COUNTER_CONFIGCMD_DELETE_BOX_USEC = 22 [(CounterOpts) = {Name: "DeleteBox"}];
    COUNTER_CONFIGCMD_DEFINE_STORAGE_POOL_USEC = 23 [(CounterOpts) = {Name: "DefineStoragePool"}];
    COUNTER_CONFIGCMD_READ_STORAGE_POOL_USEC = 24 [(CounterOpts) = {Name: "ReadStoragePool"}];
    COUNTER_CONFIGCMD_DELETE_STORAGE_POOL_USEC = 25 [(CounterOpts) = {Name: "DeleteStoragePool"}];
    COUNTER_CONFIGCMD_UPDATE_DRIVE_STATUS_USEC = 26 [(CounterOpts) = {Name: "UpdateDriveStatus"}];
    COUNTER_CONFIGCMD_READ_DRIVE_STATUS_USEC = 27 [(CounterOpts) = {Name: "ReadDriveStatus"}];
    COUNTER_CONFIGCMD_PROPOSE_STORAGE_POOLS_USEC = 28 [(CounterOpts) = {Name: "ProposeStoragePools"}];
    COUNTER_CONFIGCMD_QUERY_BASE_CONFIG_USEC = 29 [(CounterOpts) = {Name: "QueryBaseConfig"}];
    COUNTER_CONFIGCMD_MERGE_BOXES_USEC = 30 [(CounterOpts) = {Name: "MergeBoxes"}];
    COUNTER_CONFIGCMD_MOVE_GROUPS_USEC = 31 [(CounterOpts) = {Name: "MoveGroups"}];
    COUNTER_CONFIGCMD_ADD_MIGRATION_PLAN_USEC = 32 [(CounterOpts) = {Name: "AddMigrationPlan"}];
    COUNTER_CONFIGCMD_DELETE_MIGRATION_PLAN_USEC = 33 [(CounterOpts) = {Name: "DeleteMigrationPlan"}];
    COUNTER_CONFIGCMD_DECLARE_INTENT_USEC = 34 [(CounterOpts) = {Name: "DeclareIntent"}];
    COUNTER_CONFIGCMD_READ_INTENT_USEC = 35 [(CounterOpts) = {Name: "ReadIntent"}];
    COUNTER_CONFIGCMD_DROP_DONOR_DISK_USEC = 36 [(CounterOpts) = {Name: "DropDonorDisk"}];
    COUNTER_CONFIGCMD_REASSIGN_GROUP_DISK_USEC = 37 [(CounterOpts) = {Name: "ReassignGroupDisk"}];

    COUNTER_DISK_SCRUB_QUANTUM_FINISHED = 38 [(CounterOpts) = {Name: "QuantumFinished"}];

    COUNTER_CONFIGCMD_READ_SETTINGS_USEC = 39 [(CounterOpts) = {Name: "ReadSettings"}];
    COUNTER_CONFIGCMD_WIPE_VDISK_USEC = 40 [(CounterOpts) = {Name: "WipeVDisk"}];
    COUNTER_CONFIGCMD_SANITIZE_GROUP_USEC = 41 [(CounterOpts) = {Name: "SanitizeGroup"}];
    COUNTER_CONFIGCMD_ALLOCATE_VIRTUAL_GROUP_USEC = 42 [(CounterOpts) = {Name: "AllocateVirtualGroup"}];
    COUNTER_CONFIGCMD_DECOMMIT_GROUPS_USEC = 43 [(CounterOpts) = {Name: "DecommitGroups"}];
    COUNTER_CONFIGCMD_CANCEL_VIRTUAL_GROUP_USEC = 44 [(CounterOpts) = {Name: "CancelVirtualGroup"}];

    COUNTER_GROUP_LAYOUT_SANITIZER_BSC_REQUESTS = 45 [(CounterOpts) = {Name: "GroupLayoutSanitizerBscRequests"}];
    COUNTER_GROUP_LAYOUT_SANITIZER_BSC_OK = 46 [(CounterOpts) = {Name: "GroupLayoutSanitizerBscOk"}];
    COUNTER_GROUP_LAYOUT_SANITIZER_BSC_ERR = 47 [(CounterOpts) = {Name: "GroupLayoutSanitizerBscErr"}];
}

enum EPercentileCounters {
    option (GlobalCounterOpts) = {
        Ranges: { Value: 500         Name: "(1) < 500 us"      }
        Ranges: { Value: 1000        Name: "(2) 0.5-1 ms"      }
        Ranges: { Value: 2000        Name: "(3) 1-2 ms"        }
        Ranges: { Value: 4000        Name: "(4) 2-4 ms"        }
        Ranges: { Value: 8000        Name: "(5) 4-8 ms"        }
        Ranges: { Value: 16000       Name: "(6) 8-16 ms"       }
        Ranges: { Value: 32000       Name: "(7) 16-32 ms"      }
        Ranges: { Value: 64000       Name: "(8) 32-64 ms"      }
        Ranges: { Value: 128000      Name: "(9) 64-128 ms"     }
        Ranges: { Value: 256000      Name: "(10) 128-256 ms"   }
        Ranges: { Value: 512000      Name: "(11) 256-512 ms"   }
        Ranges: { Value: 1024000     Name: "(12) 512-1024 ms"  }
        Ranges: { Value: 2000000     Name: "(13) 1024-2000 ms" }
        Ranges: { Value: 4000000     Name: "(14) 2-4 s"        }
        Ranges: { Value: 8000000     Name: "(15) 4-8 s"        }
        Ranges: { Value: 16000000    Name: "(16) 8-16 s"       }
        Ranges: { Value: 32000000    Name: "(17) 16-32 s"      }
    };

    COUNTER_PERCENTILE_SELECT_GROUPS = 0 [(CounterOpts) = {
        Name: "SelectGroups"
    }];

    COUNTER_FAULTY_USETTLED_PDISKS = 1 [(CounterOpts) = {
        Name: "FaultyUnsettledPDisks"
        Integral: true
        Ranges { Value: 0     Name: "0"     }
        Ranges { Value: 10    Name: "10"    }
        Ranges { Value: 20    Name: "20"    }
        Ranges { Value: 30    Name: "30"    }
        Ranges { Value: 40    Name: "40"    }
        Ranges { Value: 50    Name: "50"    }
        Ranges { Value: 60    Name: "60"    }
        Ranges { Value: 120   Name: "120"   }
        Ranges { Value: 180   Name: "180"   }
        Ranges { Value: 240   Name: "240"   }
        Ranges { Value: 300   Name: "300"   }
        Ranges { Value: 360   Name: "360"   }
        Ranges { Value: 420   Name: "420"   }
        Ranges { Value: 480   Name: "480"   }
        Ranges { Value: 540   Name: "540"   }
        Ranges { Value: 600   Name: "600"   }
        Ranges { Value: 1200  Name: "1200"  }
        Ranges { Value: 1800  Name: "1800"  }
        Ranges { Value: 2400  Name: "2400"  }
        Ranges { Value: 3000  Name: "3000"  }
        Ranges { Value: 3600  Name: "3600"  }
        Ranges { Value: 5400  Name: "5400"  }
        Ranges { Value: 7200  Name: "7200"  }
        Ranges { Value: 9000  Name: "9000"  }
        Ranges { Value: 10800 Name: "10800" }
        Ranges { Value: 14400 Name: "14400" }
        Ranges { Value: 18000 Name: "18000" }
        Ranges { Value: 21600 Name: "21600" }
    }];

    COUNTER_TO_BE_REMOVED_USETTLED_PDISKS = 2 [(CounterOpts) = {
        Name: "ToBeRemovedUnsettledPDisks"
        Integral: true
        Ranges { Value: 0     Name: "0"     }
        Ranges { Value: 10    Name: "10"    }
        Ranges { Value: 20    Name: "20"    }
        Ranges { Value: 30    Name: "30"    }
        Ranges { Value: 40    Name: "40"    }
        Ranges { Value: 50    Name: "50"    }
        Ranges { Value: 60    Name: "60"    }
        Ranges { Value: 120   Name: "120"   }
        Ranges { Value: 180   Name: "180"   }
        Ranges { Value: 240   Name: "240"   }
        Ranges { Value: 300   Name: "300"   }
        Ranges { Value: 360   Name: "360"   }
        Ranges { Value: 420   Name: "420"   }
        Ranges { Value: 480   Name: "480"   }
        Ranges { Value: 540   Name: "540"   }
        Ranges { Value: 600   Name: "600"   }
        Ranges { Value: 1200  Name: "1200"  }
        Ranges { Value: 1800  Name: "1800"  }
        Ranges { Value: 2400  Name: "2400"  }
        Ranges { Value: 3000  Name: "3000"  }
        Ranges { Value: 3600  Name: "3600"  }
        Ranges { Value: 5400  Name: "5400"  }
        Ranges { Value: 7200  Name: "7200"  }
        Ranges { Value: 9000  Name: "9000"  }
        Ranges { Value: 10800 Name: "10800" }
        Ranges { Value: 14400 Name: "14400" }
        Ranges { Value: 18000 Name: "18000" }
        Ranges { Value: 21600 Name: "21600" }
    }];

    COUNTER_NUM_NOT_READY_VDISKS = 3 [(CounterOpts) = {
        Name: "NumNotReadyVDisks"
        Integral: true
        Ranges { Value: 0     Name: "0"     }
        Ranges { Value: 60    Name: "60"    }
        Ranges { Value: 300   Name: "300"   }
        Ranges { Value: 600   Name: "600"   }
        Ranges { Value: 1200  Name: "1200"  }
        Ranges { Value: 1800  Name: "1800"  }
        Ranges { Value: 2400  Name: "2400"  }
        Ranges { Value: 3000  Name: "3000"  }
        Ranges { Value: 3600  Name: "3600"  }
        Ranges { Value: 5400  Name: "5400"  }
        Ranges { Value: 7200  Name: "7200"  }
        Ranges { Value: 9000  Name: "9000"  }
        Ranges { Value: 10800 Name: "10800" }
        Ranges { Value: 14400 Name: "14400" }
        Ranges { Value: 18000 Name: "18000" }
        Ranges { Value: 21600 Name: "21600" }
    }];

    COUNTER_NUM_REPLICATING_VDISKS_ROT = 4 [(CounterOpts) = {
        Name: "NumReplicatingVDisks/ROT"
        Integral: true
        Ranges { Value: 0      Name: "0"      }
        Ranges { Value: 600    Name: "600"    }
        Ranges { Value: 1200   Name: "1200"   }
        Ranges { Value: 1800   Name: "1800"   }
        Ranges { Value: 2400   Name: "2400"   }
        Ranges { Value: 3000   Name: "3000"   }
        Ranges { Value: 3600   Name: "3600"   }
        Ranges { Value: 5400   Name: "5400"   }
        Ranges { Value: 7200   Name: "7200"   }
        Ranges { Value: 9000   Name: "9000"   }
        Ranges { Value: 10800  Name: "10800"  }
        Ranges { Value: 14400  Name: "14400"  }
        Ranges { Value: 18000  Name: "18000"  }
        Ranges { Value: 21600  Name: "21600"  }
        Ranges { Value: 43200  Name: "43200"  }
        Ranges { Value: 86400  Name: "86400"  }
        Ranges { Value: 172800 Name: "172800" }
        Ranges { Value: 259200 Name: "259200" }
    }];

    COUNTER_NUM_REPLICATING_VDISKS_OTHER = 5 [(CounterOpts) = {
        Name: "NumReplicatingVDisks/Other"
        Integral: true
        Ranges { Value: 0      Name: "0"      }
        Ranges { Value: 600    Name: "600"    }
        Ranges { Value: 1200   Name: "1200"   }
        Ranges { Value: 1800   Name: "1800"   }
        Ranges { Value: 2400   Name: "2400"   }
        Ranges { Value: 3000   Name: "3000"   }
        Ranges { Value: 3600   Name: "3600"   }
        Ranges { Value: 5400   Name: "5400"   }
        Ranges { Value: 7200   Name: "7200"   }
        Ranges { Value: 9000   Name: "9000"   }
        Ranges { Value: 10800  Name: "10800"  }
        Ranges { Value: 14400  Name: "14400"  }
        Ranges { Value: 18000  Name: "18000"  }
        Ranges { Value: 21600  Name: "21600"  }
        Ranges { Value: 43200  Name: "43200"  }
        Ranges { Value: 86400  Name: "86400"  }
        Ranges { Value: 172800 Name: "172800" }
        Ranges { Value: 259200 Name: "259200" }
    }];
}

enum ETxTypes {
    TXTYPE_INIT_SCHEME = 0 [(TxTypeOpts) = {Name: "TTxInitScheme"}];
    TXTYPE_MIGRATE = 1 [(TxTypeOpts) = {Name: "TTxMigrate"}];
    TXTYPE_LOAD_EVERYTHING = 2 [(TxTypeOpts) = {Name: "TTxLoadEverything"}];
    TXTYPE_MON_EVENT_OPERATION_LOG = 3 [(TxTypeOpts) = {Name: "TTxMonEvent_OperationLog"}];
    TXTYPE_MON_EVENT_SET_DOWN = 4 [(TxTypeOpts) = {Name: "TTxMonEvent_SetDown"}];
    TXTYPE_MON_EVENT_GET_DOWN = 5 [(TxTypeOpts) = {Name: "TTxMonEvent_GetDown"}];
    TXTYPE_UPDATE_DISK_METRICS = 6 [(TxTypeOpts) = {Name: "TTxUpdateDiskMetrics"}];
    TXTYPE_UPDATE_GROUP_LATENCIES = 7 [(TxTypeOpts) = {Name: "TTxUpdateGroupLatencies"}];
    TXTYPE_GROUP_RECONFIGURE_WIPE = 8 [(TxTypeOpts) = {Name: "TTxGroupReconfigureWipe"}];
    TXTYPE_NODE_REPORT = 9 [(TxTypeOpts) = {Name: "TTxNodeReport"}];
    TXTYPE_UPDATE_SEEN_OPERATIONAL = 10 [(TxTypeOpts) = {Name: "TTxUpdateSeenOperational"}];
    TXTYPE_CONFIG_CMD = 11 [(TxTypeOpts) = {Name: "TTxConfigCmd"}];
    TXTYPE_PROPOSE_GROUP_KEY = 12 [(TxTypeOpts) = {Name: "TTxProposeGroupKey"}];
    TXTYPE_REGISTER_NODE = 13 [(TxTypeOpts) = {Name: "TTxRegisterNode"}];
    TXTYPE_GET_GROUP = 14 [(TxTypeOpts) = {Name: "TTxGetGroup"}];
    TXTYPE_REQUEST_CONTROLLER_INFO = 15 [(TxTypeOpts) = {Name: "TTxRequestControllerInfo"}];
    TXTYPE_SELECT_GROUPS = 16 [(TxTypeOpts) = {Name: "TTxSelectGroups"}];
    TXTYPE_MON_EVENT_HEALTH_EVENTS = 17 [(TxTypeOpts) = {Name: "TTxMonEvent_HealthEvents"}];
    TXTYPE_DROP_DONOR = 18 [(TxTypeOpts) = {Name: "TTxDropDonor"}];
    TXTYPE_SCRUB_START = 19 [(TxTypeOpts) = {Name: "TTxScrubStart"}];
    TXTYPE_SCRUB_QUANTUM_FINISHED = 20 [(TxTypeOpts) = {Name: "TTxScrubQuantumFinished"}];
    TXTYPE_UPDATE_LAST_SEEN_READY = 21 [(TxTypeOpts) = {Name: "TTxUpdateLastSeenReady"}];
    TXTYPE_UPDATE_NODE_DRIVES = 22 [(TxTypeOpts) = {Name: "TTxUpdateNodeDrives"}];
    TXTYPE_MON_EVENT_OPERATION_LOG_ENTRY = 23 [(TxTypeOpts) = {Name: "TTxMonEvent_OperationLogEntry"}];
    TXTYPE_UPDATE_NODE_DISCONNECT_TIMESTAMP = 24 [(TxTypeOpts) = {Name: "TTxUpdateNodeDisconnectTimestamp"}];
    TXTYPE_GROUP_METRICS_EXCHANGE = 25 [(TxTypeOpts) = {Name: "TTxGroupMetricsExchange"}];
    TXTYPE_DECOMMIT_GROUP = 26 [(TxTypeOpts) = {Name: "TTxDecommitGroup"}];
    TXTYPE_UPDATE_GROUP = 27 [(TxTypeOpts) = {Name: "TTxUpdateGroup"}];
    TXTYPE_DELETE_BLOB_DEPOT = 28 [(TxTypeOpts) = {Name: "TTxDeleteBlobDepot"}];
    TXTYPE_COMMIT_CONFIG = 29 [(TxTypeOpts) = {Name: "TTxCommitConfig"}];
    TXTYPE_UPDATE_SHRED = 30 [(TxTypeOpts) = {Name: "TTxUpdateShred"}];
}
