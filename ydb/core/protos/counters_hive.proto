import "ydb/core/protos/counters.proto";

package NKikimr.NHive;

option java_package = "ru.yandex.kikimr.proto";

option (TabletTypeName) = "Hive"; // Used as prefix for all counters

enum ESimpleCounters {
    COUNTER_TABLETS_TOTAL = 0   [(CounterOpts) = {Name: "TabletsTotal"}];
    COUNTER_TABLETS_ALIVE = 1   [(CounterOpts) = {Name: "TabletsAlive"}];
    COUNTER_BOOTQUEUE_SIZE = 2   [(CounterOpts) = {Name: "BootQueueSize"}];
    COUNTER_STATE_DONE = 3   [(CounterOpts) = {Name: "StateDone"}];
    COUNTER_RESPONSE_TIME_USEC = 4 [(CounterOpts) = {Name: "ResponseTimeMicrosec"}];
    COUNTER_METRICS_COUNTER = 5 [(CounterOpts) = {Name: "MetricsCounter"}];
    COUNTER_METRICS_CPU = 6 [(CounterOpts) = {Name: "MetricsCPU"}];
    COUNTER_METRICS_MEMORY = 7 [(CounterOpts) = {Name: "MetricsMemory"}];
    COUNTER_METRICS_NETWORK = 8 [(CounterOpts) = {Name: "MetricsNetwork"}];
    COUNTER_BALANCE_SCATTER = 9 [(CounterOpts) = {Name: "BalanceScatter"}];
    COUNTER_WAITQUEUE_SIZE = 10 [(CounterOpts) = {Name: "WaitQueueSize"}];
    COUNTER_BALANCE_USAGE_MIN = 11 [(CounterOpts) = {Name: "BalanceUsageMin"}];
    COUNTER_BALANCE_USAGE_MAX = 12 [(CounterOpts) = {Name: "BalanceUsageMax"}];
    COUNTER_SEQUENCE_FREE = 13 [(CounterOpts) = {Name: "SequenceFree"}];
    COUNTER_SEQUENCE_ALLOCATED = 14 [(CounterOpts) = {Name: "SequenceAllocated"}];
    COUNTER_EVENTQUEUE_SIZE = 15 [(CounterOpts) = {Name: "EventQueueSize"}];
    COUNTER_NODES_TOTAL = 16 [(CounterOpts) = {Name: "NodesTotal"}];
    COUNTER_NODES_CONNECTED = 17 [(CounterOpts) = {Name: "NodesConnected"}];
    COUNTER_BALANCE_OBJECT_IMBALANCE = 18 [(CounterOpts) = {Name: "BalanceObjectImbalance"}];
    COUNTER_IMBALANCED_OBJECTS = 19 [(CounterOpts) = {Name: "ImbalancedObjects"}];
    COUNTER_WORST_OBJECT_VARIANCE = 20 [(CounterOpts) = {Name: "WorstObjectVariance"}];
    COUNTER_STORAGE_SCATTER = 21 [(CounterOpts) = {Name: "StorageScatter"}];
}

enum ECumulativeCounters {
    COUNTER_BOOTQUEUE_PROCESSED = 0 [(CounterOpts) = {Name: "BootQueueProcessed"}];
    COUNTER_BOOTQUEUE_TIME = 1 [(CounterOpts) = {Name: "BootQueueTime"}];
    COUNTER_AUTOKICK_EXECUTED = 2 [(CounterOpts) = {Name: "AutokickExecuted"}]; // obsolete
    COUNTER_AUTOKICK_FAILED = 3 [(CounterOpts) = {Name: "AutokickFailed"}]; // obsolete
    COUNTER_BALANCER_EXECUTED = 4 [(CounterOpts) = {Name: "BalancerExecuted"}];
    COUNTER_BALANCER_FAILED = 5 [(CounterOpts) = {Name: "BalancerFailed"}];
    COUNTER_DRAIN_EXECUTED = 6 [(CounterOpts) = {Name: "DrainExecuted"}];
    COUNTER_DRAIN_FAILED = 7 [(CounterOpts) = {Name: "DrainFailed"}];
    COUNTER_FILL_EXECUTED = 8 [(CounterOpts) = {Name: "FillExecuted"}];
    COUNTER_TABLETS_MOVED = 9 [(CounterOpts) = {Name: "TabletsMoved"}];
    COUNTER_SUGGESTED_SCALE_UP = 10 [(CounterOpts) = {Name: "SuggestedScaleUp"}];
    COUNTER_SUGGESTED_SCALE_DOWN = 11 [(CounterOpts) = {Name: "SuggestedScaleDown"}];
    COUNTER_STORAGE_BALANCER_EXECUTED = 12 [(CounterOpts) = {Name: "StorageBalancerExecuted"}];
    COUNTER_TABLETS_STORAGE_REASSIGNED = 13 [(CounterOpts) = {Name: "TabletsStorageReassigned"}];
}

enum EPercentileCounters {
    option (GlobalCounterOpts) = {
        Ranges { Value: 0      Name: "0 ms"      }
        Ranges { Value: 1      Name: "1 ms"      }
    };

    COUNTER_PERCENTILE_IGNORE = 0;

    COUNTER_NODE_USAGE = 1 [(CounterOpts) = {
        Name: "NodeUsage",
        Integral: true,
        Ranges: { Value: 30    Name: "30%"       },
        Ranges: { Value: 35    Name: "35%"       },
        Ranges: { Value: 40    Name: "40%"       },
        Ranges: { Value: 45    Name: "45%"       },
        Ranges: { Value: 50    Name: "50%"       },
        Ranges: { Value: 55    Name: "55%"       },
        Ranges: { Value: 60    Name: "60%"       },
        Ranges: { Value: 65    Name: "65%"       },
        Ranges: { Value: 70    Name: "70%"       },
        Ranges: { Value: 75    Name: "75%"       },
        Ranges: { Value: 80    Name: "80%"       },
        Ranges: { Value: 85    Name: "85%"       },
        Ranges: { Value: 90    Name: "90%"       },
        Ranges: { Value: 95    Name: "95%"       },
        Ranges: { Value: 100   Name: "100%"      },
    }];
}

enum ETxTypes {
    TXTYPE_CREATE_TABLET = 0                              [(TxTypeOpts) = {Name: "TxCreateTablet"}];
    TXTYPE_SYNC_TABLETS = 1                               [(TxTypeOpts) = {Name: "TxSyncTablets"}];
    TXTYPE_KILL_TABLET = 2                                [(TxTypeOpts) = {Name: "TxKillTablet"}];
    TXTYPE_UPDATE_TABLET_GROUP = 3                        [(TxTypeOpts) = {Name: "TxUpdateTabletGroup"}];
    TXTYPE_UPDATE_TABLET_STATUS = 4                       [(TxTypeOpts) = {Name: "TxUpdateTabletStatus"}];
    TXTYPE_REGISTER_NODE = 5                              [(TxTypeOpts) = {Name: "TxRegisterNode"}];
    TXTYPE_KILL_NODE = 6                                  [(TxTypeOpts) = {Name: "TxKillNode"}];
    TXTYPE_ADOPT_TABLET = 7                               [(TxTypeOpts) = {Name: "TxAdoptTablet"}];
    TXTYPE_UPDATE_TABLET_METRIC = 8                       [(TxTypeOpts) = {Name: "TxUpdateTabletMetric"}];
    TXTYPE_UPDATE_TABLET_GROUPS = 9                       [(TxTypeOpts) = {Name: "TxUpdateTabletGroups"}];
    TXTYPE_UNLOCK_TABLET_EXECUTION = 10                   [(TxTypeOpts) = {Name: "TxUnlockTabletExecution"}];
    TXTYPE_REASSIGN_GROUPS = 11                           [(TxTypeOpts) = {Name: "TxReassignGroups"}];
    TXTYPE_LOCK_TABLET_EXECUTION = 12                     [(TxTypeOpts) = {Name: "TxLockTabletExecution"}];
    TXTYPE_LOAD_EVERYTHING = 13                           [(TxTypeOpts) = {Name: "TxLoadEverything"}];
    TXTYPE_INIT_SCHEME = 14                               [(TxTypeOpts) = {Name: "TxInitScheme"}];
    TXTYPE_DELETE_TABLET_RESULT = 15                      [(TxTypeOpts) = {Name: "TxDeleteTabletResult"}];
    TXTYPE_DELETE_TABLET = 16                             [(TxTypeOpts) = {Name: "TxDeleteTablet"}];
    TXTYPE_CUT_TABLET_HISTORY = 17                        [(TxTypeOpts) = {Name: "TxCutTabletHistory"}];
    TXTYPE_BLOCK_STORAGE_RESULT = 18                      [(TxTypeOpts) = {Name: "TxBlockStorageResult"}];
    TXTYPE_REQUEST_TABLET_SEQUENCE = 19                   [(TxTypeOpts) = {Name: "TxRequestTabletSequence"}];
    TXTYPE_RESPONSE_TABLET_SEQUENCE = 20                  [(TxTypeOpts) = {Name: "TxResponseTabletSequence"}];
    TXTYPE_PROCESS_PENDING_OPERATIONS = 21                [(TxTypeOpts) = {Name: "TxProcessPendingOperations"}];
    TXTYPE_MON_DB_STATE = 22                              [(TxTypeOpts) = {Name: "TxMonDbState"}];
    TXTYPE_MON_MEM_STATE = 23                             [(TxTypeOpts) = {Name: "TxMonMemState"}];
    TXTYPE_MON_RESOURCES = 24                             [(TxTypeOpts) = {Name: "TxMonResources"}];
    TXTYPE_MON_SETTINGS = 25                              [(TxTypeOpts) = {Name: "TxMonSettings"}];
    TXTYPE_MON_LANDING = 26                               [(TxTypeOpts) = {Name: "TxMonLanding"}];
    TXTYPE_MON_LANDING_DATA = 27                          [(TxTypeOpts) = {Name: "TxMonLandingData"}];
    TXTYPE_MON_SET_DOWN = 28                              [(TxTypeOpts) = {Name: "TxMonSetDown"}];
    TXTYPE_MON_SET_FREEZE = 29                            [(TxTypeOpts) = {Name: "TxMonSetFreeze"}];
    TXTYPE_MON_KICK_NODE = 30                             [(TxTypeOpts) = {Name: "TxMonKickNode"}];
    TXTYPE_MON_REBALANCE = 31                             [(TxTypeOpts) = {Name: "TxMonRebalance"}];
    TXTYPE_MON_REASSIGN_TABLET = 32                       [(TxTypeOpts) = {Name: "TxMonReassignTablet"}];
    TXTYPE_MON_RESET_TABLET = 33                          [(TxTypeOpts) = {Name: "TxMonResetTablet"}];
    TXTYPE_MON_GROUPS = 34                                [(TxTypeOpts) = {Name: "TxMonGroups"}];
    TXTYPE_MON_NOT_READY = 35                             [(TxTypeOpts) = {Name: "TxMonNotReady"}];
    TXTYPE_MON_STORAGE = 36                               [(TxTypeOpts) = {Name: "TxMonStorage"}];
    TXTYPE_PROCESS_BOOT_QUEUE = 37                        [(TxTypeOpts) = {Name: "TxProcessBootQueue"}];
    TXTYPE_STATUS = 38                                    [(TxTypeOpts) = {Name: "TxStatus"}];
    TXTYPE_DISCONNECT_NODE = 39                           [(TxTypeOpts) = {Name: "TxDisconnectNode"}];
    TXTYPE_MON_FIND_TABLET = 40                           [(TxTypeOpts) = {Name: "TxMonFindTablet"}];
    TXTYPE_UPDATE_DOMAIN = 41                             [(TxTypeOpts) = {Name: "TxUpdateDomain"}];
    TXTYPE_MON_STOP_TABLET = 42                           [(TxTypeOpts) = {Name: "TxMonStopTablet"}];
    TXTYPE_MON_RESUME_TABLET = 43                         [(TxTypeOpts) = {Name: "TxMonResumeTablet"}];
    TXTYPE_CONFIGURE_SUBDOMAIN = 44                       [(TxTypeOpts) = {Name: "TxConfigureSubdomain"}];
    TXTYPE_MON_INIT_MIGRATION = 45                        [(TxTypeOpts) = {Name: "TxMonInitMigration"}];
    TXTYPE_MON_QUERY_MIGRATION = 46                       [(TxTypeOpts) = {Name: "TxMonQueryMigration"}];
    TXTYPE_SEIZE_TABLETS = 47                             [(TxTypeOpts) = {Name: "TxSeizeTablets"}];
    TXTYPE_SEIZE_TABLETS_REPLY = 48                       [(TxTypeOpts) = {Name: "TxSeizeTabletsReply"}];
    TXTYPE_RELEASE_TABLETS = 49                           [(TxTypeOpts) = {Name: "TxReleaseTablets"}];
    TXTYPE_RELEASE_TABLETS_REPLY = 50                     [(TxTypeOpts) = {Name: "TxReleaseTabletsReply"}];
    TXTYPE_MON_DRAIN_NODE = 51                            [(TxTypeOpts) = {Name: "TxMonDrainNode"}];
    TXTYPE_MON_TABLET_INFO = 52                           [(TxTypeOpts) = {Name: "TxMonTabletInfo"}];
    TXTYPE_START_TABLET = 53                              [(TxTypeOpts) = {Name: "TxStartTablet"}];
    TXTYPE_STOP_TABLET = 54                               [(TxTypeOpts) = {Name: "TxStopTablet"}];
    TXTYPE_RESUME_TABLET = 55                             [(TxTypeOpts) = {Name: "TxResumeTablet"}];
    TXTYPE_RESTART_TABLET = 56                            [(TxTypeOpts) = {Name: "TxRestartTablet"}];
    TXTYPE_MON_MOVE_TABLET = 57                           [(TxTypeOpts) = {Name: "TxMonMoveTablet"}];
    TXTYPE_TABLET_OWNERS_REPLY = 58                       [(TxTypeOpts) = {Name: "TxTabletOwnersReply"}];
    TXTYPE_REQUEST_TABLET_OWNERS = 59                     [(TxTypeOpts) = {Name: "TxRequestTabletOwners"}];
    TXTYPE_REASSIGN_GROUPS_ON_DECOMMIT = 60               [(TxTypeOpts) = {Name: "TxReassignGroupsOnDecommit"}];
    TXTYPE_UPDATE_TABLETS_OBJECT = 61                     [(TxTypeOpts) = {Name: "TxUpdateTabletsObject"}];
    TXTYPE_MON_REBALANCE_FROM_SCRATCH = 62                [(TxTypeOpts) = {Name: "TxMonRebalanceFromScratch"}];
    TXTYPE_MON_OBJECT_STATS = 63                          [(TxTypeOpts) = {Name: "TxMonObjectStats"}];
    TXTYPE_MON_SUBACTORS = 64                             [(TxTypeOpts) = {Name: "TxMonSubactors"}];
    TXTYPE_MON_TABLET_AVAILABILITY = 65                   [(TxTypeOpts) = {Name: "TxMonTabletAvailability"}];
}
