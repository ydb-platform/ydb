option cc_enable_arenas = true;

import "ydb/core/protos/data_events.proto";

package NKikimrDataShardLoad;
option java_package = "ru.yandex.kikimr.proto";

message TEvYCSBTestLoadRequest {
    message TLoadStop {
        optional uint64 Tag = 1;
        optional bool RemoveAllTags = 2;
    }

    message TTargetShard {
        optional uint64 TabletId = 1;
        optional uint64 TableId = 2;
        optional string WorkingDir = 3;
        optional string TableName = 4;
    }

    message TUpdateStart {
        optional uint64 RowCount = 1;
        optional uint32 Inflight = 2;

        // Key is a string like sprintf("user%.19lu", keyNum)
        optional uint64 KeyFrom = 3 [default = 0];

        // special mode: actor writes RowCount rows again and again
        optional bool Infinite = 4;

        // only for bulk upsert
        optional uint32 BatchSize = 5 [default = 1];
    }

    message TReadStart {
        // defines dataset size, normally must be withing 2 GiB
        // also used for full scan
        optional uint64 RowCount = 1;

        // number of random rows to be read (point reads)
        optional uint64 ReadCount = 2;

        // note that KQP supports only 1 inflight
        repeated uint32 Inflights = 3;

        // not used in KQP
        repeated uint32 Chunks = 4;

        // Specifies the format for result data in TEvReadResult
        optional NKikimrDataEvents.EDataFormat ResultFormat = 5;

        // special mode: actor reads RowCount rows again and again
        // implies no full scan and only first inflight will be used
        optional bool Infinite = 6;

        optional bool NoFullScan = 7;
    }

    message TTableSetup {
        optional string WorkingDir = 1; // i.e. /Root/db1
        optional string TableName = 2;

        // if DropTable specified - then drop and create
        optional bool DropTable = 3;

        optional bool CreateTable = 4;

        // makes sence only with DropTable or CreateTable
        // implicitely: split by load is false, split by size is true
        optional uint64 MinParts = 5 [default = 1];
        optional uint64 MaxParts = 6 [default = 1];
        optional uint64 MaxPartSizeMb = 7 [default = 2000];

        optional bool SkipWarmup = 8;
    }

    optional uint64 Tag = 1;

    // normally should be used by ut only
    optional bool NotifyWhenFinished = 2;

    optional TTableSetup TableSetup = 3;
    optional TTargetShard TargetShard = 4;

    oneof Command {
        TLoadStop LoadStop = 20;
        TUpdateStart UpsertBulkStart = 21;
        TUpdateStart UpsertLocalMkqlStart = 22;
        TUpdateStart UpsertKqpStart = 23;
        TUpdateStart UpsertProposeStart = 24;

        TReadStart ReadIteratorStart = 25;
        TReadStart ReadKqpStart = 26;
    }
}

message TEvTestLoadResponse {
    optional uint32 Status = 1; // EResponseStatus from ydb/core/client/base/msgbus.h
    optional string ErrorReason = 2;
    optional uint64 Cookie = 3;

    // if load acter has been started, then it is the assigned tag
    optional uint64 Tag = 4;
}

message TLoadReport {
    optional uint64 Tag = 1;

    optional uint64 DurationMs = 2;
    optional uint64 OperationsOK = 3;
    optional uint64 OperationsError = 4;

    // info might contain result for multiple subtests
    optional string Info = 5;
    optional uint64 SubtestCount = 6;
    optional string PrefixInfo = 7;
}

message TEvTestLoadInfoRequest {
}

// collector puts Reports sorted by Tag
message TEvTestLoadInfoResponse {
    repeated TLoadReport Reports = 1;
}

message TEvTestLoadFinished {
    optional uint64 Tag = 1;
    optional TLoadReport Report = 2;
    optional string ErrorReason = 3;
}
