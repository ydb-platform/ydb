syntax = "proto3";

package NKikimrClient;

import "ydb/core/protos/msgbus.proto";
import "ydb/core/protos/msgbus_kv.proto";
import "ydb/core/protos/msgbus_pq.proto";

service TGRpcServer {

    // TODO
    // * Rename Request to MiniKQLRequest ???


    /////////////////////////////////////////////////////////////////////////////////////////////////
    // KIKIMR CLIENT INTERFACE
    /////////////////////////////////////////////////////////////////////////////////////////////////

    // MiniKQL request (DML)
    rpc Request(TRequest) returns (TResponse);

    // DML transactions
    rpc SchemeOperation(TSchemeOperation) returns (TResponse);
    // status polling for scheme transactions
    rpc SchemeOperationStatus(TSchemeOperationStatus) returns (TResponse);
    // describe
    rpc SchemeDescribe(TSchemeDescribe) returns (TResponse);
    // whoami
    rpc WhoAmI(TWhoAmI) returns (TResponse);
    // login
    rpc LoginRequest(TLoginRequest) returns (TResponse);

    /////////////////////////////////////////////////////////////////////////////////////////////////
    // CHOOSE PROXY INTERFACE
    /////////////////////////////////////////////////////////////////////////////////////////////////
    rpc ChooseProxy(TChooseProxyRequest) returns (TResponse);

    /////////////////////////////////////////////////////////////////////////////////////////////////
    // PERSISTENT QUEUE CLIENT INTERFACE
    /////////////////////////////////////////////////////////////////////////////////////////////////

    rpc PersQueueRequest(TPersQueueRequest) returns (TResponse);

    /////////////////////////////////////////////////////////////////////////////////////////////////
    // ADMIN INTERNAL INTERFACE
    /////////////////////////////////////////////////////////////////////////////////////////////////
    rpc SchemeInitRoot(TSchemeInitRoot) returns (TResponse);

    rpc ResolveNode(TResolveNodeRequest) returns (TResponse);
    rpc FillNode(TFillNodeRequest) returns (TResponse);
    rpc DrainNode(TDrainNodeRequest) returns (TResponse);

    // Blob storage configuration manipulation/query interface
    rpc BlobStorageConfig(TBlobStorageConfigRequest) returns (TResponse);

    /////////////////////////////////////////////////////////////////////////////////////////////////
    // KV-TABLET INTERNAL INTERFACE
    /////////////////////////////////////////////////////////////////////////////////////////////////
    rpc HiveCreateTablet(THiveCreateTablet) returns (TResponse);
    rpc LocalEnumerateTablets(TLocalEnumerateTablets) returns (TResponse);
    rpc KeyValue(TKeyValueRequest) returns (TResponse);
    rpc TestShardControl(TTestShardControlRequest) returns (TResponse);

    /////////////////////////////////////////////////////////////////////////////////////////////////
    // DYNAMIC NODES INTERNAL INTERFACE
    /////////////////////////////////////////////////////////////////////////////////////////////////
    rpc RegisterNode(TNodeRegistrationRequest) returns (TNodeRegistrationResponse);

    /////////////////////////////////////////////////////////////////////////////////////////////////
    // CMS INTERFACE
    /////////////////////////////////////////////////////////////////////////////////////////////////
    rpc CmsRequest(TCmsRequest) returns (TCmsResponse);

    /////////////////////////////////////////////////////////////////////////////////////////////////
    // SQS INTERFACE
    /////////////////////////////////////////////////////////////////////////////////////////////////
    rpc SqsRequest(TSqsRequest) returns (TSqsResponse);

    /////////////////////////////////////////////////////////////////////////////////////////////////
    // CONSOLE INTERFACE
    /////////////////////////////////////////////////////////////////////////////////////////////////
    rpc ConsoleRequest(TConsoleRequest) returns (TConsoleResponse);

    /////////////////////////////////////////////////////////////////////////////////////////////////
    // INTROSPECTION
    /////////////////////////////////////////////////////////////////////////////////////////////////
    rpc LocalMKQL(TLocalMKQL) returns (TResponse);
    rpc LocalSchemeTx(TLocalSchemeTx) returns (TResponse);
    rpc TabletKillRequest(TTabletKillRequest) returns (TResponse);
    rpc InterconnectDebug(TInterconnectDebug) returns (TResponse);

    // [DEPRECATED]
    //rpc Navigate(TSchemeNavigate) returns (TResponse);

    /////////////////////////////////////////////////////////////////////////////////////////////////
    // MONITORING
    /////////////////////////////////////////////////////////////////////////////////////////////////
    rpc TabletStateRequest(TTabletStateRequest) returns (TResponse);

    /////////////////////////////////////////////////////////////////////////////////////////////////
    // BLOBSTORAGE LOAD TEST
    /////////////////////////////////////////////////////////////////////////////////////////////////
    rpc BlobStorageLoadRequest(TBsTestLoadRequest) returns (TResponse);
    rpc BlobStorageGetRequest(TBsGetRequest) returns (TResponse);

    /////////////////////////////////////////////////////////////////////////////////////////////////
    // HTTP INTERFACE
    /////////////////////////////////////////////////////////////////////////////////////////////////
    rpc DbSchema(TJSON) returns (TJSON);
    rpc DbOperation(TJSON) returns (TJSON);
    rpc DbBatch(TJSON) returns (TJSON);
}
