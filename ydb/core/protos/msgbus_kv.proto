package NKikimrClient;
option java_package = "ru.yandex.kikimr.proto";


message TKeyValueRequest {
    enum EStorageChannel {
        MAIN = 0;
        EXTRA = 1;
        EXTRA2 = 2;
        EXTRA3 = 3;
        EXTRA4 = 4;
        EXTRA5 = 5;
        EXTRA6 = 6;
        EXTRA7 = 7;
        EXTRA8 = 8;
        EXTRA9 = 9;

        INLINE = 65535;
    }
    enum EPriority {
        REALTIME = 0;
        BACKGROUND = 1;
    }
    enum ETactic {
        MAX_THROUGHPUT = 0;
        MIN_LATENCY = 1;
    }

    message TKeyRange {
        optional bytes From = 1; // optional
        optional bool IncludeFrom = 2; // default = false
        optional bytes To = 3; // optional
        optional bool IncludeTo = 4; // default = false
    }

    message TCmdDeleteRange {
        optional TKeyRange Range = 1; // mandatory
    }
    message TCmdIncrementGeneration {
    }
    message TCmdRead {
        optional bytes Key = 1; // mandatory
        optional uint64 Offset = 2; // (default = 0)
        optional uint64 Size = 3; // (default = 0) - full size
        optional EPriority Priority = 4; // (default = REALTIME)
    }
    message TCmdReadRange {
        optional TKeyRange Range = 1; // mandatory
        optional bool IncludeData = 2; // (default = false)
        optional uint64 LimitBytes = 3; // optional, overrides the default one only with a smaller value
        optional EPriority Priority = 4; // (default = REALTIME)
    }
    message TCmdWrite {
        optional bytes Key = 1; // mandatory
        oneof Data { // mandatory
            bytes Value = 2;
            uint32 PayloadId = 8;
        }
        optional EStorageChannel StorageChannel = 3; // (default = MAIN)
        optional EPriority Priority = 4; // (default = REALTIME)
        optional bytes KeyToCache = 5; // used in PQ
        optional ETactic Tactic = 6 [default = MAX_THROUGHPUT]; // mandatory, used for non-inline puts only
        repeated EStorageChannel AutoselectChannel = 7; // when filled, channel is selected automatically from this set
    }
    message TCmdRename {
        optional bytes OldKey = 1; // mandatory
        optional bytes NewKey = 2; // mandatory
    }
    message TCmdCopyRange {
        optional TKeyRange Range = 1; // optional; if not set, whole database is copied
        optional bytes PrefixToAdd = 2; // mandatory
        optional bytes PrefixToRemove = 3; // optional; if set, also acts as filter
    }
    message TCmdConcat {
        repeated bytes InputKeys = 1; // optional
        optional bytes OutputKey = 2; // mandatory
        optional bool KeepInputs = 3; // optional (default = false)
    }
    message TCmdGetStatus {
        optional EStorageChannel StorageChannel = 1; // (default = MAIN)
    }
    message TCmdTrimLeakedBlobs {
        optional uint32 MaxItemsToTrim = 1;
    }
    message TCmdSetExecutorFastLogPolicy {
        optional bool IsAllowed = 1 [default = false]; // mandatory
    }

    optional uint64 TabletId = 1; // mandatory
    optional uint64 Generation = 2; // optional, no generation check is done if missing
    optional uint64 Cookie = 3;
    optional bool UsePayloadInResponse = 16; // use PayloadId instead of Value in TKeyValueResponse
    repeated TCmdDeleteRange CmdDeleteRange = 4;
    optional TCmdIncrementGeneration CmdIncrementGeneration = 5; // conflicts with any other Cmd, must be the only one
    repeated TCmdRead CmdRead = 6;
    repeated TCmdReadRange CmdReadRange = 7;
    repeated TCmdWrite CmdWrite = 8;
    repeated TCmdRename CmdRename = 9;
    repeated TCmdCopyRange CmdCopyRange = 11;
    repeated TCmdConcat CmdConcat = 12;
    repeated TCmdGetStatus CmdGetStatus = 13;
    optional TCmdTrimLeakedBlobs CmdTrimLeakedBlobs = 14;
    optional TCmdSetExecutorFastLogPolicy CmdSetExecutorFastLogPolicy = 15;

    optional uint64 DeadlineInstantMs = 10;
}

// must start from TResponseBase
message TKeyValueResponse {
    optional uint32 Status = 1; // EResponseStatus from ydb/core/client/base/msgbus.h
    optional bytes ProtobufError = 400;

    message TKeyValuePair {
        optional bytes Key = 1;
        oneof Data {
            bytes Value = 2;
            uint32 PayloadId = 7;
        }
        optional uint32 ValueSize = 3;
        optional uint64 CreationUnixTime = 4;
        optional TKeyValueRequest.EStorageChannel StorageChannel = 5; // Returns the _actual_ storage channel
        optional uint32 Status = 6; // EReplyStatus from ydb/core/protos/base.proto
    }

    message TDeleteRangeResult {
        optional uint32 Status = 1; // EReplyStatus from ydb/core/protos/base.proto
    }
    message TIncrementGenerationResult {
        optional uint32 Status = 1; // EReplyStatus from ydb/core/protos/base.proto
        optional uint64 Generation = 2;
    }
    message TReadResult {
        optional uint32 Status = 1; // EReplyStatus from ydb/core/protos/base.proto
        oneof Data {
            bytes Value = 2;
            uint32 PayloadId = 4;
        }
        optional string Message = 3;
    }
    message TReadRangeResult {
        // may contain partial (truncated) result if Status == OVERRUN
        optional uint32 Status = 1; // EReplyStatus from ydb/core/protos/base.proto
        repeated TKeyValuePair Pair = 2;
    }
    message TWriteResult {
        optional uint32 Status = 1; // EReplyStatus from ydb/core/protos/base.proto
        optional uint32 StatusFlags = 2;  // A set of flags from EStatusFlags ydb/core/protos/blobstorage.proto
    }
    message TRenameResult {
        optional uint32 Status = 1; // EReplyStatus from ydb/core/protos/base.proto
    }
    message TCopyRangeResult {
        optional uint32 Status = 1; // EReplyStatus from ydb/core/protos/base.proto
    }
    message TConcatResult {
        optional uint32 Status = 1; // EReplyStatus from ydb/core/protos/base.proto
    }
    message TGetStatusResult {
        optional uint32 Status = 1; // EReplyStatus from ydb/core/protos/base.proto
        optional TKeyValueRequest.EStorageChannel StorageChannel = 2;
        optional uint32 StatusFlags = 3; // A set of flags from EStatusFlags ydb/core/protos/blobstorage.proto
    }
    message TTrimLeakedBlobsResult {
        optional uint32 Status = 1; // EReplyStatus from ydb/core/protos/base.proto
        optional uint32 NumItemsTrimmed = 2;
        optional uint32 NumItemsLeft = 3;
    }
    message TSetExecutorFastLogPolicyResult {
        optional uint32 Status = 1; // EReplyStatus from ydb/core/protos/base.proto
    }

    optional uint64 Cookie = 2;
    repeated TDeleteRangeResult DeleteRangeResult = 3;
    optional TIncrementGenerationResult IncrementGenerationResult = 4;
    repeated TReadResult ReadResult = 5;
    repeated TReadRangeResult ReadRangeResult = 6;
    repeated TWriteResult WriteResult = 7;
    repeated TRenameResult RenameResult = 8;
    repeated TCopyRangeResult CopyRangeResult = 10;
    repeated TConcatResult ConcatResult = 11;
    repeated TGetStatusResult GetStatusResult = 12;
    optional TTrimLeakedBlobsResult TrimLeakedBlobsResult = 13;
    optional TSetExecutorFastLogPolicyResult SetExecutorFastLogPolicyResult = 14;
    optional string ErrorReason = 9; // When present contains human-readable error description
}

