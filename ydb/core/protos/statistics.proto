import "ydb/core/scheme/protos/pathid.proto";
import "ydb/core/protos/data_events.proto";

package NKikimrStat;

option java_package = "ru.yandex.kikimr.proto";

message TEvConfigureAggregator {
    optional string Database = 1;
}

message TPathEntry {
    optional NKikimrProto.TPathID PathId = 1;
    optional uint64 RowCount = 2;
    optional uint64 BytesSize = 3;
    optional bool IsColumnTable = 4;
}

message TSchemeShardStats {
    repeated TPathEntry Entries = 1;
}

// SS -> SA
message TEvConnectSchemeShard {
    optional fixed64 SchemeShardId = 1;
}

// SS -> SA
message TEvSchemeShardStats {
    optional fixed64 SchemeShardId = 1;
    optional bytes Stats = 2; // serialized TSchemeShardStats
}

// nodes -> SA
message TEvConnectNode {
    optional uint32 NodeId = 1;
    repeated fixed64 NeedSchemeShards = 2;
    message THaveEntry {
        optional fixed64 SchemeShardId = 1;
        optional uint64 Timestamp = 2;
    }
    repeated THaveEntry HaveSchemeShards = 3;
}

// nodes -> SA
message TEvRequestStats {
    optional uint32 NodeId = 1;
    repeated fixed64 NeedSchemeShards = 2;
    optional bool Urgent = 3;
}

// SA -> nodes, node -> nodes
message TEvPropagateStatistics {
    repeated uint32 NodeIds = 1; // hierarchical propagation
    message TStatsEntry {
        optional fixed64 SchemeShardId = 1;
        optional bytes Stats = 2; // serialized TSchemeShardStats
        optional uint64 Timestamp = 3;
    }
    repeated TStatsEntry Entries = 2;
}

// node -> SA, node -> node
message TEvPropagateStatisticsResponse {
}

// SA -> nodes
message TEvStatisticsIsDisabled {
}

enum EColumnStatisticType {
    TYPE_UNSPECIFIED = 0;
    TYPE_COUNT_MIN_SKETCH = 1;
}

// table to gather statistics from
message TTable {
    optional NKikimrProto.TPathID PathId = 1; // table path
    repeated uint32 ColumnTags = 2; // list of columns to gather statistics from. Empty means asking for every column.
}

// KQP -> SA
message TEvAnalyze {
    optional bytes OperationId = 1; // unique identifier to match response item
    repeated TTable Tables = 2; // list of analyzed tables and columns
    repeated EColumnStatisticType Types = 3; // list of statistics types requested. Empty means asking for all available.
}

// SA -> KQP
message TEvAnalyzeResponse {
    optional bytes OperationId = 1;

    enum EStatus {
        STATUS_UNSPECIFIED = 0;
        STATUS_SUCCESS = 1;
        STATUS_ERROR = 2;
    }
    optional EStatus Status = 2;    
}

// KQP -> SA
message TEvAnalyzeStatus {
    optional bytes OperationId = 1; // unique identifier to match response item
}

// SA -> KQP
message TEvAnalyzeStatusResponse {
    optional bytes OperationId = 1;

    enum EStatus {
        STATUS_UNSPECIFIED = 0;
        STATUS_NO_OPERATION = 1;
        STATUS_ENQUEUED = 2;
        STATUS_IN_PROGRESS = 3;
    }
    optional EStatus Status = 2;
}

// SA -> Shard
message TEvAnalyzeTable {
    optional bytes OperationId = 1; // unique identifier to match response item
    optional TTable Table = 2;  // analyzed table
    repeated EColumnStatisticType Types = 3; // list of statistics types requested. Empty means asking for all available.
}

// Shard -> SA
message TEvAnalyzeTableResponse {
    optional bytes OperationId = 1;
    optional NKikimrProto.TPathID PathId = 2;
    optional fixed64 ShardTabletId = 3;
}


message TEvStatisticsRequest {
    optional TTable Table = 1;

    optional bytes StartKey = 2;

    repeated EColumnStatisticType Types = 3;
}

message TStatistic {
    optional uint32 Type = 1;
    optional bytes Data = 2;
}

message TColumnStatistics {
    optional uint32 Tag = 1;
    repeated TStatistic Statistics = 2;
}

message TEvStatisticsResponse {
    repeated TColumnStatistics Columns = 1;

    enum EStatus {
        STATUS_UNSPECIFIED = 0;
        STATUS_SUCCESS = 1;
        STATUS_ABORTED = 2;
        STATUS_ERROR = 3;
    }
    optional EStatus Status = 2;
    optional fixed64 ShardTabletId = 3;
}

message TEvAggregateStatistics {
    optional uint64 Round = 1;
    message TNodeMap {
        optional uint32 NodeId = 1;
        repeated fixed64 TabletIds = 2;
    }
    repeated TNodeMap Nodes = 2;
    optional NKikimrProto.TPathID PathId = 3;
    repeated uint32 ColumnTags = 4;
}

message TEvAggregateKeepAlive {
    optional uint64 Round = 1;
}

message TEvAggregateKeepAliveAck {
    optional uint64 Round = 1;
}

message TEvAggregateStatisticsResponse {
    optional uint64 Round = 1;
    repeated TColumnStatistics Columns = 2;
    enum EErrorType {
        TYPE_UNSPECIFIED = 0;
        TYPE_UNAVAILABLE_NODE = 1;
        TYPE_NON_LOCAL_TABLET = 2;
    }
    message TFailedTablet {
        optional EErrorType Error = 1;
        optional fixed64 TabletId = 2;
        optional uint32 NodeId = 3;
    }
    repeated TFailedTablet FailedTablets = 3;
}
