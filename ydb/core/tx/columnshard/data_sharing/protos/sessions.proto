package NKikimrColumnShardDataSharingProto;

import "ydb/core/tx/columnshard/common/protos/snapshot.proto";
import "ydb/core/tx/columnshard/data_sharing/protos/initiator.proto";
import "ydb/core/protos/tx_columnshard.proto";

message TDestinationRemapIds {
    optional NKikimrTxColumnShard.TInternalPathId SourcePathId = 1; //NKikimrTxColumnShard.TSchemeShardLocalPathId
    optional NKikimrTxColumnShard.TInternalPathId DestPathId = 2; //NKikimrTxColumnShard.TSchemeShardLocalPathId
}

message TTransferContext {
    optional uint64 DestinationTabletId = 1;
    repeated uint64 SourceTabletIds = 2;
    optional bool Moving = 3[default = false];
    optional NKikimrColumnShardProto.TSnapshot SnapshotBarrier = 4;
    optional uint64 TxId = 5;
}

message TDestinationSession {
    optional string SessionId = 1;
    repeated TDestinationRemapIds PathIds = 3;
    optional TInitiator.TController InitiatorController = 4;
    optional TTransferContext TransferContext = 5;

    message TSourceCursor {
        optional uint64 TabletId = 1;
        optional uint64 PackIdx = 2;
        optional bool Finished = 3;
    }
    message TFullCursor {
        repeated TSourceCursor SourceCursors = 1;
        optional bool ConfirmedFlag = 2 [default = false];
    }
}

message TSourceSession {
    optional string SessionId = 1;
    repeated NKikimrTxColumnShard.TInternalPathId PathIds = 3; ////NKikimrTxColumnShard.TSchemeShardLocalPathId
    optional uint64 DestinationTabletId = 4;
    optional TTransferContext TransferContext = 5;

    message TCursorDynamic {
        optional NKikimrTxColumnShard.TInternalPathId StartPathId = 1; //NKikimrTxColumnShard.TSchemeShardLocalPathId
        optional uint64 StartPortionId = 2;
        optional NKikimrTxColumnShard.TInternalPathId NextPathId = 3;  //NKikimrTxColumnShard.TSchemeShardLocalPathId
        optional uint64 NextPortionId = 4;
        optional uint32 PackIdx = 5;
        optional uint32 AckReceivedForPackIdx = 6[default = 0];
        repeated uint64 LinksModifiedTablets = 7;
        optional uint32 NextSchemasIntervalBegin = 8;
        optional uint32 NextSchemasIntervalEnd = 9;
    }

    message TPathPortionsHash {
        optional NKikimrTxColumnShard.TInternalPathId PathId = 1; //TSchemeShardLocalPathId
        optional string Hash = 2;
    }

    message TCursorStatic {
        repeated TPathPortionsHash PathHashes = 7;
        repeated NKikimrTxColumnShard.TSchemaPresetVersionInfo SchemeHistory = 8;
    }
}

message TEvProposeFromInitiator {
    optional TDestinationSession Session = 1;
}
