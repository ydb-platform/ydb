"use strict";(self.webpackChunkydb_embedded_ui=self.webpackChunkydb_embedded_ui||[]).push([[4842],{14842:(e,t,n)=>{n.r(t),n.d(t,{registerLanguages:()=>m});var i=n(88424),s=n(60749);var a=n(62729);const r="$row|$rows|action|all|and|any|as|asc|assume|begin|bernoulli|between|by|case|columns|commit|compact|create|cross|cube|declare|define|delete|desc|dict|discard|distinct|do|drop|else|empty_action|end|erase|evaluate|exclusion|exists|export|flatten|for|from|full|group|grouping|having|if|ignore|ilike|import|in|inner|insert|into|is|join|left|like|limit|list|match|not|null|nulls|offset|on|only|optional|or|order|over|partition|pragma|presort|process|reduce|regexp|repeatable|replace|respect|result|return|right|rlike|rollup|sample|schema|select|semi|set|sets|stream|subquery|table|tablesample|then|truncate|union|update|upsert|use|using|values|view|when|where|window|with|without|xor".split("|"),o="bool|date|datetime|decimal|double|float|int16|int32|int64|int8|interval|json|string|timestamp|tzdate|tzdatetime|tztimestamp|uint16|uint32|uint64|uint8|utf8|uuid|yson".split("|"),l="abs|aggregate_by|aggregate_list|aggregate_list_distinct|agg_list|agg_list_distinct|as_table|avg|avg_if|adaptivedistancehistogram|adaptivewardhistogram|adaptiveweighthistogram|addmember|addtimezone|aggregateflatten|aggregatetransforminput|aggregatetransformoutput|aggregationfactory|asatom|asdict|asdictstrict|asenum|aslist|asliststrict|asset|assetstrict|asstruct|astagged|astuple|asvariant|atomcode|bitcast|bit_and|bit_or|bit_xor|bool_and|bool_or|bool_xor|bottom|bottom_by|blockwardhistogram|blockweighthistogram|cast|coalesce|concat|concat_strict|correlation|count|count_if|covariance|covariance_population|covariance_sample|callableargument|callableargumenttype|callableresulttype|callabletype|callabletypecomponents|callabletypehandle|choosemembers|combinemembers|countdistinctestimate|currentauthenticateduser|currentoperationid|currentoperationsharedid|currenttzdate|currenttzdatetime|currenttztimestamp|currentutcdate|currentutcdatetime|currentutctimestamp|dense_rank|datatype|datatypecomponents|datatypehandle|dictaggregate|dictcontains|dictcreate|dicthasitems|dictitems|dictkeytype|dictkeys|dictlength|dictlookup|dictpayloadtype|dictpayloads|dicttype|dicttypecomponents|dicttypehandle|each|each_strict|emptydicttype|emptydicttypehandle|emptylisttype|emptylisttypehandle|endswith|ensure|ensureconvertibleto|ensuretype|enum|evaluateatom|evaluatecode|evaluateexpr|evaluatetype|expandstruct|filter|filter_strict|find|first_value|folder|filecontent|filepath|flattenmembers|forceremovemember|forceremovemembers|forcerenamemembers|forcespreadmembers|formatcode|formattype|frombytes|funccode|greatest|grouping|gathermembers|generictype|histogram|hll|hyperloglog|if|if_strict|instanceof|json_exists|json_query|json_value|jointablerow|just|lag|last_value|lead|least|len|length|like|likely|like_strict|lambdaargumentscount|lambdacode|linearhistogram|listaggregate|listall|listany|listavg|listcode|listcollect|listconcat|listcreate|listdistinct|listenumerate|listextend|listextendstrict|listextract|listfilter|listflatmap|listflatten|listfromrange|listhas|listhasitems|listhead|listindexof|listitemtype|listlast|listlength|listmap|listmax|listmin|listnotnull|listreplicate|listreverse|listskip|listskipwhile|listskipwhileinclusive|listsort|listsortasc|listsortdesc|listsum|listtake|listtakewhile|listtakewhileinclusive|listtype|listtypehandle|listunionall|listuniq|listzip|listzipall|loghistogram|logarithmichistogram|max|max_by|max_of|median|min|min_by|min_of|mode|multi_aggregate_by|nanvl|nvl|nothing|nulltype|nulltypehandle|optionalitemtype|optionaltype|optionaltypehandle|percentile|parsefile|parsetype|parsetypehandle|pickle|quotecode|range|range_strict|rank|regexp|regexp_strict|rfind|row_number|random|randomnumber|randomuuid|removemember|removemembers|removetimezone|renamemembers|replacemember|reprcode|resourcetype|resourcetypehandle|resourcetypetag|some|stddev|stddev_population|stddev_sample|substring|sum|sum_if|sessionstart|sessionwindow|setcreate|setdifference|setincludes|setintersection|setisdisjoint|setsymmetricdifference|setunion|spreadmembers|stablepickle|startswith|staticmap|streamitemtype|streamtype|streamtypehandle|structmembertype|structmembers|structtypecomponents|structtypehandle|subqueryextend|subqueryextendfor|subquerymerge|subquerymergefor|subqueryunionall|subqueryunionallfor|subqueryunionmerge|subqueryunionmergefor|top|topfreq|top_by|tablename|tablepath|tablerecordindex|tablerow|taggedtype|taggedtypecomponents|taggedtypehandle|tobytes|todict|tomultidict|toset|tosorteddict|tosortedmultidict|trymember|tupleelementtype|tupletype|tupletypecomponents|tupletypehandle|typehandle|typekind|typeof|udaf|unittype|unpickle|untag|unwrap|variance|variance_population|variance_sample|variant|varianttype|varianttypehandle|variantunderlyingtype|voidtype|voidtypehandle|way|worldcode".split("|"),c={comments:{lineComment:"--",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}],wordPattern:/(-?\d*\.\d\w*)|([^`~!@#%^&*()\-=+[{\]}\\|;:'",./?\s]+)/g};function p(){i.Mj.register({id:a.Oo}),i.Mj.setMonarchTokensProvider(a.Oo,function(){let{ansi:e=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{defaultToken:"text",ignoreCase:!0,brackets:[{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"},{open:"{",close:"}",token:"delimiter.curly"}],keywords:r,typeKeywords:o,constants:["true","false"],builtinFunctions:l,operators:["+","-","/","//","%","<@>","@>","<@","&","^","~","<",">","<=",">=","=>","==","!=","<>","="],symbols:/[=><!~?:&|+\-*/^%]+/,escapes:/\\(?:[abfnrtv\\"'`]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,variables:/[a-zA-Z_]\w*/,tokenizer:{root:[{include:"@whitespace"},{include:"@comments"},{include:"@numbers"},{include:"@tablePath"},{include:"@strings"},[/(@variables)::(@variables)/,"support.function"],[/[;,.]/,"delimiter"],[/[(){}[\]]/,"@brackets"],[/@?[a-zA-Z_$]\w*/,{cases:{"@keywords":"keyword","@typeKeywords":"keyword.type","@constants":"constant.yql","@builtinFunctions":"constant.other.color","[$@][a-zA-Z_]\\w*":"variable","@default":"identifier"}}],[/@symbols/,{cases:{"@operators":"operator.sql","@default":""}}]],whitespace:[[/\s+/,"white"]],comments:[[/--.*/,"comment"],[/\/\*/,{token:"comment.quote",next:e?"@commentAnsi":"@comment"}]],comment:[[/[^*/]+/,"comment"],[/\*\//,{token:"comment.quote",next:"@pop"}],[/./,"comment"]],commentAnsi:[[/\/\*/,{token:"comment.quote",next:"@comment"}],[/[^*/]+/,"comment"],[/\*\//,{token:"comment.quote",next:"@pop"}],[/./,"comment"]],numbers:[[/[+-]?\d+(?:(?:\.\d*)?(?:[eE][+-]?\d+)?)?f?\b/,"number.float"],[/[+-]?(?:\d+|0b[01]+|0o[0-8]+|0x[\da-f]+)(?:u?[lst]?)?\b/,"number"]],strings:[[/'/,{token:"string",next:e?"@stringAnsiSingle":"@stringSingle"}],[/"/,{token:"string",next:e?"@stringAnsiDouble":"@stringDouble"}],[/[@]{2}/,{token:"string",next:"@multilineString"}]],stringSingle:[[/[^\\']+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/'[uyj]?/,{token:"string",next:"@pop"}]],stringAnsiSingle:[[/[^']+/,"string"],[/''/,"string"],[/'[uyj]?/,{token:"string",next:"@pop"}]],stringDouble:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"[uyj]?/,{token:"string",next:"@pop"}]],stringAnsiDouble:[[/[^"]+/,"string"],[/""/,"string"],[/"[uyj]?/,{token:"string",next:"@pop"}]],multilineString:[[/#py/,{token:"string.python",nextEmbedded:"python",next:"@embedded",goBack:3}],[/\/\/js/,{token:"string.js",nextEmbedded:"javascript",next:"@embedded",goBack:4}],[/[^@]+/,"string"],[/[@]{4}/,"string"],[/[@]{2}[uyj]?/,{token:"string",next:"@pop"}],[/./,"string"]],embedded:[[/([^@]|^)([@]{4})*[@]{2}([@]([^@]|$)|[^@]|$)/,{token:"@rematch",next:"@pop",nextEmbedded:"@pop"}]],tablePath:[[/((`)?[\w/]+\2\s*\.\s*)?`/,{token:"string.tablepath",next:"@table"}]],table:[[/[^\\`]+/,"string.tablepath"],[/``/,"string.tablepath"],[/@escapes/,"string.escape.tablepath"],[/\\./,"string.escape.invalid.tablepath"],[/`/,{token:"string.tablepath",next:"@pop"}]]}}}()),i.Mj.setLanguageConfiguration(a.Oo,c)}function m(){i.Mj.register({id:s.K}),i.Mj.setMonarchTokensProvider(s.K,{defaultToken:"text",ignoreCase:!0,tokenPostfix:".yql",brackets:[{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"},{open:"{",close:"}",token:"delimiter.curly"}],keywordControl:"bind|block|declare|export|import|lambda|let|quote|return".split("|"),escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[{include:"@whitespace"},{include:"@comment"},[/(#)((?:\w|[\\+-=<>'"&#])+)/,["delimiter","constant"]],[/(?:\b(?:(defun|defmethod|defmacro))\b)(\s+)((?:\w|-|\?)*)/,["type.function","text","entity.name"]],[/(\*)(\S*)(\*)/,["delimiter","variable","delimiter"]],{include:"@strings"},[/'[^#\s)(]+/,"variable.parameter"],[/[(){}[\]]/,"@brackets"],[/(?:(?:<=?|>=?|==|!=|[-+*/%])|[a-zA-Z][a-zA-Z0-9!]*)/,{cases:{"@keywordControl":{token:"keyword.operator"},"@default":"identifier"}}]],whitespace:[[/\s+/,"white"]],comment:[[/#.*/,"comment"]],strings:[[/'?"(?=.)/,{token:"string",next:"@qqstring"}],[/'?[@]{2}/,{token:"string",next:"@multiline"}],[/'?x"(?:[0-9A-Fa-f]{2})*"/,"string"]],qqstring:[[/\\(?:[0-3][0-7][0-7]|x[0-9A-Fa-f]{2}|["tnrbfav\\])/,"string.escape"],[/[^"\\]+/,"string"],[/"|$/,{token:"string",next:"@pop"}]],multiline:[[/[^@]+/,"string"],[/[@]{2}/,{token:"string",next:"@pop"}],[/./,{token:"string"}]]}}),p()}}}]);