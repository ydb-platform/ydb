"use strict";(globalThis.webpackChunkydb_embedded_ui=globalThis.webpackChunkydb_embedded_ui||[]).push([[5210],{35210:(e,t,n)=>{n.d(t,{registerYQLCompletionItemProvider:()=>U});n(44915),n(88952),n(36999),n(58590),n(6438),n(94908),n(4836),n(60703),n(64215),n(31659),n(99822),n(40142),n(18864),n(32516),n(20961),n(40800),n(2183),n(58568),n(63867),n(43780),n(34175),n(44588),n(70552),n(48279),n(65877),n(81091),n(99312),n(62427),n(15989),n(56800),n(28449),n(57244),n(87536),n(47873),n(59477),n(9948),n(84325),n(15040),n(75639),n(85117),n(14614),n(95200),n(50352),n(4519),n(73494),n(6429),n(28211),n(59731),n(57377),n(50071),n(18278),n(98745),n(44798),n(10617),n(30936),n(57197),n(24518),n(10846),n(22890),n(98472),n(50166),n(91268),n(47210),n(29500),n(38728),n(46606);var i,s=n(32858);n(61562),n(94318),n(23304),n(59896),n(75208),n(51232),n(77888),n(46686),n(27020),n(15600),n(80200),n(87152),n(60352),n(66235),n(31474),n(84840),n(17184),n(74304),n(37954),n(74800),n(25922),n(46648),n(61082),n(19856),n(97884),n(83488),n(3254),n(57680),n(796),n(89336),n(19436),n(40340),n(86492),n(52894),n(73374),n(38320),n(92080),n(57664),n(8868),n(31396),n(18544),n(538),n(25064),n(64256),n(32624),n(97360),n(42776),n(97144),n(46304),n(58820),n(82560),n(74276),n(39866),n(73020),n(71316),n(70492),n(50848),n(59520),n(46576),n(49150),n(33358),n(96716),n(28304),n(14720),n(27734),n(2068),n(71468),n(15482),n(42572),n(77668),n(36e3),n(10072),n(48448),n(51376),n(61764),n(85872),n(22362),n(98408),n(61472),n(50576),n(11272),n(89518),n(99669),n(24152),n(51861),n(97791),n(23934);self.MonacoEnvironment=(i={editorWorkerService:"editor.worker.js",css:"css.worker.js",html:"html.worker.js",json:"json.worker.js",typescript:"ts.worker.js",javascript:"ts.worker.js",less:"css.worker.js",scss:"css.worker.js",handlebars:"html.worker.js",razor:"html.worker.js"},{globalAPI:!1,getWorkerUrl:function(e,t){var s=n.p,o=(s?s.replace(/\/$/,"")+"/":"")+i[t];if(/^((http:)|(https:)|(file:)|(\/\/))/.test(o)){var r=String(window.location),a=r.substr(0,r.length-window.location.hash.length-window.location.search.length-window.location.pathname.length);if(o.substring(0,a.length)!==a){/^(\/\/)/.test(o)&&(o=window.location.protocol+o);var l=new Blob(["/*"+t+'*/importScripts("'+o+'");'],{type:"application/javascript"});return URL.createObjectURL(l)}}return o}});var o=n(23195);const r=["Text","Bytes","String","Bool","Int32","Uint32","Int64","Uint64","Float","Double","Void","Yson","Utf8","Unit","Json","Date","Datetime","Timestamp","Interval","Null","Int8","Uint8","Int16","Uint16","TzDate","TzDatetime","TzTimestamp","Uuid","EmptyList","EmptyDict","JsonDocument","DyNumber"],a=["CAST","COALESCE","LENGTH","LEN","SUBSTRING","FIND","RFIND","StartsWith","EndsWith","IF","NANVL","Random","RandomNumber","RandomUuid","CurrentUtcDate","CurrentUtcDatetime","CurrentUtcTimestamp","CurrentTzDate","CurrentTzDatetime","CurrentTzTimestamp","AddTimezone","RemoveTimezone","MAX_OF","MIN_OF","GREATEST","LEAST","AsTuple","AsStruct","AsList","AsDict","AsSet","AsListStrict","AsDictStrict","AsSetStrict","Variant","AsVariant","Enum","AsEnum","AsTagged","Untag","TableRow","JoinTableRow","Ensure","EnsureType","EnsureConvertibleTo","ToBytes","FromBytes","ByteAt","TestBit","ClearBit","SetBit","FlipBit","Abs","Just","Unwrap","Nothing","Callable","StaticMap","StaticZip","ListCreate","AsListStrict","ListLength","ListHasItems","ListCollect","ListSort","ListSortAsc","ListSortDesc","ListExtend","ListExtendStrict","ListUnionAll","ListZip","ListZipAll","ListEnumerate","ListReverse","ListSkip","ListTake","ListIndexOf","ListMap","ListFilter","ListFlatMap","ListNotNull","ListFlatten","ListUniq","ListAny","ListAll","ListHas","ListHead","ListLast","ListMin","ListMax","ListSum","ListAvg","ListFold","ListFold1","ListFoldMap","ListFold1Map","ListFromRange","ListReplicate","ListConcat","ListExtract","ListTakeWhile","ListSkipWhile","ListAggregate","ToDict","ToMultiDict","ToSet","DictCreate","SetCreate","DictLength","DictHasItems","DictItems","DictKeys","DictPayloads","DictLookup","DictContains","DictAggregate","SetIsDisjoint","SetIntersection","SetIncludes","SetUnion","SetDifference","SetSymmetricDifference","TryMember","ExpandStruct","AddMember","RemoveMember","ForceRemoveMember","ChooseMembers","RemoveMembers","ForceRemoveMembers","CombineMembers","FlattenMembers","StructMembers","RenameMembers","ForceRenameMembers","GatherMembers","SpreadMembers","ForceSpreadMembers","FormatType","ParseType","TypeOf","InstanceOf","DataType","OptionalType","ListType","StreamType","DictType","TupleType","StructType","VariantType","ResourceType","CallableType","GenericType","UnitType","VoidType","OptionalItemType","ListItemType","StreamItemType","DictKeyType","DictPayloadType","TupleElementType","StructMemberType","CallableResultType","CallableArgumentType","VariantUnderlyingType","JSON_EXISTS","JSON_VALUE","JSON_QUERY"],l=["COUNT","MIN","MAX","SUM","AVG","COUNT_IF","SUM_IF","AVG_IF","SOME","CountDistinctEstimate","HyperLogLog","AGGREGATE_LIST","AGGREGATE_LIST_DISTINCT","AGG_LIST","AGG_LIST_DISTINCT","MAX_BY","MIN_BY","AGGREGATE_BY","MULTI_AGGREGATE_BY","TOP","BOTTOM","TOP_BY","BOTTOM_BY","TOPFREQ","MODE","STDDEV","VARIANCE","CORRELATION","COVARIANCE","PERCENTILE","MEDIAN","HISTOGRAM","LogarithmicHistogram","LogHistogram","LinearHistogram","BOOL_AND","BOOL_OR","BOOL_XOR","BIT_AND","BIT_OR","BIT_XOR","SessionStart"],u=Object.entries({DateTime:["EndOfMonth","Format","FromMicroseconds","FromMilliseconds","FromSeconds","GetDayOfMonth","GetDayOfWeek","GetDayOfWeekName","GetDayOfYear","GetHour","GetMicrosecondOfSecond","GetMillisecondOfSecond","GetMinute","GetMonth","GetMonthName","GetSecond","GetTimezoneId","GetTimezoneName","GetWeekOfYear","GetWeekOfYearIso8601","GetYear","IntervalFromDays","IntervalFromHours","IntervalFromMicroseconds","IntervalFromMilliseconds","IntervalFromMinutes","IntervalFromSeconds","MakeDate","MakeDatetime","MakeTimestamp","MakeTzDate","MakeTzDatetime","MakeTzTimestamp","Parse","ParseHttp","ParseIso8601","ParseRfc822","ParseX509","ShiftMonths","ShiftQuarters","ShiftYears","Split","StartOf","StartOfDay","StartOfMonth","StartOfQuarter","StartOfWeek","StartOfYear","TimeOfDay","ToDays","ToHours","ToMicroseconds","ToMilliseconds","ToMinutes","ToSeconds","Update"],Dsv:["Parse","ReadRecord","Serialize"],String:["AsciiToLower","AsciiToTitle","AsciiToUpper","Base32Decode","Base32Encode","Base32StrictDecode","Base64Decode","Base64Encode","Base64EncodeUrl","Base64StrictDecode","Bin","BinText","CgiEscape","CgiUnescape","Collapse","CollapseText","Contains","DecodeHtml","EncodeHtml","EndsWith","EndsWithIgnoreCase","EscapeC","FromByteList","HasPrefix","HasPrefixIgnoreCase","HasSuffix","HasSuffixIgnoreCase","Hex","HexDecode","HexEncode","HexText","HumanReadableBytes","HumanReadableDuration","HumanReadableQuantity","IsAscii","IsAsciiAlnum","IsAsciiAlpha","IsAsciiDigit","IsAsciiHex","IsAsciiLower","IsAsciiSpace","IsAsciiUpper","JoinFromList","LeftPad","LevensteinDistance","Prec","RemoveAll","RemoveFirst","RemoveLast","ReplaceAll","ReplaceFirst","ReplaceLast","RightPad","SBin","SHex","SplitToList","StartsWith","StartsWithIgnoreCase","Strip","ToByteList","UnescapeC"],Unicode:["Find","Fold","FromCodePointList","GetLength","IsAlnum","IsAlpha","IsAscii","IsDigit","IsHex","IsLower","IsSpace","IsUnicodeSet","IsUpper","IsUtf","JoinFromList","LevensteinDistance","Normalize","NormalizeNFC","NormalizeNFD","NormalizeNFKC","NormalizeNFKD","RFind","RemoveAll","RemoveFirst","RemoveLast","ReplaceAll","ReplaceFirst","ReplaceLast","Reverse","SplitToList","Strip","Substring","ToCodePointList","ToLower","ToTitle","ToUint64","ToUpper","Translit","TryToUint64"],Url:["BuildQueryString","CanBePunycodeHostName","CutQueryStringAndFragment","CutScheme","CutWWW","CutWWW2","Decode","Encode","ForceHostNameToPunycode","ForcePunycodeToHostName","GetCGIParam","GetDomain","GetDomainLevel","GetFragment","GetHost","GetHostPort","GetOwner","GetPath","GetPort","GetScheme","GetSchemeHost","GetSchemeHostPort","GetSignificantDomain","GetTLD","GetTail","HostNameToPunycode","IsAllowedByRobotsTxt","IsKnownTLD","IsWellKnownTLD","Normalize","NormalizeWithDefaultHttpScheme","Parse","PunycodeToHostName","QueryStringToDict","QueryStringToList"],Yson:["Attributes","Contains","ConvertTo","ConvertToBool","ConvertToBoolDict","ConvertToBoolList","ConvertToDict","ConvertToDouble","ConvertToDoubleDict","ConvertToDoubleList","ConvertToInt64","ConvertToInt64Dict","ConvertToInt64List","ConvertToList","ConvertToString","ConvertToStringDict","ConvertToStringList","ConvertToUint64","ConvertToUint64Dict","ConvertToUint64List","Equals","From","GetHash","GetLength","IsBool","IsDict","IsDouble","IsEntity","IsInt64","IsList","IsString","IsUint64","Lookup","LookupBool","LookupDict","LookupDouble","LookupInt64","LookupList","LookupString","LookupUint64","Options","Parse","ParseJson","ParseJsonDecodeUtf8","Serialize","SerializeJson","SerializePretty","SerializeText","WithAttributes","YPath","YPathBool","YPathDict","YPathDouble","YPathInt64","YPathList","YPathString","YPathUint64"],HyperLogLog:["AddValue","Create","Deserialize","GetResult","Merge","Serialize"],Hyperscan:["BacktrackingGrep","BacktrackingMatch","Capture","Grep","Match","MultiGrep","MultiMatch","Replace"],Ip:["ConvertToIPv6","FromString","GetSubnet","GetSubnetByMask","IsEmbeddedIPv4","IsIPv4","IsIPv6","SubnetFromString","SubnetMatch","SubnetToString","ToFixedIPv6String","ToString"],Json:["BoolAsJsonNode","CompilePath","DoubleAsJsonNode","JsonAsJsonNode","JsonDocumentSqlExists","JsonDocumentSqlQuery","JsonDocumentSqlQueryConditionalWrap","JsonDocumentSqlQueryWrap","JsonDocumentSqlTryExists","JsonDocumentSqlValueBool","JsonDocumentSqlValueConvertToUtf8","JsonDocumentSqlValueInt64","JsonDocumentSqlValueNumber","JsonDocumentSqlValueUtf8","Parse","Serialize","SerializeToJsonDocument","SqlExists","SqlQuery","SqlQueryConditionalWrap","SqlQueryWrap","SqlTryExists","SqlValueBool","SqlValueConvertToUtf8","SqlValueInt64","SqlValueNumber","SqlValueUtf8","Utf8AsJsonNode"],Math:["Abs","Acos","Asin","Asinh","Atan","Atan2","Cbrt","Ceil","Cos","Cosh","E","Eps","Erf","ErfInv","ErfcInv","Exp","Exp2","Fabs","Floor","Fmod","FuzzyEquals","Hypot","IsFinite","IsInf","IsNaN","Ldexp","Lgamma","Log","Log10","Log2","Mod","NearbyInt","Pi","Pow","Rem","Remainder","Rint","Round","RoundDownward","RoundToNearest","RoundTowardZero","RoundUpward","Sigmoid","Sin","Sinh","Sqrt","Tan","Tanh","Tgamma","Trunc"],Pire:["Capture","Grep","Match","MultiGrep","MultiMatch","Replace"],Re2:["Capture","Count","Escape","FindAndConsume","Grep","Match","Options","PatternFromLike","Replace"],Re2posix:["Capture","Count","Escape","FindAndConsume","Grep","Match","Options","PatternFromLike","Replace"],Digest:["Argon2","Blake2B","CityHash","CityHash128","Crc32c","Crc64","FarmHashFingerprint","FarmHashFingerprint128","FarmHashFingerprint2","FarmHashFingerprint32","FarmHashFingerprint64","Fnv32","Fnv64","HighwayHash","IntHash64","Md5HalfMix","Md5Hex","Md5Raw","MurMurHash","MurMurHash2A","MurMurHash2A32","MurMurHash32","NumericHash","Sha1","Sha256","SipHash","SuperFastHash","XXH3","XXH3_128"],Histogram:["CalcLowerBound","CalcLowerBoundSafe","CalcUpperBound","CalcUpperBoundSafe","GetSumAboveBound","GetSumBelowBound","GetSumInRange","Normalize","Print","ToCumulativeDistributionFunction"]}).reduce(((e,[t,n])=>{const i=n.map((e=>`${t}::${e}`));return e.concat(i)}),[]),c=["ROW_NUMBER","LAG","LEAD","FIRST_VALUE","LAST_VALUE","RANK","DENSE_RANK","SessionState"],m=[],d=["TablePathPrefix","Warning"],T={table:["AUTO_PARTITIONING_BY_SIZE","AUTO_PARTITIONING_PARTITION_SIZE_MB","AUTO_PARTITIONING_BY_LOAD","AUTO_PARTITIONING_MIN_PARTITIONS_COUNT","AUTO_PARTITIONING_MAX_PARTITIONS_COUNT","UNIFORM_PARTITIONS","READ_REPLICAS_SETTINGS","TTL","KEY_BLOOM_FILTER","STORE"],view:["security_invoker"],topic:["min_active_partitions","partition_count_limit","retention_period","retention_storage_mb","partition_write_speed_bytes_per_second","partition_write_burst_bytes","metering_mode"],object:[],user:[],group:[],externalDataSource:[],externalTable:[],tableStore:[],replication:["ENDPOINT","DATABASE","USER","PASSWORD"],tableIndex:[],topicConsumer:["important","read_from"]},g={Method:0,Function:1,Constructor:2,Field:3,Variable:4,Class:5,Struct:6,Interface:7,Module:8,Property:9,Event:10,Operator:11,Unit:12,Value:13,Constant:14,Enum:15,EnumMember:16,Keyword:17,Text:18,Color:19,File:20,Reference:21,Customcolor:22,Folder:23,TypeParameter:24,User:25,Issue:26,Snippet:27},p=/[\s'"-/@]/,S={externalDataSource:["external_data_source"],externalTable:["external_table"],replication:["replication"],table:["table","column_table"],tableStore:["column_store"],topic:["pers_queue_group"],view:["view"],tableIndex:["table_index","index"]},I=["dir","unknown","ext_sub_domain"],L=["dir","ext_sub_domain"];function h(e){let t=e;return e.match(p)&&(t=`\`${e}\``),t}function y(e){let t=0,n=e.length;return e.startsWith("`")&&(t=1),e.endsWith("`")&&(n=-1),e.slice(t,n)}function A(e){return e.startsWith("/")?e.slice(1):e}function C(e="",t){const n=y(e);if(!n.startsWith("/"))return n;let i=A(n);const s=A(t);return i.startsWith(s)&&(i=i.slice(s.length)),A(i)}const b={suggestTemplates:0,suggestPragmas:1,suggestEntity:2,suggestAllColumns:3,suggestColumns:4,suggestColumnAliases:5,suggestTableIndexes:6,suggestTableHints:7,suggestEntitySettings:8,suggestKeywords:9,suggestAggregateFunctions:10,suggestTableFunctions:11,suggestWindowFunctions:12,suggestFunctions:13,suggestSimpleTypes:14,suggestUdfs:15};function D(e){return b[e]}async function f(e,t,n,i){const o=C(i,n),r=await window.api.viewer.autocomplete({database:n,prefix:o,limit:1e3}),a=null===i||void 0===i?void 0:i.startsWith("`");if(r.Success){const n=function(e,t){const n=t.reduce(((e,t)=>{const n=S[t];return n&&n.forEach((t=>e.add(t))),e}),new Set(I));return null===e||void 0===e?void 0:e.filter((({Type:e})=>n.has(e)))}(r.Result.Entities,t);return n?n.reduce(((t,{Name:n,Type:i})=>{var o;const r=L.includes(i),l=r?`${n}/`:n;let u;r&&!a&&(u=`\`${l}$0\``);const c=t.length;return t.push({label:l,insertText:null!==(o=u)&&void 0!==o?o:l,kind:r?g.Folder:g.Text,insertTextRules:u?s.languages.CompletionItemInsertTextRule.InsertAsSnippet:s.languages.CompletionItemInsertTextRule.None,detail:i,range:e,command:l.endsWith("/")?{id:"editor.action.triggerSuggest",title:""}:void 0,sortText:x(D("suggestEntity"))+x(c)}),t}),[]):[]}return[]}async function v(e){return(await async function(){return a}()).map((t=>({label:t,insertText:t,kind:g.Function,detail:"Function",range:e,sortText:x(D("suggestFunctions"))})))}async function F(e){return(await async function(){return r}()).map((t=>({label:t,insertText:t,kind:g.TypeParameter,detail:"Type",range:e,sortText:x(D("suggestSimpleTypes"))})))}async function E(e){return(await async function(){return u}()).map((t=>({label:t,insertText:t,kind:g.Function,detail:"UDF",range:e,sortText:x(D("suggestUdfs"))})))}async function M(e){return(await async function(){return c}()).map((t=>({label:t,insertText:t,kind:g.Function,detail:"Window function",range:e,sortText:x(D("suggestWindowFunctions"))})))}async function R(e){return(await async function(){return m}()).map((t=>({label:t,insertText:t,kind:g.Function,detail:"Table function",range:e,sortText:x(D("suggestTableFunctions"))})))}async function N(e){return(await async function(){return l}()).map((t=>({label:t,insertText:t,kind:g.Function,detail:"Aggregate function",range:e,sortText:x(D("suggestAggregateFunctions"))})))}async function w(e){return(await async function(){return d}()).map((t=>({label:t,insertText:t,kind:g.Module,detail:"Pragma",range:e,sortText:x(D("suggestPragmas"))})))}async function _(e,t){const n=await async function(e){return T[e]}(t);return n.map((t=>({label:t,insertText:t,kind:g.Property,detail:"Setting",range:e,sortText:x(D("suggestEntitySettings"))})))}const P="abcdefghijklmnopqrstuvwxyz";function x(e){const t=P[e];if(t)return t;const n=Math.floor(e/P.length),i=e%P.length;return P.slice(-1).repeat(n)+P[i]}function O(e){return async(t,i,s,o)=>{const r=function(e,t){const{startColumn:n,endColumn:i}=e.getWordUntilPosition(t),s="$"===e.getLineContent(t.lineNumber)[n-2]?1:0;return{startColumn:n-s,startLineNumber:t.lineNumber,endColumn:i,endLineNumber:t.lineNumber}}(t,i),a=await async function(e,t,i,s){const{parseYqlQuery:o}=await n.e(1112).then(n.bind(n,91112)),r={line:t.lineNumber,column:t.column},a=o(e.getValue(),r);let l=[],u=[],c=[],m=[],d=[],T=[],p=[],S=[],I=[];if(a.suggestEntity){const n=function(e,t){var n,i,s,o;const r=e.findPreviousMatch("\\s(`?[^\\s]*)",t,!0,!1,null,!0),a=e.findNextMatch("([^\\s]*)`?",t,!0,!1,null,!0);return`${null!==(n=null===r||void 0===r||null===(i=r.matches)||void 0===i?void 0:i[1])&&void 0!==n?n:""}${null!==(s=null===a||void 0===a||null===(o=a.matches)||void 0===o?void 0:o[1])&&void 0!==s?s:""}`}(e,t);l=await f(i,a.suggestEntity,s,n)}a.suggestFunctions&&(u=await v(i));a.suggestAggregateFunctions&&(c=await N(i));a.suggestWindowFunctions&&(m=await M(i));a.suggestTableFunctions&&(d=await R(i));a.suggestSimpleTypes&&(p=await F(i));a.suggestUdfs&&(T=await E(i));a.suggestPragmas&&(S=await w(i));a.suggestEntitySettings&&(I=await _(i,a.suggestEntitySettings));const L=await function(e,t){return t?null===t||void 0===t?void 0:t.map((t=>({label:t.name,insertText:t.name,kind:g.Variable,detail:"Column alias",range:e,sortText:x(D("suggestColumnAliases"))}))):[]}(i,a.suggestColumnAliases),A=await async function(e,t,n){var i,s,o,r;if(null===t||void 0===t||!t.tables)return[];const a=[],l=t.all?[]:void 0,u=t.tables.length>1,c=null!==(i=null===(s=t.tables)||void 0===s?void 0:s.map((e=>{let t=y(e.name);return t.endsWith("/")||(t=`${t}/`),C(t,n)})))&&void 0!==i?i:[],m=Array.from(new Set(c)),d=await window.api.viewer.autocomplete({database:n,table:m,limit:1e3});if(!d.Success)return[];const T=null===(o=t.tables)||void 0===o?void 0:o.reduce(((e,t)=>{var i;const s=C(y(t.name),n),o=null!==(i=e[s])&&void 0!==i?i:[];return t.alias&&o.push(t.alias),e[s]=o,e}),{});if(null===(r=d.Result.Entities)||void 0===r||r.forEach((t=>{if("column"!==t.Type)return;const i=function(e){const{PKIndex:t,NotNull:n,Default:i}=e,s=[];return void 0!==t&&s.push(`PK${t}`),n&&s.push("NN"),i&&s.push("Default"),s.length?s.join(", "):""}(t),s=h(t.Name),o=C(t.Parent,n),r=T[o],c=a.length;if(null!==r&&void 0!==r&&r.length)r.forEach((t=>{const n=`${t}.${s}`;a.push({label:{label:n,description:i},insertText:n,kind:g.Variable,detail:"Column",range:e,sortText:x(D("suggestColumns"))+x(c)}),null===l||void 0===l||l.push(n)}));else{let t=s;u&&(t=`${h(o)}.${s}`),a.push({label:{label:t,description:i},insertText:t,kind:g.Variable,detail:"Column",range:e,sortText:x(D("suggestColumns"))+x(c)}),null===l||void 0===l||l.push(t)}})),l&&l.length>0){const t=l.join(", ");a.push({label:t,insertText:t,kind:g.Variable,range:e,sortText:x(D("suggestAllColumns"))})}return a}(i,a.suggestColumns,s),b=function(e,t){return t?null===t||void 0===t?void 0:t.map((t=>({label:t.value,insertText:t.value,kind:g.Keyword,detail:"Keyword",range:e,sortText:x(D("suggestKeywords"))}))):[]}(i,a.suggestKeywords),P=[...l,...u,...m,...d,...T,...p,...S,...L,...A,...b,...c,...I];return P}(t,i,r,e);return{suggestions:a}}}let G;function U(e){G&&G.dispose(),G=s.languages.registerCompletionItemProvider(o.l,{triggerCharacters:[" ",".","`","(","/"],provideCompletionItems:O(e)})}}}]);