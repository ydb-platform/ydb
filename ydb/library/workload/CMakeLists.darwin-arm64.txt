
# This file was generated by the build system used internally in the Yandex monorepo.
# Only simple modifications are allowed (adding source-files to targets, adding simple properties
# like target_include_directories). These modifications will be ported to original
# ya.make files by maintainers. Any complex modifications which can't be ported back to the
# original buildsystem will not be accepted.


get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)
get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)

add_library(ydb-library-workload)
target_link_libraries(ydb-library-workload PUBLIC
  contrib-libs-cxxsupp
  yutil
  library-cpp-getopt
  api-protos
  cpp-client-ydb_table
  tools-enum_parser-enum_serialization_runtime
)
target_sources(ydb-library-workload PRIVATE
  ${CMAKE_BINARY_DIR}/ydb/library/workload/kv_workload.h_serialized.h
  ${CMAKE_BINARY_DIR}/ydb/library/workload/stock_workload.h_serialized.h
  ${CMAKE_SOURCE_DIR}/ydb/library/workload/workload_factory.cpp
)
generate_enum_serilization(ydb-library-workload
  ${CMAKE_SOURCE_DIR}/ydb/library/workload/kv_workload.h
  GEN_HEADER
  ${CMAKE_BINARY_DIR}/ydb/library/workload/kv_workload.h_serialized.h
  INCLUDE_HEADERS
  ydb/library/workload/kv_workload.h
)
generate_enum_serilization(ydb-library-workload
  ${CMAKE_SOURCE_DIR}/ydb/library/workload/stock_workload.h
  GEN_HEADER
  ${CMAKE_BINARY_DIR}/ydb/library/workload/stock_workload.h_serialized.h
  INCLUDE_HEADERS
  ydb/library/workload/stock_workload.h
)

add_global_library_for(ydb-library-workload.global ydb-library-workload)
target_link_libraries(ydb-library-workload.global PUBLIC
  contrib-libs-cxxsupp
  yutil
  library-cpp-getopt
  api-protos
  cpp-client-ydb_table
  tools-enum_parser-enum_serialization_runtime
)
target_sources(ydb-library-workload.global PRIVATE
  ${CMAKE_SOURCE_DIR}/ydb/library/workload/stock_workload.cpp
  ${CMAKE_SOURCE_DIR}/ydb/library/workload/kv_workload.cpp
)
