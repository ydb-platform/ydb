syntax = "proto3";
option cc_enable_arenas = true;

package NYql.NDqProto;

import "google/protobuf/any.proto";
import "ydb/library/actors/protos/actors.proto";
import "ydb/library/yql/dq/proto/dq_transport.proto";

enum ERuntimeVersion {
    RUNTIME_VERSION_UNSPECIFIED = 0;
    RUNTIME_VERSION_YQL_1_0 = 100000;
}

// Mode of checkpoints support.
// There can be different checkpoints settings
// in different graph parts.
enum ECheckpointingMode {
    CHECKPOINTING_MODE_DEFAULT = 0; // Checkpoints are used according to common settings for our type of query.
    CHECKPOINTING_MODE_DISABLED = 1; // Checkpoints are not used in this part of graph (channels, tasks). This is typically when we are deadling with finite part of graph.
}

// Mode of watermarks support.
// There can be different watermarks settings
// in different graph parts.
enum EWatermarksMode {
    WATERMARKS_MODE_DEFAULT = 0; // Watermarks are used according to common settings for our type of query.
    WATERMARKS_MODE_DISABLED = 1; // Watermarks are not used in this part of graph (channels, tasks).
}

message TProgram {
    message TSettings {
        bool HasMapJoin = 1;
        bool HasSort = 2;
        bool HasUdf = 3;
        bool HasStateAggregation = 4;
        bool HasFilter = 5;
        uint32 StageLevel = 6;
        double LevelDataPrediction = 7;
        bool HasFinalAggregation = 8;
        bool HasTop = 9;
        uint32 GroupByKeysCount = 10;
        bool HasRangeScan = 11;
        bool HasLookup = 12;
        double InputDataPrediction = 13;
        double OutputDataPrediction = 14;

        bool HasCondense = 15;
        uint32 NodesCount = 16;
    }

    uint32 RuntimeVersion = 1;
    bytes Raw = 2;
    TSettings Settings = 3;
}

message TDqUri {
    string Protocol = 1;
    string Uri = 2;
    uint32 ShardId = 3;
}

message TEndpoint {
    oneof EndpointType {
        NActorsProto.TActorId ActorId = 1;
        fixed64 TabletId = 2;
        TDqUri Uri = 3;
    }
}

message TChannel {
    uint64 Id = 1;
    EDataTransportVersion TransportVersion = 2;

    uint32 SrcStageId = 11;
    uint32 DstStageId = 12;
    uint64 SrcTaskId = 3;
    uint64 DstTaskId = 4;
    TEndpoint SrcEndpoint = 5;
    TEndpoint DstEndpoint = 6;

    bool IsPersistent = 7;
    bool InMemory = 8;
    ECheckpointingMode CheckpointingMode = 9;
    EWatermarksMode WatermarksMode = 10;
}

message TUnionAllInput {
}

message TSourceInput {
    string Type = 1;
    google.protobuf.Any Settings = 2;
    EWatermarksMode WatermarksMode = 3;
}

message TSortColumn {
    string Column = 1;
    bool Ascending = 2;
}

message TMergeInput {
    repeated TSortColumn SortColumns = 1;
}

message TTaskInput {
    repeated TChannel Channels = 1;
    oneof Type {
        TUnionAllInput UnionAll = 10;
        TSourceInput Source = 11;
        TMergeInput Merge = 12;
    }
    TDqTransform Transform = 30;
}

message TTaskOutputMap {
}

message TRangePartitionInfo {
    bytes EndKeyPrefix = 1;
    bool IsInclusive = 2;
    bool IsPoint = 3;
    uint64 ChannelId = 4;
}

message TTaskOutputRangePartition {
    repeated string KeyColumns = 1;
    repeated TRangePartitionInfo Partitions = 2;
}

message TTaskOutputBroadcast {
}

message TTaskOutputHashPartition {
    repeated string KeyColumns = 1;
    uint32 PartitionsCount = 2;
}

message TTaskOutputEffects {
}

message TTaskOutputSink {
    string Type = 1;
    google.protobuf.Any Settings = 2;
}

message TTaskOutput {
    repeated TChannel Channels = 1;
    oneof Type {
        TTaskOutputMap Map = 10;
        TTaskOutputRangePartition RangePartition = 11;
        TTaskOutputHashPartition HashPartition = 12;
        TTaskOutputBroadcast Broadcast = 13;
        TTaskOutputEffects Effects = 14;
        TTaskOutputSink Sink = 15;
    }
    TDqTransform Transform = 30;
}

message TDqTransform {
    string Type = 1;

    // binary YSON(codec ydb/library/yql/providers/common/schema/mkql)
    bytes InputType = 2;
    bytes OutputType = 3;

    google.protobuf.Any Settings = 4;
}

message TDqTask {
    uint64 Id = 1;
    uint32 StageId = 9;
    TEndpoint Executer = 2;
    TProgram Program = 3;
    map<string, TData> Parameters = 4;
    repeated TTaskInput Inputs = 5;
    repeated TTaskOutput Outputs = 6;
    google.protobuf.Any Meta = 7;
    bool CreateSuspended = 8;
    string RateLimiter = 10;
    string RateLimiterResource = 11;
    uint64 InitialTaskMemoryLimit = 12;
    map<string, bytes> TaskParams = 13;
    map<string, string> SecureParams = 14;
    optional uint32 MetaId = 15;
    optional bool UseLlvm = 16;
    repeated bytes ReadRanges = 17;
    map<string, string> RequestContext = 18;
}
