syntax = "proto3";
option cc_enable_arenas = true;

package NYql.NDqProto;

import "google/protobuf/any.proto";
import "ydb/library/yql/dq/actors/protos/dq_stats.proto";
import "ydb/library/yql/dq/actors/protos/dq_status_codes.proto";
import "ydb/library/yql/dq/proto/dq_transport.proto";
import "ydb/library/yql/dq/proto/dq_tasks.proto";
import "ydb/library/yql/providers/dq/api/protos/service.proto";
import "ydb/public/api/protos/ydb_issue_message.proto";
import "ydb/public/api/protos/ydb_value.proto";
import "ydb/library/actors/protos/actors.proto";

message TAllocateWorkersRequest {
    uint32 Count = 1;
    // Yql.DqsProto.ExecuteQueryRequest Request = 2; // unused

    bool IsForwarded = 3;
    uint64 ResourceId = 4; // debug resource allocation on worker nodes

    repeated Yql.DqsProto.TFile Files = 5; // deprecated

    string TraceId = 6;

    // repeated Yql.DqsProto.DatabaseDescription Databases = 7; // unused

    string User = 8;

    repeated Yql.DqsProto.TWorkerFilter WorkerFilterPerTask = 9;

    uint32 WorkersCount = 10;

    bool CreateComputeActor = 11;    // false
    string ComputeActorType = 15;
    repeated NYql.NDqProto.TDqTask Task = 12; // used for compute actor
    NActorsProto.TActorId ResultActorId = 13; // used for compute actor

    uint64 FreeWorkerAfterMs = 14;
    NYql.NDqProto.EDqStatsMode StatsMode = 16;
}

message TWorkerGroup {
    uint64 ResourceId = 1;
    repeated NActorsProto.TActorId WorkerActor = 2;
    repeated Yql.DqsProto.TWorkerInfo Worker = 3;
}

enum EErrorCode {
    EUNKNOWN = 0;
    EMISMATCH = 1;
    ETERMINATING = 2;
    EFOLLOWER = 3;
    EINITIALIZATION = 4;
}

message TDqError {
    string Message = 1;
    EErrorCode DeprecatedErrorCode = 2; // deprecated
    NYql.NDqProto.StatusIds.StatusCode StatusCode = 3;
}

message TAllocateWorkersResponse {
    oneof TResponse {
        TWorkerGroup Workers = 1; // contains actorIds
        TDqError Error = 2;
        TWorkerGroup Nodes = 3; // contains nodeIds
    };

    repeated TMetric Metric = 4;
}

message TFreeWorkersNotify {
    uint64 ResourceId = 1;
    bool IsForwarded = 2;

    string TraceId = 6;
    reserved 7;
    repeated string FailedWorkerGuid = 8;
}

message TEvRegisterNode {
    Yql.DqsProto.RegisterNodeRequest Request = 1;
    bool IsForwarded = 4;
}

message TEvRegisterNodeResponse {
    Yql.DqsProto.RegisterNodeResponse Response = 1;
}

message TEvJobStop {
    Yql.DqsProto.JobStopRequest Request = 1;
    bool IsForwarded = 2;
}

message TEvJobStopResponse {
}

message TEvClusterStatus {
    bool IsForwarded = 4;
}

message TEvClusterStatusResponse {
    Yql.DqsProto.ClusterStatusResponse Response = 1;
}

message TEvOperationStop {
    Yql.DqsProto.OperationStopRequest Request = 1;
    bool IsForwarded = 2;
}

message TEvOperationStopResponse {
}

message TEvQueryStatus {
  Yql.DqsProto.QueryStatusRequest Request = 1;
  bool IsForwarded = 2;
}

message TEvQueryStatusResponse {
  Yql.DqsProto.QueryStatusResponse Response = 1;
}

message TEvIsReady {
    Yql.DqsProto.IsReadyRequest Request = 1;
    bool IsForwarded = 2;
}

message TEvIsReadyResponse {
    bool IsReady = 1;
}

message TEvRoutesRequest {
}

message TEvRoutesResponse {
    Yql.DqsProto.RoutesResponse Response = 1;
}

message TPullRequest {
    uint32 RowThreshold = 1;
}

enum EPullResponseType {
    UNKNOWN = 0;
    CONTINUE = 1;
    FINISH = 2;
    YIELD = 3;
    ERROR = 4;
}

message TMetric {
    string Name = 1;
    int64 Sum = 2;
    int64 Max = 3;
    int64 Min = 4;
    int64 Avg = 5;
    int64 Count = 6;
}

message TRusage {
    int64 Utime = 1;
    int64 Stime = 2;
    int64 MajorPageFaults = 3;
}

message TPullResponse {
    EPullResponseType ResponseType = 1;
    TData Data = 2;
    repeated TMetric Metric = 3;
    string ErrorMessage = 4;
}

message TQueryResponse {
    reserved 4, 6;
    Ydb.ResultSet ResultSet = 1;
    repeated Ydb.Issue.IssueMessage Issues = 2;
    bytes Yson = 3;
    repeated TMetric Metric = 5;
    bool Truncated = 7;
    uint64 RowsCount = 8;
    NYql.NDqProto.StatusIds.StatusCode StatusCode = 9;
}

message TDqFailure {
    reserved 6, 7;
    repeated Ydb.Issue.IssueMessage Issues = 4;
    repeated TMetric Metric = 5;
    NYql.NDqProto.StatusIds.StatusCode StatusCode = 8;
};

message TDqStats {
    repeated Ydb.Issue.IssueMessage Issues = 1;
    repeated TMetric Metric = 2;
};

message TGraphRequest {
    Yql.DqsProto.ExecuteGraphRequest Request = 1;
    NActorsProto.TActorId ControlId = 2;
    NActorsProto.TActorId ResultId = 3;
    reserved 4;
}

message TDqTaskRequest {
    NYql.NDqProto.TDqTask Task = 1;
}

message TReadyState {
    NActorsProto.TActorId SourceId = 1;
    string ResultType = 2;
    repeated TMetric Metric = 3;
    repeated NYql.NDqProto.TDqTask Task = 4; // used for compute actor
    repeated NActorsProto.TActorId ActorId = 5; // used for compute actor
    NYql.NDqProto.EDqStatsMode StatsMode = 6;
}

enum EGraphExecutionEventType {
    SYNC = 0;
    START = 1;
    FAIL = 2;
    SUCCESS = 3;
    FULL_RESULT = 4;
}

message TGraphExecutionEvent {
    EGraphExecutionEventType EventType = 1;
    google.protobuf.Any Message = 2;
    optional string ErrorMessage = 3;

    message TMap {
        map<string, bytes> Data = 1;
    }

    message TExecuteGraphDescriptor {
        TMap SecureParams = 1;
        TMap GraphParams = 2;
    }

    message TFullResultDescriptor {
        bytes ResultType = 1;
    }
}

// legacy
message TFullResultWriterStatusRequest {
}

// legacy
message TFullResultWriterStatusResponse {
    uint64 BytesReceived = 1;
    optional string ErrorMessage = 2;
}

message TFullResultWriterWriteRequest {
    TData Data = 1;
    bool Finish = 2;
    bytes MessageId = 3;
}

message TFullResultWriterAck {
    bytes MessageId = 1;
}

message TDqTaskPrepareResult {
    bool Result = 1;
    repeated TMetric Metric = 2;
}

message TEvGetMasterRequest {
    bool IsForwarded = 1;
}

message TEvGetMasterResponse {
    Yql.DqsProto.GetMasterResponse Response = 1;
}

message TEvConfigureFailureInjectorRequest {
    Yql.DqsProto.ConfigureFailureInjectorRequest Request = 1;
}

message TEvConfigureFailureInjectorRequestResponse {
    Yql.DqsProto.ConfigureFailureInjectorResponse Response = 1;
}

message TPingRequest {

}

message TPingResponse {

}
