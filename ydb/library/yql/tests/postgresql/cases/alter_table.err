Registering pre-existing tables
	stud_emp
	onek
	tenk1
<sql-statement>
--
-- ALTER_TABLE
--
-- Clean up in case a prior regression run failed
SET client_min_messages TO 'warning';
</sql-statement>
<sql-statement>
DROP ROLE IF EXISTS regress_alter_table_user1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 287
    	DROP ROLE IF EXISTS regress_alter_table_user1;
	^
<sql-statement>
RESET client_min_messages;
</sql-statement>
<sql-statement>
CREATE USER regress_alter_table_user1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 285
    	CREATE USER regress_alter_table_user1;
	^
<sql-statement>
--
-- add attribute
--
CREATE TABLE attmp (initial int4);
</sql-statement>
<sql-statement>
COMMENT ON TABLE attmp_wrong IS 'table comment';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	COMMENT ON TABLE attmp_wrong IS 'table comment';
	^
<sql-statement>
COMMENT ON TABLE attmp IS 'table comment';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	COMMENT ON TABLE attmp IS 'table comment';
	^
<sql-statement>
COMMENT ON TABLE attmp IS NULL;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	COMMENT ON TABLE attmp IS NULL;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN xmin integer; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN xmin integer; -- fails
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN a int4 default 3;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN a int4 default 3;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN b name;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN b name;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN c text;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN c text;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN d float8;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN d float8;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN e float4;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN e float4;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN f int2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN f int2;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN g polygon;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN g polygon;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN i char;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN i char;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN k int4;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN k int4;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN l tid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN l tid;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN m xid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN m xid;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN n oidvector;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN n oidvector;
	^
<sql-statement>
--ALTER TABLE attmp ADD COLUMN o lock;
ALTER TABLE attmp ADD COLUMN p boolean;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	--ALTER TABLE attmp ADD COLUMN o lock;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN q point;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN q point;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN r lseg;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN r lseg;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN s path;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN s path;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN t box;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN t box;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN v timestamp;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN v timestamp;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN w interval;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN w interval;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN x float8[];
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN x float8[];
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN y float4[];
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN y float4[];
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN z int2[];
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN z int2[];
	^
<sql-statement>
INSERT INTO attmp (a, b, c, d, e, f, g,    i,    k, l, m, n, p, q, r, s, t,
	v, w, x, y, z)
   VALUES (4, 'name', 'text', 4.1, 4.1, 2, '(4.1,4.1,3.1,3.1)',
	'c',
	314159, '(1,1)', '512',
	'1 2 3 4 5 6 7 8', true, '(1.1,1.1)', '(4.1,4.1,3.1,3.1)',
	'(0,2,4.1,4.1,3.1,3.1)', '(4.1,4.1,3.1,3.1)',
	'epoch', '01:00:10', '{1.0,2.0,3.0,4.0}', '{1.0,2.0,3.0,4.0}', '{1,2,3,4}');
</sql-statement>
<sql-statement>
SELECT * FROM attmp;
</sql-statement>
<sql-statement>
DROP TABLE attmp;
</sql-statement>
<sql-statement>
-- the wolf bug - schema mods caused inconsistent row descriptors
CREATE TABLE attmp (
	initial 	int4
);
</sql-statement>
<sql-statement>
ALTER TABLE attmp ADD COLUMN a int4;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN a int4;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN b name;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN b name;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN c text;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN c text;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN d float8;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN d float8;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN e float4;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN e float4;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN f int2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN f int2;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN g polygon;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN g polygon;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN i char;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN i char;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN k int4;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN k int4;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN l tid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN l tid;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN m xid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN m xid;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN n oidvector;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN n oidvector;
	^
<sql-statement>
--ALTER TABLE attmp ADD COLUMN o lock;
ALTER TABLE attmp ADD COLUMN p boolean;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	--ALTER TABLE attmp ADD COLUMN o lock;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN q point;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN q point;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN r lseg;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN r lseg;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN s path;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN s path;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN t box;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN t box;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN v timestamp;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN v timestamp;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN w interval;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN w interval;
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN x float8[];
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN x float8[];
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN y float4[];
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN y float4[];
	^
<sql-statement>
ALTER TABLE attmp ADD COLUMN z int2[];
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp ADD COLUMN z int2[];
	^
<sql-statement>
INSERT INTO attmp (a, b, c, d, e, f, g,    i,   k, l, m, n, p, q, r, s, t,
	v, w, x, y, z)
   VALUES (4, 'name', 'text', 4.1, 4.1, 2, '(4.1,4.1,3.1,3.1)',
        'c',
	314159, '(1,1)', '512',
	'1 2 3 4 5 6 7 8', true, '(1.1,1.1)', '(4.1,4.1,3.1,3.1)',
	'(0,2,4.1,4.1,3.1,3.1)', '(4.1,4.1,3.1,3.1)',
	'epoch', '01:00:10', '{1.0,2.0,3.0,4.0}', '{1.0,2.0,3.0,4.0}', '{1,2,3,4}');
</sql-statement>
<sql-statement>
SELECT * FROM attmp;
</sql-statement>
<sql-statement>
CREATE INDEX attmp_idx ON attmp (a, (d + e), b);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: index expression is not supported yet
    	CREATE INDEX attmp_idx ON attmp (a, (d + e), b);
	^
<sql-statement>
ALTER INDEX attmp_idx ALTER COLUMN 0 SET STATISTICS 1000;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:37: Error: ERROR:  column number must be in range from 1 to 32767

    	ALTER INDEX attmp_idx ALTER COLUMN 0 SET STATISTICS 1000;
	                                    ^
<sql-statement>
ALTER INDEX attmp_idx ALTER COLUMN 1 SET STATISTICS 1000;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER INDEX attmp_idx ALTER COLUMN 1 SET STATISTICS 1000;
	^
<sql-statement>
ALTER INDEX attmp_idx ALTER COLUMN 2 SET STATISTICS 1000;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER INDEX attmp_idx ALTER COLUMN 2 SET STATISTICS 1000;
	^
<sql-statement>
\d+ attmp_idx
</sql-statement>
Metacommand \d+ attmp_idx is not supported
<sql-statement>
ALTER INDEX attmp_idx ALTER COLUMN 3 SET STATISTICS 1000;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER INDEX attmp_idx ALTER COLUMN 3 SET STATISTICS 1000;
	^
<sql-statement>
ALTER INDEX attmp_idx ALTER COLUMN 4 SET STATISTICS 1000;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER INDEX attmp_idx ALTER COLUMN 4 SET STATISTICS 1000;
	^
<sql-statement>
ALTER INDEX attmp_idx ALTER COLUMN 2 SET STATISTICS -1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER INDEX attmp_idx ALTER COLUMN 2 SET STATISTICS -1;
	^
<sql-statement>
DROP TABLE attmp;
</sql-statement>
<sql-statement>
-- fails with incorrect object type
CREATE VIEW at_v1 AS SELECT 1 as a;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: expected at least one target column
    	-- fails with incorrect object type
	^
<sql-statement>
ALTER TABLE at_v1 ALTER COLUMN a SET STATISTICS 0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE at_v1 ALTER COLUMN a SET STATISTICS 0;
	^
<sql-statement>
DROP VIEW at_v1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: View not found: 'at_v1'
    	DROP VIEW at_v1;
	^
<sql-statement>
--
-- rename - check on both non-temp and temp tables
--
CREATE TABLE attmp (regtable int);
</sql-statement>
<sql-statement>
CREATE TEMP TABLE attmp (attmptable int);
</sql-statement>
<sql-statement>
ALTER TABLE attmp RENAME TO attmp_new;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE attmp RENAME TO attmp_new;
	^
<sql-statement>
SELECT * FROM attmp;
</sql-statement>
<sql-statement>
SELECT * FROM attmp_new;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.attmp_new
    
<sql-statement>
ALTER TABLE attmp RENAME TO attmp_new2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE attmp RENAME TO attmp_new2;
	^
<sql-statement>
SELECT * FROM attmp;		-- should fail
</sql-statement>
<sql-statement>
SELECT * FROM attmp_new;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.attmp_new
    
<sql-statement>
SELECT * FROM attmp_new2;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.attmp_new2
    
<sql-statement>
DROP TABLE attmp_new;
</sql-statement>
<sql-statement>
DROP TABLE attmp_new2;
</sql-statement>
<sql-statement>
-- check rename of partitioned tables and indexes also
CREATE TABLE part_attmp (a int primary key) partition by range (a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: PARTITION BY clause not supported
    	-- check rename of partitioned tables and indexes also
	^
<sql-statement>
CREATE TABLE part_attmp1 PARTITION OF part_attmp FOR VALUES FROM (0) TO (100);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	CREATE TABLE part_attmp1 PARTITION OF part_attmp FOR VALUES FROM (0) TO (100);
	^
<sql-statement>
ALTER INDEX part_attmp_pkey RENAME TO part_attmp_index;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX part_attmp_pkey RENAME TO part_attmp_index;
	^
<sql-statement>
ALTER INDEX part_attmp1_pkey RENAME TO part_attmp1_index;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX part_attmp1_pkey RENAME TO part_attmp1_index;
	^
<sql-statement>
ALTER TABLE part_attmp RENAME TO part_at2tmp;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE part_attmp RENAME TO part_at2tmp;
	^
<sql-statement>
ALTER TABLE part_attmp1 RENAME TO part_at2tmp1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE part_attmp1 RENAME TO part_at2tmp1;
	^
<sql-statement>
SET ROLE regress_alter_table_user1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported name: role
    	SET ROLE regress_alter_table_user1;
	^
<sql-statement>
ALTER INDEX part_attmp_index RENAME TO fail;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX part_attmp_index RENAME TO fail;
	^
<sql-statement>
ALTER INDEX part_attmp1_index RENAME TO fail;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX part_attmp1_index RENAME TO fail;
	^
<sql-statement>
ALTER TABLE part_at2tmp RENAME TO fail;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE part_at2tmp RENAME TO fail;
	^
<sql-statement>
ALTER TABLE part_at2tmp1 RENAME TO fail;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE part_at2tmp1 RENAME TO fail;
	^
<sql-statement>
RESET ROLE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported kind: 4
    	RESET ROLE;
	^
<sql-statement>
DROP TABLE part_at2tmp;
</sql-statement>
<sql-statement>
--
-- check renaming to a table's array type's autogenerated name
-- (the array type's name should get out of the way)
--
CREATE TABLE attmp_array (id int);
</sql-statement>
<sql-statement>
CREATE TABLE attmp_array2 (id int);
</sql-statement>
<sql-statement>
SELECT typname FROM pg_type WHERE oid = 'attmp_array[]'::regtype;
</sql-statement>
-stdin-:<main>: Fatal: Execution

    -stdin-:<main>:1:1: Fatal: Execution of node: Result
    	SELECT typname FROM pg_type WHERE oid = 'attmp_array[]'::regtype;
	^
        -stdin-:<main>:1:1: Fatal: ERROR:  type "attmp_array[]" does not exist

        	SELECT typname FROM pg_type WHERE oid = 'attmp_array[]'::regtype;
	^
<sql-statement>
SELECT typname FROM pg_type WHERE oid = 'attmp_array2[]'::regtype;
</sql-statement>
-stdin-:<main>: Fatal: Execution

    -stdin-:<main>:1:1: Fatal: Execution of node: Result
    	SELECT typname FROM pg_type WHERE oid = 'attmp_array2[]'::regtype;
	^
        -stdin-:<main>:1:1: Fatal: ERROR:  type "attmp_array2[]" does not exist

        	SELECT typname FROM pg_type WHERE oid = 'attmp_array2[]'::regtype;
	^
<sql-statement>
ALTER TABLE attmp_array2 RENAME TO _attmp_array;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE attmp_array2 RENAME TO _attmp_array;
	^
<sql-statement>
SELECT typname FROM pg_type WHERE oid = 'attmp_array[]'::regtype;
</sql-statement>
-stdin-:<main>: Fatal: Execution

    -stdin-:<main>:1:1: Fatal: Execution of node: Result
    	SELECT typname FROM pg_type WHERE oid = 'attmp_array[]'::regtype;
	^
        -stdin-:<main>:1:1: Fatal: ERROR:  type "attmp_array[]" does not exist

        	SELECT typname FROM pg_type WHERE oid = 'attmp_array[]'::regtype;
	^
<sql-statement>
SELECT typname FROM pg_type WHERE oid = '_attmp_array[]'::regtype;
</sql-statement>
-stdin-:<main>: Fatal: Execution

    -stdin-:<main>:1:1: Fatal: Execution of node: Result
    	SELECT typname FROM pg_type WHERE oid = '_attmp_array[]'::regtype;
	^
        -stdin-:<main>:1:1: Fatal: ERROR:  type "_attmp_array[]" does not exist

        	SELECT typname FROM pg_type WHERE oid = '_attmp_array[]'::regtype;
	^
<sql-statement>
DROP TABLE _attmp_array;
</sql-statement>
<sql-statement>
DROP TABLE attmp_array;
</sql-statement>
<sql-statement>
-- renaming to table's own array type's name is an interesting corner case
CREATE TABLE attmp_array (id int);
</sql-statement>
<sql-statement>
SELECT typname FROM pg_type WHERE oid = 'attmp_array[]'::regtype;
</sql-statement>
-stdin-:<main>: Fatal: Execution

    -stdin-:<main>:1:1: Fatal: Execution of node: Result
    	SELECT typname FROM pg_type WHERE oid = 'attmp_array[]'::regtype;
	^
        -stdin-:<main>:1:1: Fatal: ERROR:  type "attmp_array[]" does not exist

        	SELECT typname FROM pg_type WHERE oid = 'attmp_array[]'::regtype;
	^
<sql-statement>
ALTER TABLE attmp_array RENAME TO _attmp_array;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE attmp_array RENAME TO _attmp_array;
	^
<sql-statement>
SELECT typname FROM pg_type WHERE oid = '_attmp_array[]'::regtype;
</sql-statement>
-stdin-:<main>: Fatal: Execution

    -stdin-:<main>:1:1: Fatal: Execution of node: Result
    	SELECT typname FROM pg_type WHERE oid = '_attmp_array[]'::regtype;
	^
        -stdin-:<main>:1:1: Fatal: ERROR:  type "_attmp_array[]" does not exist

        	SELECT typname FROM pg_type WHERE oid = '_attmp_array[]'::regtype;
	^
<sql-statement>
DROP TABLE _attmp_array;
</sql-statement>
<sql-statement>
-- ALTER TABLE ... RENAME on non-table relations
-- renaming indexes (FIXME: this should probably test the index's functionality)
ALTER INDEX IF EXISTS __onek_unique1 RENAME TO attmp_onek_unique1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	-- ALTER TABLE ... RENAME on non-table relations
	^
<sql-statement>
ALTER INDEX IF EXISTS __attmp_onek_unique1 RENAME TO onek_unique1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX IF EXISTS __attmp_onek_unique1 RENAME TO onek_unique1;
	^
<sql-statement>
ALTER INDEX onek_unique1 RENAME TO attmp_onek_unique1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX onek_unique1 RENAME TO attmp_onek_unique1;
	^
<sql-statement>
ALTER INDEX attmp_onek_unique1 RENAME TO onek_unique1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX attmp_onek_unique1 RENAME TO onek_unique1;
	^
<sql-statement>
SET ROLE regress_alter_table_user1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported name: role
    	SET ROLE regress_alter_table_user1;
	^
<sql-statement>
ALTER INDEX onek_unique1 RENAME TO fail;  -- permission denied
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX onek_unique1 RENAME TO fail;  -- permission denied
	^
<sql-statement>
RESET ROLE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported kind: 4
    	RESET ROLE;
	^
<sql-statement>
-- rename statements with mismatching statement and object types
CREATE TABLE alter_idx_rename_test (a INT);
</sql-statement>
<sql-statement>
CREATE INDEX alter_idx_rename_test_idx ON alter_idx_rename_test (a);
</sql-statement>
<sql-statement>
CREATE TABLE alter_idx_rename_test_parted (a INT) PARTITION BY LIST (a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: PARTITION BY clause not supported
    	CREATE TABLE alter_idx_rename_test_parted (a INT) PARTITION BY LIST (a);
	^
<sql-statement>
CREATE INDEX alter_idx_rename_test_parted_idx ON alter_idx_rename_test_parted (a);
</sql-statement>
<sql-statement>
BEGIN;
</sql-statement>
<sql-statement>
ALTER INDEX alter_idx_rename_test RENAME TO alter_idx_rename_test_2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX alter_idx_rename_test RENAME TO alter_idx_rename_test_2;
	^
<sql-statement>
ALTER INDEX alter_idx_rename_test_parted RENAME TO alter_idx_rename_test_parted_2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX alter_idx_rename_test_parted RENAME TO alter_idx_rename_test_parted_2;
	^
<sql-statement>
SELECT relation::regclass, mode FROM pg_locks
WHERE pid = pg_backend_pid() AND locktype = 'relation'
  AND relation::regclass::text LIKE 'alter\_idx%'
ORDER BY relation::regclass::text COLLATE "C";
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: alternative is not implemented yet : 365
    	SELECT relation::regclass, mode FROM pg_locks
	^
<sql-statement>
COMMIT;
</sql-statement>
<sql-statement>
BEGIN;
</sql-statement>
<sql-statement>
ALTER INDEX alter_idx_rename_test_idx RENAME TO alter_idx_rename_test_idx_2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX alter_idx_rename_test_idx RENAME TO alter_idx_rename_test_idx_2;
	^
<sql-statement>
ALTER INDEX alter_idx_rename_test_parted_idx RENAME TO alter_idx_rename_test_parted_idx_2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX alter_idx_rename_test_parted_idx RENAME TO alter_idx_rename_test_parted_idx_2;
	^
<sql-statement>
SELECT relation::regclass, mode FROM pg_locks
WHERE pid = pg_backend_pid() AND locktype = 'relation'
  AND relation::regclass::text LIKE 'alter\_idx%'
ORDER BY relation::regclass::text COLLATE "C";
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: alternative is not implemented yet : 365
    	SELECT relation::regclass, mode FROM pg_locks
	^
<sql-statement>
COMMIT;
</sql-statement>
<sql-statement>
BEGIN;
</sql-statement>
<sql-statement>
ALTER TABLE alter_idx_rename_test_idx_2 RENAME TO alter_idx_rename_test_idx_3;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE alter_idx_rename_test_idx_2 RENAME TO alter_idx_rename_test_idx_3;
	^
<sql-statement>
ALTER TABLE alter_idx_rename_test_parted_idx_2 RENAME TO alter_idx_rename_test_parted_idx_3;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE alter_idx_rename_test_parted_idx_2 RENAME TO alter_idx_rename_test_parted_idx_3;
	^
<sql-statement>
SELECT relation::regclass, mode FROM pg_locks
WHERE pid = pg_backend_pid() AND locktype = 'relation'
  AND relation::regclass::text LIKE 'alter\_idx%'
ORDER BY relation::regclass::text COLLATE "C";
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: alternative is not implemented yet : 365
    	SELECT relation::regclass, mode FROM pg_locks
	^
<sql-statement>
COMMIT;
</sql-statement>
<sql-statement>
DROP TABLE alter_idx_rename_test_2;
</sql-statement>
<sql-statement>
-- renaming views
CREATE VIEW attmp_view (unique1) AS SELECT unique1 FROM tenk1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>: Error: Not all views have been dropped
    
<sql-statement>
ALTER TABLE attmp_view RENAME TO attmp_view_new;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE attmp_view RENAME TO attmp_view_new;
	^
<sql-statement>
SET ROLE regress_alter_table_user1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported name: role
    	SET ROLE regress_alter_table_user1;
	^
<sql-statement>
ALTER VIEW attmp_view_new RENAME TO fail;  -- permission denied
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER VIEW attmp_view_new RENAME TO fail;  -- permission denied
	^
<sql-statement>
RESET ROLE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported kind: 4
    	RESET ROLE;
	^
<sql-statement>
-- hack to ensure we get an indexscan here
set enable_seqscan to off;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported name: enable_seqscan
    	-- hack to ensure we get an indexscan here
	^
<sql-statement>
set enable_bitmapscan to off;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported name: enable_bitmapscan
    	set enable_bitmapscan to off;
	^
<sql-statement>
-- 5 values, sorted
SELECT unique1 FROM tenk1 WHERE unique1 < 5;
</sql-statement>
<sql-statement>
reset enable_seqscan;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported kind: 4
    	reset enable_seqscan;
	^
<sql-statement>
reset enable_bitmapscan;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported kind: 4
    	reset enable_bitmapscan;
	^
<sql-statement>
DROP VIEW attmp_view_new;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: View not found: 'attmp_view_new'
    	DROP VIEW attmp_view_new;
	^
<sql-statement>
-- toast-like relation name
alter table stud_emp rename to pg_toast_stud_emp;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	-- toast-like relation name
	^
<sql-statement>
alter table pg_toast_stud_emp rename to stud_emp;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	alter table pg_toast_stud_emp rename to stud_emp;
	^
<sql-statement>
-- renaming index should rename constraint as well
ALTER TABLE onek ADD CONSTRAINT onek_unique1_constraint UNIQUE (unique1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- renaming index should rename constraint as well
	^
<sql-statement>
ALTER INDEX onek_unique1_constraint RENAME TO onek_unique1_constraint_foo;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER INDEX onek_unique1_constraint RENAME TO onek_unique1_constraint_foo;
	^
<sql-statement>
ALTER TABLE onek DROP CONSTRAINT onek_unique1_constraint_foo;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE onek DROP CONSTRAINT onek_unique1_constraint_foo;
	^
<sql-statement>
-- renaming constraint
ALTER TABLE onek ADD CONSTRAINT onek_check_constraint CHECK (unique1 >= 0);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- renaming constraint
	^
<sql-statement>
ALTER TABLE onek RENAME CONSTRAINT onek_check_constraint TO onek_check_constraint_foo;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE onek RENAME CONSTRAINT onek_check_constraint TO onek_check_constraint_foo;
	^
<sql-statement>
ALTER TABLE onek DROP CONSTRAINT onek_check_constraint_foo;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE onek DROP CONSTRAINT onek_check_constraint_foo;
	^
<sql-statement>
-- renaming constraint should rename index as well
ALTER TABLE onek ADD CONSTRAINT onek_unique1_constraint UNIQUE (unique1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- renaming constraint should rename index as well
	^
<sql-statement>
DROP INDEX onek_unique1_constraint;  -- to see whether it's there
</sql-statement>
-stdin-:<main>: Error: Pre type annotation

    -stdin-:<main>:1:1: Error: Unexpected tag: pgObject
    	DROP INDEX onek_unique1_constraint;  -- to see whether it's there
	^
<sql-statement>
ALTER TABLE onek RENAME CONSTRAINT onek_unique1_constraint TO onek_unique1_constraint_foo;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE onek RENAME CONSTRAINT onek_unique1_constraint TO onek_unique1_constraint_foo;
	^
<sql-statement>
DROP INDEX onek_unique1_constraint_foo;  -- to see whether it's there
</sql-statement>
-stdin-:<main>: Error: Pre type annotation

    -stdin-:<main>:1:1: Error: Unexpected tag: pgObject
    	DROP INDEX onek_unique1_constraint_foo;  -- to see whether it's there
	^
<sql-statement>
ALTER TABLE onek DROP CONSTRAINT onek_unique1_constraint_foo;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE onek DROP CONSTRAINT onek_unique1_constraint_foo;
	^
<sql-statement>
-- renaming constraints vs. inheritance
CREATE TABLE constraint_rename_test (a int CONSTRAINT con1 CHECK (a > 0), b int, c int);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: column constraint not supported
    	-- renaming constraints vs. inheritance
	^
<sql-statement>
\d constraint_rename_test
</sql-statement>
Metacommand \d constraint_rename_test is not supported
<sql-statement>
CREATE TABLE constraint_rename_test2 (a int CONSTRAINT con1 CHECK (a > 0), d int) INHERITS (constraint_rename_test);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	CREATE TABLE constraint_rename_test2 (a int CONSTRAINT con1 CHECK (a > 0), d int) INHERITS (constraint_rename_test);
	^
<sql-statement>
\d constraint_rename_test2
</sql-statement>
Metacommand \d constraint_rename_test2 is not supported
<sql-statement>
ALTER TABLE constraint_rename_test2 RENAME CONSTRAINT con1 TO con1foo; -- fail
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE constraint_rename_test2 RENAME CONSTRAINT con1 TO con1foo; -- fail
	^
<sql-statement>
ALTER TABLE ONLY constraint_rename_test RENAME CONSTRAINT con1 TO con1foo; -- fail
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE ONLY constraint_rename_test RENAME CONSTRAINT con1 TO con1foo; -- fail
	^
<sql-statement>
ALTER TABLE constraint_rename_test RENAME CONSTRAINT con1 TO con1foo; -- ok
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE constraint_rename_test RENAME CONSTRAINT con1 TO con1foo; -- ok
	^
<sql-statement>
\d constraint_rename_test
</sql-statement>
Metacommand \d constraint_rename_test is not supported
<sql-statement>
\d constraint_rename_test2
</sql-statement>
Metacommand \d constraint_rename_test2 is not supported
<sql-statement>
ALTER TABLE constraint_rename_test ADD CONSTRAINT con2 CHECK (b > 0) NO INHERIT;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE constraint_rename_test ADD CONSTRAINT con2 CHECK (b > 0) NO INHERIT;
	^
<sql-statement>
ALTER TABLE ONLY constraint_rename_test RENAME CONSTRAINT con2 TO con2foo; -- ok
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE ONLY constraint_rename_test RENAME CONSTRAINT con2 TO con2foo; -- ok
	^
<sql-statement>
ALTER TABLE constraint_rename_test RENAME CONSTRAINT con2foo TO con2bar; -- ok
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE constraint_rename_test RENAME CONSTRAINT con2foo TO con2bar; -- ok
	^
<sql-statement>
\d constraint_rename_test
</sql-statement>
Metacommand \d constraint_rename_test is not supported
<sql-statement>
\d constraint_rename_test2
</sql-statement>
Metacommand \d constraint_rename_test2 is not supported
<sql-statement>
ALTER TABLE constraint_rename_test ADD CONSTRAINT con3 PRIMARY KEY (a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE constraint_rename_test ADD CONSTRAINT con3 PRIMARY KEY (a);
	^
<sql-statement>
ALTER TABLE constraint_rename_test RENAME CONSTRAINT con3 TO con3foo; -- ok
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE constraint_rename_test RENAME CONSTRAINT con3 TO con3foo; -- ok
	^
<sql-statement>
\d constraint_rename_test
</sql-statement>
Metacommand \d constraint_rename_test is not supported
<sql-statement>
\d constraint_rename_test2
</sql-statement>
Metacommand \d constraint_rename_test2 is not supported
<sql-statement>
DROP TABLE constraint_rename_test2;
</sql-statement>
<sql-statement>
DROP TABLE constraint_rename_test;
</sql-statement>
<sql-statement>
ALTER TABLE IF EXISTS constraint_not_exist RENAME CONSTRAINT con3 TO con3foo; -- ok
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE IF EXISTS constraint_not_exist RENAME CONSTRAINT con3 TO con3foo; -- ok
	^
<sql-statement>
ALTER TABLE IF EXISTS constraint_rename_test ADD CONSTRAINT con4 UNIQUE (a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE IF EXISTS constraint_rename_test ADD CONSTRAINT con4 UNIQUE (a);
	^
<sql-statement>
-- renaming constraints with cache reset of target relation
CREATE TABLE constraint_rename_cache (a int,
  CONSTRAINT chk_a CHECK (a > 0),
  PRIMARY KEY (a));
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table constraint not supported
    	-- renaming constraints with cache reset of target relation
	^
<sql-statement>
ALTER TABLE constraint_rename_cache
  RENAME CONSTRAINT chk_a TO chk_a_new;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE constraint_rename_cache
	^
<sql-statement>
ALTER TABLE constraint_rename_cache
  RENAME CONSTRAINT constraint_rename_cache_pkey TO constraint_rename_pkey_new;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE constraint_rename_cache
	^
<sql-statement>
CREATE TABLE like_constraint_rename_cache
  (LIKE constraint_rename_cache INCLUDING ALL);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: CreateStmt: alternative is not implemented yet : 389
    	CREATE TABLE like_constraint_rename_cache
	^
<sql-statement>
\d like_constraint_rename_cache
</sql-statement>
Metacommand \d like_constraint_rename_cache is not supported
<sql-statement>
DROP TABLE constraint_rename_cache;
</sql-statement>
<sql-statement>
DROP TABLE like_constraint_rename_cache;
</sql-statement>
<sql-statement>
-- FOREIGN KEY CONSTRAINT adding TEST
CREATE TABLE attmp2 (a int primary key);
</sql-statement>
<sql-statement>
CREATE TABLE attmp3 (a int, b int);
</sql-statement>
<sql-statement>
CREATE TABLE attmp4 (a int, b int, unique(a,b));
</sql-statement>
<sql-statement>
CREATE TABLE attmp5 (a int, b int);
</sql-statement>
<sql-statement>
-- Insert rows into attmp2 (pktable)
INSERT INTO attmp2 values (1);
</sql-statement>
<sql-statement>
INSERT INTO attmp2 values (2);
</sql-statement>
<sql-statement>
INSERT INTO attmp2 values (3);
</sql-statement>
<sql-statement>
INSERT INTO attmp2 values (4);
</sql-statement>
<sql-statement>
-- Insert rows into attmp3
INSERT INTO attmp3 values (1,10);
</sql-statement>
<sql-statement>
INSERT INTO attmp3 values (1,20);
</sql-statement>
<sql-statement>
INSERT INTO attmp3 values (5,50);
</sql-statement>
<sql-statement>
-- Try (and fail) to add constraint due to invalid source columns
ALTER TABLE attmp3 add constraint attmpconstr foreign key(c) references attmp2 match full;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- Try (and fail) to add constraint due to invalid source columns
	^
<sql-statement>
-- Try (and fail) to add constraint due to invalid destination columns explicitly given
ALTER TABLE attmp3 add constraint attmpconstr foreign key(a) references attmp2(b) match full;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- Try (and fail) to add constraint due to invalid destination columns explicitly given
	^
<sql-statement>
-- Try (and fail) to add constraint due to invalid data
ALTER TABLE attmp3 add constraint attmpconstr foreign key (a) references attmp2 match full;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- Try (and fail) to add constraint due to invalid data
	^
<sql-statement>
-- Delete failing row
DELETE FROM attmp3 where a=5;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
-- Try (and succeed)
ALTER TABLE attmp3 add constraint attmpconstr foreign key (a) references attmp2 match full;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- Try (and succeed)
	^
<sql-statement>
ALTER TABLE attmp3 drop constraint attmpconstr;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp3 drop constraint attmpconstr;
	^
<sql-statement>
INSERT INTO attmp3 values (5,50);
</sql-statement>
<sql-statement>
-- Try NOT VALID and then VALIDATE CONSTRAINT, but fails. Delete failure then re-validate
ALTER TABLE attmp3 add constraint attmpconstr foreign key (a) references attmp2 match full NOT VALID;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- Try NOT VALID and then VALIDATE CONSTRAINT, but fails. Delete failure then re-validate
	^
<sql-statement>
ALTER TABLE attmp3 validate constraint attmpconstr;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp3 validate constraint attmpconstr;
	^
<sql-statement>
-- Delete failing row
DELETE FROM attmp3 where a=5;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
-- Try (and succeed) and repeat to show it works on already valid constraint
ALTER TABLE attmp3 validate constraint attmpconstr;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- Try (and succeed) and repeat to show it works on already valid constraint
	^
<sql-statement>
ALTER TABLE attmp3 validate constraint attmpconstr;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp3 validate constraint attmpconstr;
	^
<sql-statement>
-- Try a non-verified CHECK constraint
ALTER TABLE attmp3 ADD CONSTRAINT b_greater_than_ten CHECK (b > 10); -- fail
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- Try a non-verified CHECK constraint
	^
<sql-statement>
ALTER TABLE attmp3 ADD CONSTRAINT b_greater_than_ten CHECK (b > 10) NOT VALID; -- succeeds
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp3 ADD CONSTRAINT b_greater_than_ten CHECK (b > 10) NOT VALID; -- succeeds
	^
<sql-statement>
ALTER TABLE attmp3 VALIDATE CONSTRAINT b_greater_than_ten; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp3 VALIDATE CONSTRAINT b_greater_than_ten; -- fails
	^
<sql-statement>
DELETE FROM attmp3 WHERE NOT b > 10;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
ALTER TABLE attmp3 VALIDATE CONSTRAINT b_greater_than_ten; -- succeeds
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp3 VALIDATE CONSTRAINT b_greater_than_ten; -- succeeds
	^
<sql-statement>
ALTER TABLE attmp3 VALIDATE CONSTRAINT b_greater_than_ten; -- succeeds
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp3 VALIDATE CONSTRAINT b_greater_than_ten; -- succeeds
	^
<sql-statement>
-- Test inherited NOT VALID CHECK constraints
select * from attmp3;
</sql-statement>
<sql-statement>
CREATE TABLE attmp6 () INHERITS (attmp3);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	CREATE TABLE attmp6 () INHERITS (attmp3);
	^
<sql-statement>
CREATE TABLE attmp7 () INHERITS (attmp3);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	CREATE TABLE attmp7 () INHERITS (attmp3);
	^
<sql-statement>
INSERT INTO attmp6 VALUES (6, 30), (7, 16);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.attmp6
    
<sql-statement>
ALTER TABLE attmp3 ADD CONSTRAINT b_le_20 CHECK (b <= 20) NOT VALID;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp3 ADD CONSTRAINT b_le_20 CHECK (b <= 20) NOT VALID;
	^
<sql-statement>
ALTER TABLE attmp3 VALIDATE CONSTRAINT b_le_20;	-- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp3 VALIDATE CONSTRAINT b_le_20;	-- fails
	^
<sql-statement>
DELETE FROM attmp6 WHERE b > 20;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
ALTER TABLE attmp3 VALIDATE CONSTRAINT b_le_20;	-- succeeds
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp3 VALIDATE CONSTRAINT b_le_20;	-- succeeds
	^
<sql-statement>
-- An already validated constraint must not be revalidated
CREATE FUNCTION boo(int) RETURNS int IMMUTABLE STRICT LANGUAGE plpgsql AS $$ BEGIN RAISE NOTICE 'boo: %', $1; RETURN $1; END; $$;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 261
    	-- An already validated constraint must not be revalidated
	^
<sql-statement>
INSERT INTO attmp7 VALUES (8, 18);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.attmp7
    
<sql-statement>
ALTER TABLE attmp7 ADD CONSTRAINT identity CHECK (b = boo(b));
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp7 ADD CONSTRAINT identity CHECK (b = boo(b));
	^
<sql-statement>
ALTER TABLE attmp3 ADD CONSTRAINT IDENTITY check (b = boo(b)) NOT VALID;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp3 ADD CONSTRAINT IDENTITY check (b = boo(b)) NOT VALID;
	^
<sql-statement>
ALTER TABLE attmp3 VALIDATE CONSTRAINT identity;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE attmp3 VALIDATE CONSTRAINT identity;
	^
<sql-statement>
-- A NO INHERIT constraint should not be looked for in children during VALIDATE CONSTRAINT
create table parent_noinh_convalid (a int);
</sql-statement>
<sql-statement>
create table child_noinh_convalid () inherits (parent_noinh_convalid);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table child_noinh_convalid () inherits (parent_noinh_convalid);
	^
<sql-statement>
insert into parent_noinh_convalid values (1);
</sql-statement>
<sql-statement>
insert into child_noinh_convalid values (1);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.child_noinh_convalid
    
<sql-statement>
alter table parent_noinh_convalid add constraint check_a_is_2 check (a = 2) no inherit not valid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table parent_noinh_convalid add constraint check_a_is_2 check (a = 2) no inherit not valid;
	^
<sql-statement>
-- fail, because of the row in parent
alter table parent_noinh_convalid validate constraint check_a_is_2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- fail, because of the row in parent
	^
<sql-statement>
delete from only parent_noinh_convalid;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
-- ok (parent itself contains no violating rows)
alter table parent_noinh_convalid validate constraint check_a_is_2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- ok (parent itself contains no violating rows)
	^
<sql-statement>
select convalidated from pg_constraint where conrelid = 'parent_noinh_convalid'::regclass and conname = 'check_a_is_2';
</sql-statement>
<sql-statement>
-- cleanup
drop table parent_noinh_convalid, child_noinh_convalid;
</sql-statement>
<sql-statement>
-- Try (and fail) to create constraint from attmp5(a) to attmp4(a) - unique constraint on
-- attmp4 is a,b
ALTER TABLE attmp5 add constraint attmpconstr foreign key(a) references attmp4(a) match full;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- Try (and fail) to create constraint from attmp5(a) to attmp4(a) - unique constraint on
	^
<sql-statement>
DROP TABLE attmp7;
</sql-statement>
<sql-statement>
DROP TABLE attmp6;
</sql-statement>
<sql-statement>
DROP TABLE attmp5;
</sql-statement>
<sql-statement>
DROP TABLE attmp4;
</sql-statement>
<sql-statement>
DROP TABLE attmp3;
</sql-statement>
<sql-statement>
DROP TABLE attmp2;
</sql-statement>
<sql-statement>
-- NOT VALID with plan invalidation -- ensure we don't use a constraint for
-- exclusion until validated
set constraint_exclusion TO 'partition';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported name: constraint_exclusion
    	-- NOT VALID with plan invalidation -- ensure we don't use a constraint for
	^
<sql-statement>
create table nv_parent (d date, check (false) no inherit not valid);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table constraint not supported
    	create table nv_parent (d date, check (false) no inherit not valid);
	^
<sql-statement>
-- not valid constraint added at creation time should automatically become valid
\d nv_parent
</sql-statement>
Metacommand \d nv_parent is not supported
<sql-statement>
create table nv_child_2010 () inherits (nv_parent);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table nv_child_2010 () inherits (nv_parent);
	^
<sql-statement>
create table nv_child_2011 () inherits (nv_parent);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table nv_child_2011 () inherits (nv_parent);
	^
<sql-statement>
alter table nv_child_2010 add check (d between '2010-01-01'::date and '2010-12-31'::date) not valid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table nv_child_2010 add check (d between '2010-01-01'::date and '2010-12-31'::date) not valid;
	^
<sql-statement>
alter table nv_child_2011 add check (d between '2011-01-01'::date and '2011-12-31'::date) not valid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table nv_child_2011 add check (d between '2011-01-01'::date and '2011-12-31'::date) not valid;
	^
<sql-statement>
explain (costs off) select * from nv_parent where d between '2011-08-01' and '2011-08-31';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	explain (costs off) select * from nv_parent where d between '2011-08-01' and '2011-08-31';
	^
<sql-statement>
create table nv_child_2009 (check (d between '2009-01-01'::date and '2009-12-31'::date)) inherits (nv_parent);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table nv_child_2009 (check (d between '2009-01-01'::date and '2009-12-31'::date)) inherits (nv_parent);
	^
<sql-statement>
explain (costs off) select * from nv_parent where d between '2011-08-01'::date and '2011-08-31'::date;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	explain (costs off) select * from nv_parent where d between '2011-08-01'::date and '2011-08-31'::date;
	^
<sql-statement>
explain (costs off) select * from nv_parent where d between '2009-08-01'::date and '2009-08-31'::date;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	explain (costs off) select * from nv_parent where d between '2009-08-01'::date and '2009-08-31'::date;
	^
<sql-statement>
-- after validation, the constraint should be used
alter table nv_child_2011 VALIDATE CONSTRAINT nv_child_2011_d_check;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- after validation, the constraint should be used
	^
<sql-statement>
explain (costs off) select * from nv_parent where d between '2009-08-01'::date and '2009-08-31'::date;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	explain (costs off) select * from nv_parent where d between '2009-08-01'::date and '2009-08-31'::date;
	^
<sql-statement>
-- add an inherited NOT VALID constraint
alter table nv_parent add check (d between '2001-01-01'::date and '2099-12-31'::date) not valid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add an inherited NOT VALID constraint
	^
<sql-statement>
\d nv_child_2009
</sql-statement>
Metacommand \d nv_child_2009 is not supported
<sql-statement>
-- we leave nv_parent and children around to help test pg_dump logic
-- Foreign key adding test with mixed types
-- Note: these tables are TEMP to avoid name conflicts when this test
-- is run in parallel with foreign_key.sql.
CREATE TEMP TABLE PKTABLE (ptest1 int PRIMARY KEY);
</sql-statement>
<sql-statement>
INSERT INTO PKTABLE VALUES(42);
</sql-statement>
<sql-statement>
CREATE TEMP TABLE FKTABLE (ftest1 inet);
</sql-statement>
<sql-statement>
-- This next should fail, because int=inet does not exist
ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- This next should fail, because int=inet does not exist
	^
<sql-statement>
-- This should also fail for the same reason, but here we
-- give the column name
ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable(ptest1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- This should also fail for the same reason, but here we
	^
<sql-statement>
DROP TABLE FKTABLE;
</sql-statement>
<sql-statement>
-- This should succeed, even though they are different types,
-- because int=int8 exists and is a member of the integer opfamily
CREATE TEMP TABLE FKTABLE (ftest1 int8);
</sql-statement>
<sql-statement>
ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable;
	^
<sql-statement>
-- Check it actually works
INSERT INTO FKTABLE VALUES(42);		-- should succeed
</sql-statement>
<sql-statement>
INSERT INTO FKTABLE VALUES(43);		-- should fail
</sql-statement>
<sql-statement>
DROP TABLE FKTABLE;
</sql-statement>
<sql-statement>
-- This should fail, because we'd have to cast numeric to int which is
-- not an implicit coercion (or use numeric=numeric, but that's not part
-- of the integer opfamily)
CREATE TEMP TABLE FKTABLE (ftest1 numeric);
</sql-statement>
<sql-statement>
ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable;
	^
<sql-statement>
DROP TABLE FKTABLE;
</sql-statement>
<sql-statement>
DROP TABLE PKTABLE;
</sql-statement>
<sql-statement>
-- On the other hand, this should work because int implicitly promotes to
-- numeric, and we allow promotion on the FK side
CREATE TEMP TABLE PKTABLE (ptest1 numeric PRIMARY KEY);
</sql-statement>
<sql-statement>
INSERT INTO PKTABLE VALUES(42);
</sql-statement>
<sql-statement>
CREATE TEMP TABLE FKTABLE (ftest1 int);
</sql-statement>
<sql-statement>
ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable;
	^
<sql-statement>
-- Check it actually works
INSERT INTO FKTABLE VALUES(42);		-- should succeed
</sql-statement>
<sql-statement>
INSERT INTO FKTABLE VALUES(43);		-- should fail
</sql-statement>
<sql-statement>
DROP TABLE FKTABLE;
</sql-statement>
<sql-statement>
DROP TABLE PKTABLE;
</sql-statement>
<sql-statement>
CREATE TEMP TABLE PKTABLE (ptest1 int, ptest2 inet,
                           PRIMARY KEY(ptest1, ptest2));
</sql-statement>
<sql-statement>
-- This should fail, because we just chose really odd types
CREATE TEMP TABLE FKTABLE (ftest1 cidr, ftest2 timestamp);
</sql-statement>
<sql-statement>
ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2) references pktable;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2) references pktable;
	^
<sql-statement>
DROP TABLE FKTABLE;
</sql-statement>
<sql-statement>
-- Again, so should this...
CREATE TEMP TABLE FKTABLE (ftest1 cidr, ftest2 timestamp);
</sql-statement>
<sql-statement>
ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2)
     references pktable(ptest1, ptest2);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2)
	^
<sql-statement>
DROP TABLE FKTABLE;
</sql-statement>
<sql-statement>
-- This fails because we mixed up the column ordering
CREATE TEMP TABLE FKTABLE (ftest1 int, ftest2 inet);
</sql-statement>
<sql-statement>
ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2)
     references pktable(ptest2, ptest1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2)
	^
<sql-statement>
-- As does this...
ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest2, ftest1)
     references pktable(ptest1, ptest2);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- As does this...
	^
<sql-statement>
DROP TABLE FKTABLE;
</sql-statement>
<sql-statement>
DROP TABLE PKTABLE;
</sql-statement>
<sql-statement>
-- Test that ALTER CONSTRAINT updates trigger deferrability properly
CREATE TEMP TABLE PKTABLE (ptest1 int primary key);
</sql-statement>
<sql-statement>
CREATE TEMP TABLE FKTABLE (ftest1 int);
</sql-statement>
<sql-statement>
ALTER TABLE FKTABLE ADD CONSTRAINT fknd FOREIGN KEY(ftest1) REFERENCES pktable
  ON DELETE CASCADE ON UPDATE NO ACTION NOT DEFERRABLE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ADD CONSTRAINT fknd FOREIGN KEY(ftest1) REFERENCES pktable
	^
<sql-statement>
ALTER TABLE FKTABLE ADD CONSTRAINT fkdd FOREIGN KEY(ftest1) REFERENCES pktable
  ON DELETE CASCADE ON UPDATE NO ACTION DEFERRABLE INITIALLY DEFERRED;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ADD CONSTRAINT fkdd FOREIGN KEY(ftest1) REFERENCES pktable
	^
<sql-statement>
ALTER TABLE FKTABLE ADD CONSTRAINT fkdi FOREIGN KEY(ftest1) REFERENCES pktable
  ON DELETE CASCADE ON UPDATE NO ACTION DEFERRABLE INITIALLY IMMEDIATE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ADD CONSTRAINT fkdi FOREIGN KEY(ftest1) REFERENCES pktable
	^
<sql-statement>
ALTER TABLE FKTABLE ADD CONSTRAINT fknd2 FOREIGN KEY(ftest1) REFERENCES pktable
  ON DELETE CASCADE ON UPDATE NO ACTION DEFERRABLE INITIALLY DEFERRED;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ADD CONSTRAINT fknd2 FOREIGN KEY(ftest1) REFERENCES pktable
	^
<sql-statement>
ALTER TABLE FKTABLE ALTER CONSTRAINT fknd2 NOT DEFERRABLE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ALTER CONSTRAINT fknd2 NOT DEFERRABLE;
	^
<sql-statement>
ALTER TABLE FKTABLE ADD CONSTRAINT fkdd2 FOREIGN KEY(ftest1) REFERENCES pktable
  ON DELETE CASCADE ON UPDATE NO ACTION NOT DEFERRABLE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ADD CONSTRAINT fkdd2 FOREIGN KEY(ftest1) REFERENCES pktable
	^
<sql-statement>
ALTER TABLE FKTABLE ALTER CONSTRAINT fkdd2 DEFERRABLE INITIALLY DEFERRED;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ALTER CONSTRAINT fkdd2 DEFERRABLE INITIALLY DEFERRED;
	^
<sql-statement>
ALTER TABLE FKTABLE ADD CONSTRAINT fkdi2 FOREIGN KEY(ftest1) REFERENCES pktable
  ON DELETE CASCADE ON UPDATE NO ACTION NOT DEFERRABLE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ADD CONSTRAINT fkdi2 FOREIGN KEY(ftest1) REFERENCES pktable
	^
<sql-statement>
ALTER TABLE FKTABLE ALTER CONSTRAINT fkdi2 DEFERRABLE INITIALLY IMMEDIATE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE FKTABLE ALTER CONSTRAINT fkdi2 DEFERRABLE INITIALLY IMMEDIATE;
	^
<sql-statement>
SELECT conname, tgfoid::regproc, tgtype, tgdeferrable, tginitdeferred
FROM pg_trigger JOIN pg_constraint con ON con.oid = tgconstraint
WHERE tgrelid = 'pktable'::regclass
ORDER BY 1,2,3;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: AssumeColumnOrder, At function: Sort
    	SELECT conname, tgfoid::regproc, tgtype, tgdeferrable, tginitdeferred
	^
        -stdin-:<main>:1:1: Error: Expected comparable type, but got: Tuple<pgname,pgregproc,pgint2>
        	SELECT conname, tgfoid::regproc, tgtype, tgdeferrable, tginitdeferred
	^
<sql-statement>
SELECT conname, tgfoid::regproc, tgtype, tgdeferrable, tginitdeferred
FROM pg_trigger JOIN pg_constraint con ON con.oid = tgconstraint
WHERE tgrelid = 'fktable'::regclass
ORDER BY 1,2,3;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: AssumeColumnOrder, At function: Sort
    	SELECT conname, tgfoid::regproc, tgtype, tgdeferrable, tginitdeferred
	^
        -stdin-:<main>:1:1: Error: Expected comparable type, but got: Tuple<pgname,pgregproc,pgint2>
        	SELECT conname, tgfoid::regproc, tgtype, tgdeferrable, tginitdeferred
	^
<sql-statement>
-- temp tables should go away by themselves, need not drop them.
-- test check constraint adding
create table atacc1 ( test int );
</sql-statement>
<sql-statement>
-- add a check constraint
alter table atacc1 add constraint atacc_test1 check (test>3);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a check constraint
	^
<sql-statement>
-- should fail
insert into atacc1 (test) values (2);
</sql-statement>
<sql-statement>
-- should succeed
insert into atacc1 (test) values (4);
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- let's do one where the check fails when added
create table atacc1 ( test int );
</sql-statement>
<sql-statement>
-- insert a soon to be failing row
insert into atacc1 (test) values (2);
</sql-statement>
<sql-statement>
-- add a check constraint (fails)
alter table atacc1 add constraint atacc_test1 check (test>3);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a check constraint (fails)
	^
<sql-statement>
insert into atacc1 (test) values (4);
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- let's do one where the check fails because the column doesn't exist
create table atacc1 ( test int );
</sql-statement>
<sql-statement>
-- add a check constraint (fails)
alter table atacc1 add constraint atacc_test1 check (test1>3);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a check constraint (fails)
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- something a little more complicated
create table atacc1 ( test int, test2 int, test3 int);
</sql-statement>
<sql-statement>
-- add a check constraint (fails)
alter table atacc1 add constraint atacc_test1 check (test+test2<test3*4);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a check constraint (fails)
	^
<sql-statement>
-- should fail
insert into atacc1 (test,test2,test3) values (4,4,2);
</sql-statement>
<sql-statement>
-- should succeed
insert into atacc1 (test,test2,test3) values (4,4,5);
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- lets do some naming tests
create table atacc1 (test int check (test>3), test2 int);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: column constraint not supported
    	-- lets do some naming tests
	^
<sql-statement>
alter table atacc1 add check (test2>test);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add check (test2>test);
	^
<sql-statement>
-- should fail for $2
insert into atacc1 (test2, test) values (3, 4);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.atacc1
    
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- inheritance related tests
create table atacc1 (test int);
</sql-statement>
<sql-statement>
create table atacc2 (test2 int);
</sql-statement>
<sql-statement>
create table atacc3 (test3 int) inherits (atacc1, atacc2);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table atacc3 (test3 int) inherits (atacc1, atacc2);
	^
<sql-statement>
alter table atacc2 add constraint foo check (test2>0);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc2 add constraint foo check (test2>0);
	^
<sql-statement>
-- fail and then succeed on atacc2
insert into atacc2 (test2) values (-3);
</sql-statement>
<sql-statement>
insert into atacc2 (test2) values (3);
</sql-statement>
<sql-statement>
-- fail and then succeed on atacc3
insert into atacc3 (test2) values (-3);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.atacc3
    
<sql-statement>
insert into atacc3 (test2) values (3);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.atacc3
    
<sql-statement>
drop table atacc3;
</sql-statement>
<sql-statement>
drop table atacc2;
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- same things with one created with INHERIT
create table atacc1 (test int);
</sql-statement>
<sql-statement>
create table atacc2 (test2 int);
</sql-statement>
<sql-statement>
create table atacc3 (test3 int) inherits (atacc1, atacc2);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table atacc3 (test3 int) inherits (atacc1, atacc2);
	^
<sql-statement>
alter table atacc3 no inherit atacc2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc3 no inherit atacc2;
	^
<sql-statement>
-- fail
alter table atacc3 no inherit atacc2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- fail
	^
<sql-statement>
-- make sure it really isn't a child
insert into atacc3 (test2) values (3);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.atacc3
    
<sql-statement>
select test2 from atacc2;
</sql-statement>
<sql-statement>
-- fail due to missing constraint
alter table atacc2 add constraint foo check (test2>0);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- fail due to missing constraint
	^
<sql-statement>
alter table atacc3 inherit atacc2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc3 inherit atacc2;
	^
<sql-statement>
-- fail due to missing column
alter table atacc3 rename test2 to testx;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	-- fail due to missing column
	^
<sql-statement>
alter table atacc3 inherit atacc2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc3 inherit atacc2;
	^
<sql-statement>
-- fail due to mismatched data type
alter table atacc3 add test2 bool;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- fail due to mismatched data type
	^
<sql-statement>
alter table atacc3 inherit atacc2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc3 inherit atacc2;
	^
<sql-statement>
alter table atacc3 drop test2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc3 drop test2;
	^
<sql-statement>
-- succeed
alter table atacc3 add test2 int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- succeed
	^
<sql-statement>
update atacc3 set test2 = 4 where test2 is null;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_update' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
alter table atacc3 add constraint foo check (test2>0);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc3 add constraint foo check (test2>0);
	^
<sql-statement>
alter table atacc3 inherit atacc2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc3 inherit atacc2;
	^
<sql-statement>
-- fail due to duplicates and circular inheritance
alter table atacc3 inherit atacc2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- fail due to duplicates and circular inheritance
	^
<sql-statement>
alter table atacc2 inherit atacc3;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc2 inherit atacc3;
	^
<sql-statement>
alter table atacc2 inherit atacc2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc2 inherit atacc2;
	^
<sql-statement>
-- test that we really are a child now (should see 4 not 3 and cascade should go through)
select test2 from atacc2;
</sql-statement>
<sql-statement>
drop table atacc2 cascade;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: CASCADE is not implemented
    	drop table atacc2 cascade;
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- adding only to a parent is allowed as of 9.2
create table atacc1 (test int);
</sql-statement>
<sql-statement>
create table atacc2 (test2 int) inherits (atacc1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table atacc2 (test2 int) inherits (atacc1);
	^
<sql-statement>
-- ok:
alter table atacc1 add constraint foo check (test>0) no inherit;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- ok:
	^
<sql-statement>
-- check constraint is not there on child
insert into atacc2 (test) values (-3);
</sql-statement>
<sql-statement>
-- check constraint is there on parent
insert into atacc1 (test) values (-3);
</sql-statement>
<sql-statement>
insert into atacc1 (test) values (3);
</sql-statement>
<sql-statement>
-- fail, violating row:
alter table atacc2 add constraint foo check (test>0) no inherit;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- fail, violating row:
	^
<sql-statement>
drop table atacc2;
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- test unique constraint adding
create table atacc1 ( test int ) ;
</sql-statement>
<sql-statement>
-- add a unique constraint
alter table atacc1 add constraint atacc_test1 unique (test);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a unique constraint
	^
<sql-statement>
-- insert first value
insert into atacc1 (test) values (2);
</sql-statement>
<sql-statement>
-- should fail
insert into atacc1 (test) values (2);
</sql-statement>
<sql-statement>
-- should succeed
insert into atacc1 (test) values (4);
</sql-statement>
<sql-statement>
-- try to create duplicates via alter table using - should fail
alter table atacc1 alter column test type integer using 0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- try to create duplicates via alter table using - should fail
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- let's do one where the unique constraint fails when added
create table atacc1 ( test int );
</sql-statement>
<sql-statement>
-- insert soon to be failing rows
insert into atacc1 (test) values (2);
</sql-statement>
<sql-statement>
insert into atacc1 (test) values (2);
</sql-statement>
<sql-statement>
-- add a unique constraint (fails)
alter table atacc1 add constraint atacc_test1 unique (test);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a unique constraint (fails)
	^
<sql-statement>
insert into atacc1 (test) values (3);
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- let's do one where the unique constraint fails
-- because the column doesn't exist
create table atacc1 ( test int );
</sql-statement>
<sql-statement>
-- add a unique constraint (fails)
alter table atacc1 add constraint atacc_test1 unique (test1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a unique constraint (fails)
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- something a little more complicated
create table atacc1 ( test int, test2 int);
</sql-statement>
<sql-statement>
-- add a unique constraint
alter table atacc1 add constraint atacc_test1 unique (test, test2);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a unique constraint
	^
<sql-statement>
-- insert initial value
insert into atacc1 (test,test2) values (4,4);
</sql-statement>
<sql-statement>
-- should fail
insert into atacc1 (test,test2) values (4,4);
</sql-statement>
<sql-statement>
-- should all succeed
insert into atacc1 (test,test2) values (4,5);
</sql-statement>
<sql-statement>
insert into atacc1 (test,test2) values (5,4);
</sql-statement>
<sql-statement>
insert into atacc1 (test,test2) values (5,5);
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- lets do some naming tests
create table atacc1 (test int, test2 int, unique(test));
</sql-statement>
<sql-statement>
alter table atacc1 add unique (test2);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add unique (test2);
	^
<sql-statement>
-- should fail for @@ second one @@
insert into atacc1 (test2, test) values (3, 3);
</sql-statement>
<sql-statement>
insert into atacc1 (test2, test) values (2, 3);
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- test primary key constraint adding
create table atacc1 ( id serial, test int) ;
</sql-statement>
<sql-statement>
-- add a primary key constraint
alter table atacc1 add constraint atacc_test1 primary key (test);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a primary key constraint
	^
<sql-statement>
-- insert first value
insert into atacc1 (test) values (2);
</sql-statement>
<sql-statement>
-- should fail
insert into atacc1 (test) values (2);
</sql-statement>
<sql-statement>
-- should succeed
insert into atacc1 (test) values (4);
</sql-statement>
<sql-statement>
-- inserting NULL should fail
insert into atacc1 (test) values(NULL);
</sql-statement>
<sql-statement>
-- try adding a second primary key (should fail)
alter table atacc1 add constraint atacc_oid1 primary key(id);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- try adding a second primary key (should fail)
	^
<sql-statement>
-- drop first primary key constraint
alter table atacc1 drop constraint atacc_test1 restrict;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- drop first primary key constraint
	^
<sql-statement>
-- try adding a primary key on oid (should succeed)
alter table atacc1 add constraint atacc_oid1 primary key(id);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- try adding a primary key on oid (should succeed)
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- let's do one where the primary key constraint fails when added
create table atacc1 ( test int );
</sql-statement>
<sql-statement>
-- insert soon to be failing rows
insert into atacc1 (test) values (2);
</sql-statement>
<sql-statement>
insert into atacc1 (test) values (2);
</sql-statement>
<sql-statement>
-- add a primary key (fails)
alter table atacc1 add constraint atacc_test1 primary key (test);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a primary key (fails)
	^
<sql-statement>
insert into atacc1 (test) values (3);
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- let's do another one where the primary key constraint fails when added
create table atacc1 ( test int );
</sql-statement>
<sql-statement>
-- insert soon to be failing row
insert into atacc1 (test) values (NULL);
</sql-statement>
<sql-statement>
-- add a primary key (fails)
alter table atacc1 add constraint atacc_test1 primary key (test);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a primary key (fails)
	^
<sql-statement>
insert into atacc1 (test) values (3);
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- let's do one where the primary key constraint fails
-- because the column doesn't exist
create table atacc1 ( test int );
</sql-statement>
<sql-statement>
-- add a primary key constraint (fails)
alter table atacc1 add constraint atacc_test1 primary key (test1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a primary key constraint (fails)
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- adding a new column as primary key to a non-empty table.
-- should fail unless the column has a non-null default value.
create table atacc1 ( test int );
</sql-statement>
<sql-statement>
insert into atacc1 (test) values (0);
</sql-statement>
<sql-statement>
-- add a primary key column without a default (fails).
alter table atacc1 add column test2 int primary key;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a primary key column without a default (fails).
	^
<sql-statement>
-- now add a primary key column with a default (succeeds).
alter table atacc1 add column test2 int default 0 primary key;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- now add a primary key column with a default (succeeds).
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- this combination used to have order-of-execution problems (bug #15580)
create table atacc1 (a int);
</sql-statement>
<sql-statement>
insert into atacc1 values(1);
</sql-statement>
<sql-statement>
alter table atacc1
  add column b float8 not null default random(),
  add primary key(a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- additionally, we've seen issues with foreign key validation not being
-- properly delayed until after a table rewrite.  Check that works ok.
create table atacc1 (a int primary key);
</sql-statement>
<sql-statement>
alter table atacc1 add constraint atacc1_fkey foreign key (a) references atacc1 (a) not valid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add constraint atacc1_fkey foreign key (a) references atacc1 (a) not valid;
	^
<sql-statement>
alter table atacc1 validate constraint atacc1_fkey, alter a type bigint;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 validate constraint atacc1_fkey, alter a type bigint;
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- we've also seen issues with check constraints being validated at the wrong
-- time when there's a pending table rewrite.
create table atacc1 (a bigint, b int);
</sql-statement>
<sql-statement>
insert into atacc1 values(1,1);
</sql-statement>
<sql-statement>
alter table atacc1 add constraint atacc1_chk check(b = 1) not valid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add constraint atacc1_chk check(b = 1) not valid;
	^
<sql-statement>
alter table atacc1 validate constraint atacc1_chk, alter a type int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 validate constraint atacc1_chk, alter a type int;
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- same as above, but ensure the constraint violation is detected
create table atacc1 (a bigint, b int);
</sql-statement>
<sql-statement>
insert into atacc1 values(1,2);
</sql-statement>
<sql-statement>
alter table atacc1 add constraint atacc1_chk check(b = 1) not valid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add constraint atacc1_chk check(b = 1) not valid;
	^
<sql-statement>
alter table atacc1 validate constraint atacc1_chk, alter a type int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 validate constraint atacc1_chk, alter a type int;
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- something a little more complicated
create table atacc1 ( test int, test2 int);
</sql-statement>
<sql-statement>
-- add a primary key constraint
alter table atacc1 add constraint atacc_test1 primary key (test, test2);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- add a primary key constraint
	^
<sql-statement>
-- try adding a second primary key - should fail
alter table atacc1 add constraint atacc_test2 primary key (test);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- try adding a second primary key - should fail
	^
<sql-statement>
-- insert initial value
insert into atacc1 (test,test2) values (4,4);
</sql-statement>
<sql-statement>
-- should fail
insert into atacc1 (test,test2) values (4,4);
</sql-statement>
<sql-statement>
insert into atacc1 (test,test2) values (NULL,3);
</sql-statement>
<sql-statement>
insert into atacc1 (test,test2) values (3, NULL);
</sql-statement>
<sql-statement>
insert into atacc1 (test,test2) values (NULL,NULL);
</sql-statement>
<sql-statement>
-- should all succeed
insert into atacc1 (test,test2) values (4,5);
</sql-statement>
<sql-statement>
insert into atacc1 (test,test2) values (5,4);
</sql-statement>
<sql-statement>
insert into atacc1 (test,test2) values (5,5);
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- lets do some naming tests
create table atacc1 (test int, test2 int, primary key(test));
</sql-statement>
<sql-statement>
-- only first should succeed
insert into atacc1 (test2, test) values (3, 3);
</sql-statement>
<sql-statement>
insert into atacc1 (test2, test) values (2, 3);
</sql-statement>
<sql-statement>
insert into atacc1 (test2, test) values (1, NULL);
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- alter table / alter column [set/drop] not null tests
-- try altering system catalogs, should fail
alter table pg_class alter column relname drop not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- alter table / alter column [set/drop] not null tests
	^
<sql-statement>
alter table pg_class alter relname set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table pg_class alter relname set not null;
	^
<sql-statement>
-- try altering non-existent table, should fail
alter table non_existent alter column bar set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- try altering non-existent table, should fail
	^
<sql-statement>
alter table non_existent alter column bar drop not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table non_existent alter column bar drop not null;
	^
<sql-statement>
-- test setting columns to null and not null and vice versa
-- test checking for null values and primary key
create table atacc1 (test int not null);
</sql-statement>
<sql-statement>
alter table atacc1 add constraint "atacc1_pkey" primary key (test);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add constraint "atacc1_pkey" primary key (test);
	^
<sql-statement>
alter table atacc1 alter column test drop not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter column test drop not null;
	^
<sql-statement>
alter table atacc1 drop constraint "atacc1_pkey";
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 drop constraint "atacc1_pkey";
	^
<sql-statement>
alter table atacc1 alter column test drop not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter column test drop not null;
	^
<sql-statement>
insert into atacc1 values (null);
</sql-statement>
<sql-statement>
alter table atacc1 alter test set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter test set not null;
	^
<sql-statement>
delete from atacc1;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
alter table atacc1 alter test set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter test set not null;
	^
<sql-statement>
-- try altering a non-existent column, should fail
alter table atacc1 alter bar set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- try altering a non-existent column, should fail
	^
<sql-statement>
alter table atacc1 alter bar drop not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter bar drop not null;
	^
<sql-statement>
-- try creating a view and altering that, should fail
create view myview as select * from atacc1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: expected at least one target column
    	-- try creating a view and altering that, should fail
	^
<sql-statement>
alter table myview alter column test drop not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table myview alter column test drop not null;
	^
<sql-statement>
alter table myview alter column test set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table myview alter column test set not null;
	^
<sql-statement>
drop view myview;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: View not found: 'myview'
    	drop view myview;
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- set not null verified by constraints
create table atacc1 (test_a int, test_b int);
</sql-statement>
<sql-statement>
insert into atacc1 values (null, 1);
</sql-statement>
<sql-statement>
-- constraint not cover all values, should fail
alter table atacc1 add constraint atacc1_constr_or check(test_a is not null or test_b < 10);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- constraint not cover all values, should fail
	^
<sql-statement>
alter table atacc1 alter test_a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter test_a set not null;
	^
<sql-statement>
alter table atacc1 drop constraint atacc1_constr_or;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 drop constraint atacc1_constr_or;
	^
<sql-statement>
-- not valid constraint, should fail
alter table atacc1 add constraint atacc1_constr_invalid check(test_a is not null) not valid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- not valid constraint, should fail
	^
<sql-statement>
alter table atacc1 alter test_a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter test_a set not null;
	^
<sql-statement>
alter table atacc1 drop constraint atacc1_constr_invalid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 drop constraint atacc1_constr_invalid;
	^
<sql-statement>
-- with valid constraint
update atacc1 set test_a = 1;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_update' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
alter table atacc1 add constraint atacc1_constr_a_valid check(test_a is not null);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add constraint atacc1_constr_a_valid check(test_a is not null);
	^
<sql-statement>
alter table atacc1 alter test_a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter test_a set not null;
	^
<sql-statement>
delete from atacc1;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
insert into atacc1 values (2, null);
</sql-statement>
<sql-statement>
alter table atacc1 alter test_a drop not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter test_a drop not null;
	^
<sql-statement>
-- test multiple set not null at same time
-- test_a checked by atacc1_constr_a_valid, test_b should fail by table scan
alter table atacc1 alter test_a set not null, alter test_b set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- test multiple set not null at same time
	^
<sql-statement>
-- commands order has no importance
alter table atacc1 alter test_b set not null, alter test_a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- commands order has no importance
	^
<sql-statement>
-- valid one by table scan, one by check constraints
update atacc1 set test_b = 1;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_update' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
alter table atacc1 alter test_b set not null, alter test_a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter test_b set not null, alter test_a set not null;
	^
<sql-statement>
alter table atacc1 alter test_a drop not null, alter test_b drop not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter test_a drop not null, alter test_b drop not null;
	^
<sql-statement>
-- both column has check constraints
alter table atacc1 add constraint atacc1_constr_b_valid check(test_b is not null);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- both column has check constraints
	^
<sql-statement>
alter table atacc1 alter test_b set not null, alter test_a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter test_b set not null, alter test_a set not null;
	^
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- test inheritance
create table parent (a int);
</sql-statement>
<sql-statement>
create table child (b varchar(255)) inherits (parent);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table child (b varchar(255)) inherits (parent);
	^
<sql-statement>
alter table parent alter a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table parent alter a set not null;
	^
<sql-statement>
insert into parent values (NULL);
</sql-statement>
<sql-statement>
insert into child (a, b) values (NULL, 'foo');
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.child
    
<sql-statement>
alter table parent alter a drop not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table parent alter a drop not null;
	^
<sql-statement>
insert into parent values (NULL);
</sql-statement>
<sql-statement>
insert into child (a, b) values (NULL, 'foo');
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.child
    
<sql-statement>
alter table only parent alter a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table only parent alter a set not null;
	^
<sql-statement>
alter table child alter a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table child alter a set not null;
	^
<sql-statement>
delete from parent;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
alter table only parent alter a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table only parent alter a set not null;
	^
<sql-statement>
insert into parent values (NULL);
</sql-statement>
<sql-statement>
alter table child alter a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table child alter a set not null;
	^
<sql-statement>
insert into child (a, b) values (NULL, 'foo');
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.child
    
<sql-statement>
delete from child;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
alter table child alter a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table child alter a set not null;
	^
<sql-statement>
insert into child (a, b) values (NULL, 'foo');
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.child
    
<sql-statement>
drop table child;
</sql-statement>
<sql-statement>
drop table parent;
</sql-statement>
<sql-statement>
-- test setting and removing default values
create table def_test (
	c1	int4 default 5,
	c2	text default 'initial_default'
);
</sql-statement>
<sql-statement>
insert into def_test default values;
</sql-statement>
-stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'default_values' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 

<sql-statement>
alter table def_test alter column c1 drop default;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table def_test alter column c1 drop default;
	^
<sql-statement>
insert into def_test default values;
</sql-statement>
-stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'default_values' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 

<sql-statement>
alter table def_test alter column c2 drop default;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table def_test alter column c2 drop default;
	^
<sql-statement>
insert into def_test default values;
</sql-statement>
-stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'default_values' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 

<sql-statement>
alter table def_test alter column c1 set default 10;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table def_test alter column c1 set default 10;
	^
<sql-statement>
alter table def_test alter column c2 set default 'new_default';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table def_test alter column c2 set default 'new_default';
	^
<sql-statement>
insert into def_test default values;
</sql-statement>
-stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'default_values' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 

<sql-statement>
select * from def_test;
</sql-statement>
<sql-statement>
-- set defaults to an incorrect type: this should fail
alter table def_test alter column c1 set default 'wrong_datatype';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- set defaults to an incorrect type: this should fail
	^
<sql-statement>
alter table def_test alter column c2 set default 20;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table def_test alter column c2 set default 20;
	^
<sql-statement>
-- set defaults on a non-existent column: this should fail
alter table def_test alter column c3 set default 30;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- set defaults on a non-existent column: this should fail
	^
<sql-statement>
-- set defaults on views: we need to create a view, add a rule
-- to allow insertions into it, and then alter the view to add
-- a default
create view def_view_test as select * from def_test;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: expected at least one target column
    	-- set defaults on views: we need to create a view, add a rule
	^
<sql-statement>
create rule def_view_test_ins as
	on insert to def_view_test
	do instead insert into def_test select new.*;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 265
    	create rule def_view_test_ins as
	^
<sql-statement>
insert into def_view_test default values;
</sql-statement>
-stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'default_values' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 

<sql-statement>
alter table def_view_test alter column c1 set default 45;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table def_view_test alter column c1 set default 45;
	^
<sql-statement>
insert into def_view_test default values;
</sql-statement>
-stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'default_values' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 

<sql-statement>
alter table def_view_test alter column c2 set default 'view_default';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table def_view_test alter column c2 set default 'view_default';
	^
<sql-statement>
insert into def_view_test default values;
</sql-statement>
-stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'default_values' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 

<sql-statement>
select * from def_view_test;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.def_view_test
    
<sql-statement>
drop rule def_view_test_ins on def_view_test;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: Not supported object type for DROP
    	drop rule def_view_test_ins on def_view_test;
	^
<sql-statement>
drop view def_view_test;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: View not found: 'def_view_test'
    	drop view def_view_test;
	^
<sql-statement>
drop table def_test;
</sql-statement>
<sql-statement>
-- alter table / drop column tests
-- try altering system catalogs, should fail
alter table pg_class drop column relname;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- alter table / drop column tests
	^
<sql-statement>
-- try altering non-existent table, should fail
alter table nosuchtable drop column bar;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- try altering non-existent table, should fail
	^
<sql-statement>
-- test dropping columns
create table atacc1 (a int4 not null, b int4, c int4 not null, d int4);
</sql-statement>
<sql-statement>
insert into atacc1 values (1, 2, 3, 4);
</sql-statement>
<sql-statement>
alter table atacc1 drop a;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 drop a;
	^
<sql-statement>
alter table atacc1 drop a;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 drop a;
	^
<sql-statement>
-- SELECTs
select * from atacc1;
</sql-statement>
<sql-statement>
select * from atacc1 order by a;
</sql-statement>
<sql-statement>
select * from atacc1 order by "........pg.dropped.1........";
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem
    	select * from atacc1 order by "........pg.dropped.1........";
	^
        -stdin-:<main>:1:31: Error: No such column: ........pg.dropped.1........
        	select * from atacc1 order by "........pg.dropped.1........";
	                              ^
<sql-statement>
select * from atacc1 group by a;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: AssumeColumnOrder, At function: PgReplaceUnknown, At function: OrderedMap
    	select * from atacc1 group by a;
	^
        -stdin-:<main>:1:1: Error: At function: AsStruct, At function: Member
        	select * from atacc1 group by a;
	^
            -stdin-:<main>:1:1: Error: Member not found: _alias_atacc1.b. Did you mean _alias_atacc1.a?
            	select * from atacc1 group by a;
	^
        -stdin-:<main>:1:1: Error: At function: Member
        	select * from atacc1 group by a;
	^
            -stdin-:<main>:1:1: Error: Member not found: _alias_atacc1.c. Did you mean _alias_atacc1.a?
            	select * from atacc1 group by a;
	^
        -stdin-:<main>:1:1: Error: At function: Member
        	select * from atacc1 group by a;
	^
            -stdin-:<main>:1:1: Error: Member not found: _alias_atacc1.d. Did you mean _alias_atacc1.a?
            	select * from atacc1 group by a;
	^
<sql-statement>
select * from atacc1 group by "........pg.dropped.1........";
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem
    	select * from atacc1 group by "........pg.dropped.1........";
	^
        -stdin-:<main>:1:31: Error: No such column: ........pg.dropped.1........
        	select * from atacc1 group by "........pg.dropped.1........";
	                              ^
<sql-statement>
select atacc1.* from atacc1;
</sql-statement>
<sql-statement>
select a from atacc1;
</sql-statement>
<sql-statement>
select atacc1.a from atacc1;
</sql-statement>
<sql-statement>
select b,c,d from atacc1;
</sql-statement>
<sql-statement>
select a,b,c,d from atacc1;
</sql-statement>
<sql-statement>
select * from atacc1 where a = 1;
</sql-statement>
<sql-statement>
select "........pg.dropped.1........" from atacc1;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem
    	select "........pg.dropped.1........" from atacc1;
	^
        -stdin-:<main>:1:8: Error: No such column: ........pg.dropped.1........
        	select "........pg.dropped.1........" from atacc1;
	       ^
<sql-statement>
select atacc1."........pg.dropped.1........" from atacc1;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem
    	select atacc1."........pg.dropped.1........" from atacc1;
	^
        -stdin-:<main>:1:8: Error: No such column: ........pg.dropped.1........
        	select atacc1."........pg.dropped.1........" from atacc1;
	       ^
<sql-statement>
select "........pg.dropped.1........",b,c,d from atacc1;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem
    	select "........pg.dropped.1........",b,c,d from atacc1;
	^
        -stdin-:<main>:1:8: Error: No such column: ........pg.dropped.1........
        	select "........pg.dropped.1........",b,c,d from atacc1;
	       ^
<sql-statement>
select * from atacc1 where "........pg.dropped.1........" = 1;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem
    	select * from atacc1 where "........pg.dropped.1........" = 1;
	^
        -stdin-:<main>:1:28: Error: No such column: ........pg.dropped.1........
        	select * from atacc1 where "........pg.dropped.1........" = 1;
	                           ^
<sql-statement>
-- UPDATEs
update atacc1 set a = 3;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_update' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
update atacc1 set b = 2 where a = 3;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_update' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
update atacc1 set "........pg.dropped.1........" = 3;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_update' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
update atacc1 set b = 2 where "........pg.dropped.1........" = 3;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_update' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
-- INSERTs
insert into atacc1 values (10, 11, 12, 13);
</sql-statement>
<sql-statement>
insert into atacc1 values (default, 11, 12, 13);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: alternative is not implemented yet : 148
    	insert into atacc1 values (default, 11, 12, 13);
	^
<sql-statement>
insert into atacc1 values (11, 12, 13);
</sql-statement>
<sql-statement>
insert into atacc1 (a) values (10);
</sql-statement>
<sql-statement>
insert into atacc1 (a) values (default);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: alternative is not implemented yet : 148
    	insert into atacc1 (a) values (default);
	^
<sql-statement>
insert into atacc1 (a,b,c,d) values (10,11,12,13);
</sql-statement>
<sql-statement>
insert into atacc1 (a,b,c,d) values (default,11,12,13);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: alternative is not implemented yet : 148
    	insert into atacc1 (a,b,c,d) values (default,11,12,13);
	^
<sql-statement>
insert into atacc1 (b,c,d) values (11,12,13);
</sql-statement>
<sql-statement>
insert into atacc1 ("........pg.dropped.1........") values (10);
</sql-statement>
<sql-statement>
insert into atacc1 ("........pg.dropped.1........") values (default);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: alternative is not implemented yet : 148
    	insert into atacc1 ("........pg.dropped.1........") values (default);
	^
<sql-statement>
insert into atacc1 ("........pg.dropped.1........",b,c,d) values (10,11,12,13);
</sql-statement>
<sql-statement>
insert into atacc1 ("........pg.dropped.1........",b,c,d) values (default,11,12,13);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: alternative is not implemented yet : 148
    	insert into atacc1 ("........pg.dropped.1........",b,c,d) values (default,11,12,13);
	^
<sql-statement>
-- DELETEs
delete from atacc1 where a = 3;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
delete from atacc1 where "........pg.dropped.1........" = 3;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
delete from atacc1;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
-- try dropping a non-existent column, should fail
alter table atacc1 drop bar;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- try dropping a non-existent column, should fail
	^
<sql-statement>
-- try removing an oid column, should succeed (as it's nonexistent)
alter table atacc1 SET WITHOUT OIDS;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- try removing an oid column, should succeed (as it's nonexistent)
	^
<sql-statement>
-- try adding an oid column, should fail (not supported)
alter table atacc1 SET WITH OIDS;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:2:24: Error: ERROR:  syntax error at or near "WITH"

    	alter table atacc1 SET WITH OIDS;
	                       ^
<sql-statement>
-- try dropping the xmin column, should fail
alter table atacc1 drop xmin;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- try dropping the xmin column, should fail
	^
<sql-statement>
-- try creating a view and altering that, should fail
create view myview as select * from atacc1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: expected at least one target column
    	-- try creating a view and altering that, should fail
	^
<sql-statement>
select * from myview;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.myview
    
<sql-statement>
alter table myview drop d;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table myview drop d;
	^
<sql-statement>
drop view myview;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: View not found: 'myview'
    	drop view myview;
	^
<sql-statement>
-- test some commands to make sure they fail on the dropped column
analyze atacc1(a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 275
    	-- test some commands to make sure they fail on the dropped column
	^
<sql-statement>
analyze atacc1("........pg.dropped.1........");
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 275
    	analyze atacc1("........pg.dropped.1........");
	^
<sql-statement>
vacuum analyze atacc1(a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 275
    	vacuum analyze atacc1(a);
	^
<sql-statement>
vacuum analyze atacc1("........pg.dropped.1........");
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 275
    	vacuum analyze atacc1("........pg.dropped.1........");
	^
<sql-statement>
comment on column atacc1.a is 'testing';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	comment on column atacc1.a is 'testing';
	^
<sql-statement>
comment on column atacc1."........pg.dropped.1........" is 'testing';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	comment on column atacc1."........pg.dropped.1........" is 'testing';
	^
<sql-statement>
alter table atacc1 alter a set storage plain;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter a set storage plain;
	^
<sql-statement>
alter table atacc1 alter "........pg.dropped.1........" set storage plain;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter "........pg.dropped.1........" set storage plain;
	^
<sql-statement>
alter table atacc1 alter a set statistics 0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter a set statistics 0;
	^
<sql-statement>
alter table atacc1 alter "........pg.dropped.1........" set statistics 0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter "........pg.dropped.1........" set statistics 0;
	^
<sql-statement>
alter table atacc1 alter a set default 3;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter a set default 3;
	^
<sql-statement>
alter table atacc1 alter "........pg.dropped.1........" set default 3;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter "........pg.dropped.1........" set default 3;
	^
<sql-statement>
alter table atacc1 alter a drop default;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter a drop default;
	^
<sql-statement>
alter table atacc1 alter "........pg.dropped.1........" drop default;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter "........pg.dropped.1........" drop default;
	^
<sql-statement>
alter table atacc1 alter a set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter a set not null;
	^
<sql-statement>
alter table atacc1 alter "........pg.dropped.1........" set not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter "........pg.dropped.1........" set not null;
	^
<sql-statement>
alter table atacc1 alter a drop not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter a drop not null;
	^
<sql-statement>
alter table atacc1 alter "........pg.dropped.1........" drop not null;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 alter "........pg.dropped.1........" drop not null;
	^
<sql-statement>
alter table atacc1 rename a to x;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	alter table atacc1 rename a to x;
	^
<sql-statement>
alter table atacc1 rename "........pg.dropped.1........" to x;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	alter table atacc1 rename "........pg.dropped.1........" to x;
	^
<sql-statement>
alter table atacc1 add primary key(a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add primary key(a);
	^
<sql-statement>
alter table atacc1 add primary key("........pg.dropped.1........");
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add primary key("........pg.dropped.1........");
	^
<sql-statement>
alter table atacc1 add unique(a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add unique(a);
	^
<sql-statement>
alter table atacc1 add unique("........pg.dropped.1........");
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add unique("........pg.dropped.1........");
	^
<sql-statement>
alter table atacc1 add check (a > 3);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add check (a > 3);
	^
<sql-statement>
alter table atacc1 add check ("........pg.dropped.1........" > 3);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add check ("........pg.dropped.1........" > 3);
	^
<sql-statement>
create table atacc2 (id int4 unique);
</sql-statement>
<sql-statement>
alter table atacc1 add foreign key (a) references atacc2(id);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add foreign key (a) references atacc2(id);
	^
<sql-statement>
alter table atacc1 add foreign key ("........pg.dropped.1........") references atacc2(id);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add foreign key ("........pg.dropped.1........") references atacc2(id);
	^
<sql-statement>
alter table atacc2 add foreign key (id) references atacc1(a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc2 add foreign key (id) references atacc1(a);
	^
<sql-statement>
alter table atacc2 add foreign key (id) references atacc1("........pg.dropped.1........");
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc2 add foreign key (id) references atacc1("........pg.dropped.1........");
	^
<sql-statement>
drop table atacc2;
</sql-statement>
<sql-statement>
create index "testing_idx" on atacc1(a);
</sql-statement>
<sql-statement>
create index "testing_idx" on atacc1("........pg.dropped.1........");
</sql-statement>
<sql-statement>
-- test create as and select into
insert into atacc1 values (21, 22, 23);
</sql-statement>
<sql-statement>
create table attest1 as select * from atacc1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 277
    	create table attest1 as select * from atacc1;
	^
<sql-statement>
select * from attest1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.attest1
    
<sql-statement>
drop table attest1;
</sql-statement>
<sql-statement>
select * into attest2 from atacc1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: SelectStmt: not supported intoClause
    	select * into attest2 from atacc1;
	^
<sql-statement>
select * from attest2;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.attest2
    
<sql-statement>
drop table attest2;
</sql-statement>
<sql-statement>
-- try dropping all columns
alter table atacc1 drop c;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- try dropping all columns
	^
<sql-statement>
alter table atacc1 drop d;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 drop d;
	^
<sql-statement>
alter table atacc1 drop b;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 drop b;
	^
<sql-statement>
select * from atacc1;
</sql-statement>
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- test constraint error reporting in presence of dropped columns
create table atacc1 (id serial primary key, value int check (value < 10));
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: column constraint not supported
    	-- test constraint error reporting in presence of dropped columns
	^
<sql-statement>
insert into atacc1(value) values (100);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.atacc1
    
<sql-statement>
alter table atacc1 drop column value;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 drop column value;
	^
<sql-statement>
alter table atacc1 add column value int check (value < 10);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table atacc1 add column value int check (value < 10);
	^
<sql-statement>
insert into atacc1(value) values (100);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.atacc1
    
<sql-statement>
insert into atacc1(id, value) values (null, 0);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.atacc1
    
<sql-statement>
drop table atacc1;
</sql-statement>
<sql-statement>
-- test inheritance
create table parent (a int, b int, c int);
</sql-statement>
<sql-statement>
insert into parent values (1, 2, 3);
</sql-statement>
<sql-statement>
alter table parent drop a;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table parent drop a;
	^
<sql-statement>
create table child (d varchar(255)) inherits (parent);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table child (d varchar(255)) inherits (parent);
	^
<sql-statement>
insert into child values (12, 13, 'testing');
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.child
    
<sql-statement>
select * from parent;
</sql-statement>
<sql-statement>
select * from child;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.child
    
<sql-statement>
alter table parent drop c;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table parent drop c;
	^
<sql-statement>
select * from parent;
</sql-statement>
<sql-statement>
select * from child;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.child
    
<sql-statement>
drop table child;
</sql-statement>
<sql-statement>
drop table parent;
</sql-statement>
<sql-statement>
-- check error cases for inheritance column merging
create table parent (a float8, b numeric(10,4), c text collate "C");
</sql-statement>
<sql-statement>
create table child (a float4) inherits (parent); -- fail
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table child (a float4) inherits (parent); -- fail
	^
<sql-statement>
create table child (b decimal(10,7)) inherits (parent); -- fail
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table child (b decimal(10,7)) inherits (parent); -- fail
	^
<sql-statement>
create table child (c text collate "POSIX") inherits (parent); -- fail
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table child (c text collate "POSIX") inherits (parent); -- fail
	^
<sql-statement>
create table child (a double precision, b decimal(10,4)) inherits (parent);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table child (a double precision, b decimal(10,4)) inherits (parent);
	^
<sql-statement>
drop table child;
</sql-statement>
<sql-statement>
drop table parent;
</sql-statement>
<sql-statement>
-- test copy in/out
create table attest (a int4, b int4, c int4);
</sql-statement>
<sql-statement>
insert into attest values (1,2,3);
</sql-statement>
<sql-statement>
alter table attest drop a;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table attest drop a;
	^
<sql-statement>
copy attest to stdout;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 253
    	copy attest to stdout;
	^
<sql-statement>
copy attest(a) to stdout;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 253
    	copy attest(a) to stdout;
	^
<sql-statement>
copy attest("........pg.dropped.1........") to stdout;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 253
    	copy attest("........pg.dropped.1........") to stdout;
	^
<sql-statement>
copy attest from stdin;
10	11	12
\.
</sql-statement>
Metacommand \. is not supported
<sql-statement>
select * from attest;
</sql-statement>
<sql-statement>
copy attest from stdin;
21	22
\.
</sql-statement>
Metacommand \. is not supported
<sql-statement>
select * from attest;
</sql-statement>
<sql-statement>
copy attest(a) from stdin;
copy attest("........pg.dropped.1........") from stdin;
copy attest(b,c) from stdin;
31	32
\.
</sql-statement>
Metacommand \. is not supported
<sql-statement>
select * from attest;
</sql-statement>
<sql-statement>
drop table attest;
</sql-statement>
<sql-statement>
-- test inheritance
create table dropColumn (a int, b int, e int);
</sql-statement>
<sql-statement>
create table dropColumnChild (c int) inherits (dropColumn);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table dropColumnChild (c int) inherits (dropColumn);
	^
<sql-statement>
create table dropColumnAnother (d int) inherits (dropColumnChild);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table dropColumnAnother (d int) inherits (dropColumnChild);
	^
<sql-statement>
-- these two should fail
alter table dropColumnchild drop column a;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- these two should fail
	^
<sql-statement>
alter table only dropColumnChild drop column b;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table only dropColumnChild drop column b;
	^
<sql-statement>
-- these three should work
alter table only dropColumn drop column e;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- these three should work
	^
<sql-statement>
alter table dropColumnChild drop column c;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table dropColumnChild drop column c;
	^
<sql-statement>
alter table dropColumn drop column a;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table dropColumn drop column a;
	^
<sql-statement>
create table renameColumn (a int);
</sql-statement>
<sql-statement>
create table renameColumnChild (b int) inherits (renameColumn);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table renameColumnChild (b int) inherits (renameColumn);
	^
<sql-statement>
create table renameColumnAnother (c int) inherits (renameColumnChild);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table renameColumnAnother (c int) inherits (renameColumnChild);
	^
<sql-statement>
-- these three should fail
alter table renameColumnChild rename column a to d;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	-- these three should fail
	^
<sql-statement>
alter table only renameColumnChild rename column a to d;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	alter table only renameColumnChild rename column a to d;
	^
<sql-statement>
alter table only renameColumn rename column a to d;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	alter table only renameColumn rename column a to d;
	^
<sql-statement>
-- these should work
alter table renameColumn rename column a to d;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	-- these should work
	^
<sql-statement>
alter table renameColumnChild rename column b to a;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	alter table renameColumnChild rename column b to a;
	^
<sql-statement>
-- these should work
alter table if exists doesnt_exist_tab rename column a to d;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	-- these should work
	^
<sql-statement>
alter table if exists doesnt_exist_tab rename column b to a;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	alter table if exists doesnt_exist_tab rename column b to a;
	^
<sql-statement>
-- this should work
alter table renameColumn add column w int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- this should work
	^
<sql-statement>
-- this should fail
alter table only renameColumn add column x int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- this should fail
	^
<sql-statement>
-- Test corner cases in dropping of inherited columns
create table p1 (f1 int, f2 int);
</sql-statement>
<sql-statement>
create table c1 (f1 int not null) inherits(p1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table c1 (f1 int not null) inherits(p1);
	^
<sql-statement>
-- should be rejected since c1.f1 is inherited
alter table c1 drop column f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- should be rejected since c1.f1 is inherited
	^
<sql-statement>
-- should work
alter table p1 drop column f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- should work
	^
<sql-statement>
-- c1.f1 is still there, but no longer inherited
select f1 from c1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.c1
    
<sql-statement>
alter table c1 drop column f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table c1 drop column f1;
	^
<sql-statement>
select f1 from c1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.c1
    
<sql-statement>
drop table p1 cascade;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: CASCADE is not implemented
    	drop table p1 cascade;
	^
<sql-statement>
create table p1 (f1 int, f2 int);
</sql-statement>
<sql-statement>
create table c1 () inherits(p1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table c1 () inherits(p1);
	^
<sql-statement>
-- should be rejected since c1.f1 is inherited
alter table c1 drop column f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- should be rejected since c1.f1 is inherited
	^
<sql-statement>
alter table p1 drop column f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table p1 drop column f1;
	^
<sql-statement>
-- c1.f1 is dropped now, since there is no local definition for it
select f1 from c1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.c1
    
<sql-statement>
drop table p1 cascade;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: CASCADE is not implemented
    	drop table p1 cascade;
	^
<sql-statement>
create table p1 (f1 int, f2 int);
</sql-statement>
<sql-statement>
create table c1 () inherits(p1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table c1 () inherits(p1);
	^
<sql-statement>
-- should be rejected since c1.f1 is inherited
alter table c1 drop column f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- should be rejected since c1.f1 is inherited
	^
<sql-statement>
alter table only p1 drop column f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table only p1 drop column f1;
	^
<sql-statement>
-- c1.f1 is NOT dropped, but must now be considered non-inherited
alter table c1 drop column f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- c1.f1 is NOT dropped, but must now be considered non-inherited
	^
<sql-statement>
drop table p1 cascade;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: CASCADE is not implemented
    	drop table p1 cascade;
	^
<sql-statement>
create table p1 (f1 int, f2 int);
</sql-statement>
<sql-statement>
create table c1 (f1 int not null) inherits(p1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table c1 (f1 int not null) inherits(p1);
	^
<sql-statement>
-- should be rejected since c1.f1 is inherited
alter table c1 drop column f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- should be rejected since c1.f1 is inherited
	^
<sql-statement>
alter table only p1 drop column f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table only p1 drop column f1;
	^
<sql-statement>
-- c1.f1 is still there, but no longer inherited
alter table c1 drop column f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- c1.f1 is still there, but no longer inherited
	^
<sql-statement>
drop table p1 cascade;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: CASCADE is not implemented
    	drop table p1 cascade;
	^
<sql-statement>
create table p1(id int, name text);
</sql-statement>
<sql-statement>
create table p2(id2 int, name text, height int);
</sql-statement>
<sql-statement>
create table c1(age int) inherits(p1,p2);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table c1(age int) inherits(p1,p2);
	^
<sql-statement>
create table gc1() inherits (c1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table gc1() inherits (c1);
	^
<sql-statement>
select relname, attname, attinhcount, attislocal
from pg_class join pg_attribute on (pg_class.oid = pg_attribute.attrelid)
where relname in ('p1','p2','c1','gc1') and attnum > 0 and not attisdropped
order by relname, attnum;
</sql-statement>
<sql-statement>
-- should work
alter table only p1 drop column name;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- should work
	^
<sql-statement>
-- should work. Now c1.name is local and inhcount is 0.
alter table p2 drop column name;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- should work. Now c1.name is local and inhcount is 0.
	^
<sql-statement>
-- should be rejected since its inherited
alter table gc1 drop column name;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- should be rejected since its inherited
	^
<sql-statement>
-- should work, and drop gc1.name along
alter table c1 drop column name;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- should work, and drop gc1.name along
	^
<sql-statement>
-- should fail: column does not exist
alter table gc1 drop column name;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- should fail: column does not exist
	^
<sql-statement>
-- should work and drop the attribute in all tables
alter table p2 drop column height;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- should work and drop the attribute in all tables
	^
<sql-statement>
-- IF EXISTS test
create table dropColumnExists ();
</sql-statement>
<sql-statement>
alter table dropColumnExists drop column non_existing; --fail
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table dropColumnExists drop column non_existing; --fail
	^
<sql-statement>
alter table dropColumnExists drop column if exists non_existing; --succeed
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table dropColumnExists drop column if exists non_existing; --succeed
	^
<sql-statement>
select relname, attname, attinhcount, attislocal
from pg_class join pg_attribute on (pg_class.oid = pg_attribute.attrelid)
where relname in ('p1','p2','c1','gc1') and attnum > 0 and not attisdropped
order by relname, attnum;
</sql-statement>
<sql-statement>
drop table p1, p2 cascade;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: CASCADE is not implemented
    	drop table p1, p2 cascade;
	^
<sql-statement>
-- test attinhcount tracking with merged columns
create table depth0();
</sql-statement>
<sql-statement>
create table depth1(c text) inherits (depth0);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table depth1(c text) inherits (depth0);
	^
<sql-statement>
create table depth2() inherits (depth1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table depth2() inherits (depth1);
	^
<sql-statement>
alter table depth0 add c text;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table depth0 add c text;
	^
<sql-statement>
select attrelid::regclass, attname, attinhcount, attislocal
from pg_attribute
where attnum > 0 and attrelid::regclass in ('depth0', 'depth1', 'depth2')
order by attrelid::regclass::text, attnum;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect
    	select attrelid::regclass, attname, attinhcount, attislocal
	^
        -stdin-:<main>: Error: At function: PgSetItem
        
            -stdin-:<main>:1:1: Error: At function: PgWhere
            	select attrelid::regclass, attname, attinhcount, attislocal
	^
                -stdin-:<main>:3:18: Error: At function: PgAnd
                	where attnum > 0 and attrelid::regclass in ('depth0', 'depth1', 'depth2')
	                 ^
                    -stdin-:<main>:3:41: Error: At function: PgIn
                    	where attnum > 0 and attrelid::regclass in ('depth0', 'depth1', 'depth2')
	                                        ^
                        -stdin-:<main>:3:41: Error: Cannot compare items of type: regclass
                        	where attnum > 0 and attrelid::regclass in ('depth0', 'depth1', 'depth2')
	                                        ^
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: PgSelect
    	select attrelid::regclass, attname, attinhcount, attislocal
	^
        -stdin-:<main>: Error: At function: PgSetItem
        
            -stdin-:<main>:1:1: Error: At function: PgWhere
            	select attrelid::regclass, attname, attinhcount, attislocal
	^
                -stdin-:<main>:3:18: Error: At function: PgAnd
                	where attnum > 0 and attrelid::regclass in ('depth0', 'depth1', 'depth2')
	                 ^
                    -stdin-:<main>:3:41: Error: At function: ToPg, At function: SqlIn
                    	where attnum > 0 and attrelid::regclass in ('depth0', 'depth1', 'depth2')
	                                        ^
                        -stdin-:<main>:3:41: Error: Can't lookup pgregclass in collection of pgregclass: types pgregclass and pgregclass are not comparable
                        	where attnum > 0 and attrelid::regclass in ('depth0', 'depth1', 'depth2')
	                                        ^
<sql-statement>
-- test renumbering of child-table columns in inherited operations
create table p1 (f1 int);
</sql-statement>
<sql-statement>
create table c1 (f2 text, f3 int) inherits (p1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table c1 (f2 text, f3 int) inherits (p1);
	^
<sql-statement>
alter table p1 add column a1 int check (a1 > 0);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table p1 add column a1 int check (a1 > 0);
	^
<sql-statement>
alter table p1 add column f2 text;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table p1 add column f2 text;
	^
<sql-statement>
insert into p1 values (1,2,'abc');
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: YtWriteTable!
    	insert into p1 values (1,2,'abc');
	^
        -stdin-:<main>:1:1: Error: values have 3 columns, INSERT INTO expects: 2
        	insert into p1 values (1,2,'abc');
	^
<sql-statement>
insert into c1 values(11,'xyz',33,0); -- should fail
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.c1
    
<sql-statement>
insert into c1 values(11,'xyz',33,22);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.c1
    
<sql-statement>
select * from p1;
</sql-statement>
<sql-statement>
update p1 set a1 = a1 + 1, f2 = upper(f2);
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_update' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
select * from p1;
</sql-statement>
<sql-statement>
drop table p1 cascade;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: CASCADE is not implemented
    	drop table p1 cascade;
	^
<sql-statement>
-- test that operations with a dropped column do not try to reference
-- its datatype
create domain mytype as text;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 272
    	-- test that operations with a dropped column do not try to reference
	^
<sql-statement>
create temp table foo (f1 text, f2 mytype, f3 text);
</sql-statement>
<sql-statement>
insert into foo values('bb','cc','dd');
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.foo
    
<sql-statement>
select * from foo;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.foo
    
<sql-statement>
drop domain mytype cascade;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: DropStmt: alternative is not implemented yet : 373
    	drop domain mytype cascade;
	^
<sql-statement>
select * from foo;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.foo
    
<sql-statement>
insert into foo values('qq','rr');
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.foo
    
<sql-statement>
select * from foo;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.foo
    
<sql-statement>
update foo set f3 = 'zz';
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_update' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
select * from foo;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.foo
    
<sql-statement>
select f3,max(f1) from foo group by f3;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.foo
    
<sql-statement>
-- Simple tests for alter table column type
alter table foo alter f1 TYPE integer; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- Simple tests for alter table column type
	^
<sql-statement>
alter table foo alter f1 TYPE varchar(10);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table foo alter f1 TYPE varchar(10);
	^
<sql-statement>
create table anothertab (atcol1 serial8, atcol2 boolean,
	constraint anothertab_chk check (atcol1 <= 3));
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table constraint not supported
    	create table anothertab (atcol1 serial8, atcol2 boolean,
	^
<sql-statement>
insert into anothertab (atcol1, atcol2) values (default, true);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: alternative is not implemented yet : 148
    	insert into anothertab (atcol1, atcol2) values (default, true);
	^
<sql-statement>
insert into anothertab (atcol1, atcol2) values (default, false);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: alternative is not implemented yet : 148
    	insert into anothertab (atcol1, atcol2) values (default, false);
	^
<sql-statement>
select * from anothertab;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.anothertab
    
<sql-statement>
alter table anothertab alter column atcol1 type boolean; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab alter column atcol1 type boolean; -- fails
	^
<sql-statement>
alter table anothertab alter column atcol1 type boolean using atcol1::int; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab alter column atcol1 type boolean using atcol1::int; -- fails
	^
<sql-statement>
alter table anothertab alter column atcol1 type integer;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab alter column atcol1 type integer;
	^
<sql-statement>
select * from anothertab;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.anothertab
    
<sql-statement>
insert into anothertab (atcol1, atcol2) values (45, null); -- fails
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.anothertab
    
<sql-statement>
insert into anothertab (atcol1, atcol2) values (default, null);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: alternative is not implemented yet : 148
    	insert into anothertab (atcol1, atcol2) values (default, null);
	^
<sql-statement>
select * from anothertab;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.anothertab
    
<sql-statement>
alter table anothertab alter column atcol2 type text
      using case when atcol2 is true then 'IT WAS TRUE'
                 when atcol2 is false then 'IT WAS FALSE'
                 else 'IT WAS NULL!' end;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab alter column atcol2 type text
	^
<sql-statement>
select * from anothertab;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.anothertab
    
<sql-statement>
alter table anothertab alter column atcol1 type boolean
        using case when atcol1 % 2 = 0 then true else false end; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab alter column atcol1 type boolean
	^
<sql-statement>
alter table anothertab alter column atcol1 drop default;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab alter column atcol1 drop default;
	^
<sql-statement>
alter table anothertab alter column atcol1 type boolean
        using case when atcol1 % 2 = 0 then true else false end; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab alter column atcol1 type boolean
	^
<sql-statement>
alter table anothertab drop constraint anothertab_chk;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab drop constraint anothertab_chk;
	^
<sql-statement>
alter table anothertab drop constraint anothertab_chk; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab drop constraint anothertab_chk; -- fails
	^
<sql-statement>
alter table anothertab drop constraint IF EXISTS anothertab_chk; -- succeeds
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab drop constraint IF EXISTS anothertab_chk; -- succeeds
	^
<sql-statement>
alter table anothertab alter column atcol1 type boolean
        using case when atcol1 % 2 = 0 then true else false end;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab alter column atcol1 type boolean
	^
<sql-statement>
select * from anothertab;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.anothertab
    
<sql-statement>
drop table anothertab;
</sql-statement>
<sql-statement>
-- Test index handling in alter table column type (cf. bugs #15835, #15865)
create table anothertab(f1 int primary key, f2 int unique,
                        f3 int, f4 int, f5 int);
</sql-statement>
<sql-statement>
alter table anothertab
  add exclude using btree (f3 with =);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab
	^
<sql-statement>
alter table anothertab
  add exclude using btree (f4 with =) where (f4 is not null);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab
	^
<sql-statement>
alter table anothertab
  add exclude using btree (f4 with =) where (f5 > 0);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab
	^
<sql-statement>
alter table anothertab
  add unique(f1,f4);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab
	^
<sql-statement>
create index on anothertab(f2,f3);
</sql-statement>
<sql-statement>
create unique index on anothertab(f4);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: unique index creation is not supported yet
    	create unique index on anothertab(f4);
	^
<sql-statement>
\d anothertab
</sql-statement>
Metacommand \d anothertab is not supported
<sql-statement>
alter table anothertab alter column f1 type bigint;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab alter column f1 type bigint;
	^
<sql-statement>
alter table anothertab
  alter column f2 type bigint,
  alter column f3 type bigint,
  alter column f4 type bigint;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab
	^
<sql-statement>
alter table anothertab alter column f5 type bigint;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table anothertab alter column f5 type bigint;
	^
<sql-statement>
\d anothertab
</sql-statement>
Metacommand \d anothertab is not supported
<sql-statement>
drop table anothertab;
</sql-statement>
<sql-statement>
-- test that USING expressions are parsed before column alter type / drop steps
create table another (f1 int, f2 text, f3 text);
</sql-statement>
<sql-statement>
insert into another values(1, 'one', 'uno');
</sql-statement>
<sql-statement>
insert into another values(2, 'two', 'due');
</sql-statement>
<sql-statement>
insert into another values(3, 'three', 'tre');
</sql-statement>
<sql-statement>
select * from another;
</sql-statement>
<sql-statement>
alter table another
  alter f1 type text using f2 || ' and ' || f3 || ' more',
  alter f2 type bigint using f1 * 10,
  drop column f3;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table another
	^
<sql-statement>
select * from another;
</sql-statement>
<sql-statement>
drop table another;
</sql-statement>
<sql-statement>
-- Create an index that skips WAL, then perform a SET DATA TYPE that skips
-- rewriting the index.
begin;
</sql-statement>
<sql-statement>
create table skip_wal_skip_rewrite_index (c varchar(10) primary key);
</sql-statement>
<sql-statement>
alter table skip_wal_skip_rewrite_index alter c type varchar(20);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table skip_wal_skip_rewrite_index alter c type varchar(20);
	^
<sql-statement>
commit;
</sql-statement>
<sql-statement>
-- We disallow changing table's row type if it's used for storage
create table at_tab1 (a int, b text);
</sql-statement>
<sql-statement>
create table at_tab2 (x int, y at_tab1);
</sql-statement>
<sql-statement>
alter table at_tab1 alter column b type varchar; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table at_tab1 alter column b type varchar; -- fails
	^
<sql-statement>
drop table at_tab2;
</sql-statement>
<sql-statement>
-- Use of row type in an expression is defended differently
create table at_tab2 (x int, y text, check((x,y)::at_tab1 = (1,'42')::at_tab1));
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table constraint not supported
    	-- Use of row type in an expression is defended differently
	^
<sql-statement>
alter table at_tab1 alter column b type varchar; -- allowed, but ...
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table at_tab1 alter column b type varchar; -- allowed, but ...
	^
<sql-statement>
insert into at_tab2 values(1,'42'); -- ... this will fail
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.at_tab2
    
<sql-statement>
drop table at_tab1, at_tab2;
</sql-statement>
<sql-statement>
-- Check it for a partitioned table, too
create table at_tab1 (a int, b text) partition by list(a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: PARTITION BY clause not supported
    	-- Check it for a partitioned table, too
	^
<sql-statement>
create table at_tab2 (x int, y at_tab1);
</sql-statement>
<sql-statement>
alter table at_tab1 alter column b type varchar; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table at_tab1 alter column b type varchar; -- fails
	^
<sql-statement>
drop table at_tab1, at_tab2;
</sql-statement>
<sql-statement>
-- Alter column type that's part of a partitioned index
create table at_partitioned (a int, b text) partition by range (a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: PARTITION BY clause not supported
    	-- Alter column type that's part of a partitioned index
	^
<sql-statement>
create table at_part_1 partition of at_partitioned for values from (0) to (1000);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table at_part_1 partition of at_partitioned for values from (0) to (1000);
	^
<sql-statement>
insert into at_partitioned values (512, '0.123');
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.at_partitioned
    
<sql-statement>
create table at_part_2 (b text, a int);
</sql-statement>
<sql-statement>
insert into at_part_2 values ('1.234', 1024);
</sql-statement>
<sql-statement>
create index on at_partitioned (b);
</sql-statement>
<sql-statement>
create index on at_partitioned (a);
</sql-statement>
<sql-statement>
\d at_part_1
</sql-statement>
Metacommand \d at_part_1 is not supported
<sql-statement>
\d at_part_2
</sql-statement>
Metacommand \d at_part_2 is not supported
<sql-statement>
alter table at_partitioned attach partition at_part_2 for values from (1000) to (2000);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table at_partitioned attach partition at_part_2 for values from (1000) to (2000);
	^
<sql-statement>
\d at_part_2
</sql-statement>
Metacommand \d at_part_2 is not supported
<sql-statement>
alter table at_partitioned alter column b type numeric using b::numeric;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table at_partitioned alter column b type numeric using b::numeric;
	^
<sql-statement>
\d at_part_1
</sql-statement>
Metacommand \d at_part_1 is not supported
<sql-statement>
\d at_part_2
</sql-statement>
Metacommand \d at_part_2 is not supported
<sql-statement>
drop table at_partitioned;
</sql-statement>
<sql-statement>
-- Alter column type when no table rewrite is required
-- Also check that comments are preserved
create table at_partitioned(id int, name varchar(64), unique (id, name))
  partition by hash(id);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: PARTITION BY clause not supported
    	-- Alter column type when no table rewrite is required
	^
<sql-statement>
comment on constraint at_partitioned_id_name_key on at_partitioned is 'parent constraint';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	comment on constraint at_partitioned_id_name_key on at_partitioned is 'parent constraint';
	^
<sql-statement>
comment on index at_partitioned_id_name_key is 'parent index';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	comment on index at_partitioned_id_name_key is 'parent index';
	^
<sql-statement>
create table at_partitioned_0 partition of at_partitioned
  for values with (modulus 2, remainder 0);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table at_partitioned_0 partition of at_partitioned
	^
<sql-statement>
comment on constraint at_partitioned_0_id_name_key on at_partitioned_0 is 'child 0 constraint';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	comment on constraint at_partitioned_0_id_name_key on at_partitioned_0 is 'child 0 constraint';
	^
<sql-statement>
comment on index at_partitioned_0_id_name_key is 'child 0 index';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	comment on index at_partitioned_0_id_name_key is 'child 0 index';
	^
<sql-statement>
create table at_partitioned_1 partition of at_partitioned
  for values with (modulus 2, remainder 1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table at_partitioned_1 partition of at_partitioned
	^
<sql-statement>
comment on constraint at_partitioned_1_id_name_key on at_partitioned_1 is 'child 1 constraint';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	comment on constraint at_partitioned_1_id_name_key on at_partitioned_1 is 'child 1 constraint';
	^
<sql-statement>
comment on index at_partitioned_1_id_name_key is 'child 1 index';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	comment on index at_partitioned_1_id_name_key is 'child 1 index';
	^
<sql-statement>
insert into at_partitioned values(1, 'foo');
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.at_partitioned
    
<sql-statement>
insert into at_partitioned values(3, 'bar');
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.at_partitioned
    
<sql-statement>
create temp table old_oids as
  select relname, oid as oldoid, relfilenode as oldfilenode
  from pg_class where relname like 'at_partitioned%';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 277
    	create temp table old_oids as
	^
<sql-statement>
select relname,
  c.oid = oldoid as orig_oid,
  case relfilenode
    when 0 then 'none'
    when c.oid then 'own'
    when oldfilenode then 'orig'
    else 'OTHER'
    end as storage,
  obj_description(c.oid, 'pg_class') as desc
  from pg_class c left join old_oids using (relname)
  where relname like 'at_partitioned%'
  order by relname;
</sql-statement>
-stdin-:<main>: Warning: Parse Sql

    -stdin-:<main>:9:3: Warning: obj_description function forced to NULL
    	  obj_description(c.oid, 'pg_class') as desc
	  ^
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.old_oids
    
<sql-statement>
select conname, obj_description(oid, 'pg_constraint') as desc
  from pg_constraint where conname like 'at_partitioned%'
  order by conname;
</sql-statement>
<sql-statement>
alter table at_partitioned alter column name type varchar(127);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table at_partitioned alter column name type varchar(127);
	^
<sql-statement>
-- Note: these tests currently show the wrong behavior for comments :-(
select relname,
  c.oid = oldoid as orig_oid,
  case relfilenode
    when 0 then 'none'
    when c.oid then 'own'
    when oldfilenode then 'orig'
    else 'OTHER'
    end as storage,
  obj_description(c.oid, 'pg_class') as desc
  from pg_class c left join old_oids using (relname)
  where relname like 'at_partitioned%'
  order by relname;
</sql-statement>
-stdin-:<main>: Warning: Parse Sql

    -stdin-:<main>:10:3: Warning: obj_description function forced to NULL
    	  obj_description(c.oid, 'pg_class') as desc
	  ^
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.old_oids
    
<sql-statement>
select conname, obj_description(oid, 'pg_constraint') as desc
  from pg_constraint where conname like 'at_partitioned%'
  order by conname;
</sql-statement>
<sql-statement>
-- Don't remove this DROP, it exposes bug #15672
drop table at_partitioned;
</sql-statement>
<sql-statement>
-- disallow recursive containment of row types
create temp table recur1 (f1 int);
</sql-statement>
<sql-statement>
alter table recur1 add column f2 recur1; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table recur1 add column f2 recur1; -- fails
	^
<sql-statement>
alter table recur1 add column f2 recur1[]; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table recur1 add column f2 recur1[]; -- fails
	^
<sql-statement>
create domain array_of_recur1 as recur1[];
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 272
    	create domain array_of_recur1 as recur1[];
	^
<sql-statement>
alter table recur1 add column f2 array_of_recur1; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table recur1 add column f2 array_of_recur1; -- fails
	^
<sql-statement>
create temp table recur2 (f1 int, f2 recur1);
</sql-statement>
<sql-statement>
alter table recur1 add column f2 recur2; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table recur1 add column f2 recur2; -- fails
	^
<sql-statement>
alter table recur1 add column f2 int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table recur1 add column f2 int;
	^
<sql-statement>
alter table recur1 alter column f2 type recur2; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table recur1 alter column f2 type recur2; -- fails
	^
<sql-statement>
-- SET STORAGE may need to add a TOAST table
create table test_storage (a text);
</sql-statement>
<sql-statement>
alter table test_storage alter a set storage plain;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table test_storage alter a set storage plain;
	^
<sql-statement>
alter table test_storage add b int default 0; -- rewrite table to remove its TOAST table
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table test_storage add b int default 0; -- rewrite table to remove its TOAST table
	^
<sql-statement>
alter table test_storage alter a set storage extended; -- re-add TOAST table
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table test_storage alter a set storage extended; -- re-add TOAST table
	^
<sql-statement>
select reltoastrelid <> 0 as has_toast_table
from pg_class
where oid = 'test_storage'::regclass;
</sql-statement>
-stdin-:<main>: Fatal: Execution

    -stdin-:<main>:1:1: Fatal: Execution of node: Result
    	select reltoastrelid <> 0 as has_toast_table
	^
        -stdin-:<main>:1:1: Fatal: ERROR:  relation "test_storage" does not exist

        	select reltoastrelid <> 0 as has_toast_table
	^
<sql-statement>
-- test that SET STORAGE propagates to index correctly
create index test_storage_idx on test_storage (b, a);
</sql-statement>
<sql-statement>
alter table test_storage alter column a set storage external;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table test_storage alter column a set storage external;
	^
<sql-statement>
\d+ test_storage
</sql-statement>
Metacommand \d+ test_storage is not supported
<sql-statement>
\d+ test_storage_idx
</sql-statement>
Metacommand \d+ test_storage_idx is not supported
<sql-statement>
-- ALTER COLUMN TYPE with a check constraint and a child table (bug #13779)
CREATE TABLE test_inh_check (a float check (a > 10.2), b float);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: column constraint not supported
    	-- ALTER COLUMN TYPE with a check constraint and a child table (bug #13779)
	^
<sql-statement>
CREATE TABLE test_inh_check_child() INHERITS(test_inh_check);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	CREATE TABLE test_inh_check_child() INHERITS(test_inh_check);
	^
<sql-statement>
\d test_inh_check
</sql-statement>
Metacommand \d test_inh_check is not supported
<sql-statement>
\d test_inh_check_child
</sql-statement>
Metacommand \d test_inh_check_child is not supported
<sql-statement>
select relname, conname, coninhcount, conislocal, connoinherit
  from pg_constraint c, pg_class r
  where relname like 'test_inh_check%' and c.conrelid = r.oid
  order by 1, 2;
</sql-statement>
<sql-statement>
ALTER TABLE test_inh_check ALTER COLUMN a TYPE numeric;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE test_inh_check ALTER COLUMN a TYPE numeric;
	^
<sql-statement>
\d test_inh_check
</sql-statement>
Metacommand \d test_inh_check is not supported
<sql-statement>
\d test_inh_check_child
</sql-statement>
Metacommand \d test_inh_check_child is not supported
<sql-statement>
select relname, conname, coninhcount, conislocal, connoinherit
  from pg_constraint c, pg_class r
  where relname like 'test_inh_check%' and c.conrelid = r.oid
  order by 1, 2;
</sql-statement>
<sql-statement>
-- also try noinherit, local, and local+inherited cases
ALTER TABLE test_inh_check ADD CONSTRAINT bnoinherit CHECK (b > 100) NO INHERIT;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- also try noinherit, local, and local+inherited cases
	^
<sql-statement>
ALTER TABLE test_inh_check_child ADD CONSTRAINT blocal CHECK (b < 1000);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE test_inh_check_child ADD CONSTRAINT blocal CHECK (b < 1000);
	^
<sql-statement>
ALTER TABLE test_inh_check_child ADD CONSTRAINT bmerged CHECK (b > 1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE test_inh_check_child ADD CONSTRAINT bmerged CHECK (b > 1);
	^
<sql-statement>
ALTER TABLE test_inh_check ADD CONSTRAINT bmerged CHECK (b > 1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE test_inh_check ADD CONSTRAINT bmerged CHECK (b > 1);
	^
<sql-statement>
\d test_inh_check
</sql-statement>
Metacommand \d test_inh_check is not supported
<sql-statement>
\d test_inh_check_child
</sql-statement>
Metacommand \d test_inh_check_child is not supported
<sql-statement>
select relname, conname, coninhcount, conislocal, connoinherit
  from pg_constraint c, pg_class r
  where relname like 'test_inh_check%' and c.conrelid = r.oid
  order by 1, 2;
</sql-statement>
<sql-statement>
ALTER TABLE test_inh_check ALTER COLUMN b TYPE numeric;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE test_inh_check ALTER COLUMN b TYPE numeric;
	^
<sql-statement>
\d test_inh_check
</sql-statement>
Metacommand \d test_inh_check is not supported
<sql-statement>
\d test_inh_check_child
</sql-statement>
Metacommand \d test_inh_check_child is not supported
<sql-statement>
select relname, conname, coninhcount, conislocal, connoinherit
  from pg_constraint c, pg_class r
  where relname like 'test_inh_check%' and c.conrelid = r.oid
  order by 1, 2;
</sql-statement>
<sql-statement>
-- ALTER COLUMN TYPE with different schema in children
-- Bug at https://postgr.es/m/20170102225618.GA10071@telsasoft.com
CREATE TABLE test_type_diff (f1 int);
</sql-statement>
<sql-statement>
CREATE TABLE test_type_diff_c (extra smallint) INHERITS (test_type_diff);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	CREATE TABLE test_type_diff_c (extra smallint) INHERITS (test_type_diff);
	^
<sql-statement>
ALTER TABLE test_type_diff ADD COLUMN f2 int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE test_type_diff ADD COLUMN f2 int;
	^
<sql-statement>
INSERT INTO test_type_diff_c VALUES (1, 2, 3);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.test_type_diff_c
    
<sql-statement>
ALTER TABLE test_type_diff ALTER COLUMN f2 TYPE bigint USING f2::bigint;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE test_type_diff ALTER COLUMN f2 TYPE bigint USING f2::bigint;
	^
<sql-statement>
CREATE TABLE test_type_diff2 (int_two int2, int_four int4, int_eight int8);
</sql-statement>
<sql-statement>
CREATE TABLE test_type_diff2_c1 (int_four int4, int_eight int8, int_two int2);
</sql-statement>
<sql-statement>
CREATE TABLE test_type_diff2_c2 (int_eight int8, int_two int2, int_four int4);
</sql-statement>
<sql-statement>
CREATE TABLE test_type_diff2_c3 (int_two int2, int_four int4, int_eight int8);
</sql-statement>
<sql-statement>
ALTER TABLE test_type_diff2_c1 INHERIT test_type_diff2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE test_type_diff2_c1 INHERIT test_type_diff2;
	^
<sql-statement>
ALTER TABLE test_type_diff2_c2 INHERIT test_type_diff2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE test_type_diff2_c2 INHERIT test_type_diff2;
	^
<sql-statement>
ALTER TABLE test_type_diff2_c3 INHERIT test_type_diff2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE test_type_diff2_c3 INHERIT test_type_diff2;
	^
<sql-statement>
INSERT INTO test_type_diff2_c1 VALUES (1, 2, 3);
</sql-statement>
<sql-statement>
INSERT INTO test_type_diff2_c2 VALUES (4, 5, 6);
</sql-statement>
<sql-statement>
INSERT INTO test_type_diff2_c3 VALUES (7, 8, 9);
</sql-statement>
<sql-statement>
ALTER TABLE test_type_diff2 ALTER COLUMN int_four TYPE int8 USING int_four::int8;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE test_type_diff2 ALTER COLUMN int_four TYPE int8 USING int_four::int8;
	^
<sql-statement>
-- whole-row references are disallowed
ALTER TABLE test_type_diff2 ALTER COLUMN int_four TYPE int4 USING (pg_column_size(test_type_diff2));
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- whole-row references are disallowed
	^
<sql-statement>
-- check for rollback of ANALYZE corrupting table property flags (bug #11638)
CREATE TABLE check_fk_presence_1 (id int PRIMARY KEY, t text);
</sql-statement>
<sql-statement>
CREATE TABLE check_fk_presence_2 (id int REFERENCES check_fk_presence_1, t text);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: column constraint not supported
    	CREATE TABLE check_fk_presence_2 (id int REFERENCES check_fk_presence_1, t text);
	^
<sql-statement>
BEGIN;
</sql-statement>
<sql-statement>
ALTER TABLE check_fk_presence_2 DROP CONSTRAINT check_fk_presence_2_id_fkey;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE check_fk_presence_2 DROP CONSTRAINT check_fk_presence_2_id_fkey;
	^
<sql-statement>
ANALYZE check_fk_presence_2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 275
    	ANALYZE check_fk_presence_2;
	^
<sql-statement>
ROLLBACK;
</sql-statement>
<sql-statement>
\d check_fk_presence_2
</sql-statement>
Metacommand \d check_fk_presence_2 is not supported
<sql-statement>
DROP TABLE check_fk_presence_1, check_fk_presence_2;
</sql-statement>
<sql-statement>
-- check column addition within a view (bug #14876)
create table at_base_table(id int, stuff text);
</sql-statement>
<sql-statement>
insert into at_base_table values (23, 'skidoo');
</sql-statement>
<sql-statement>
create view at_view_1 as select * from at_base_table bt;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: expected at least one target column
    	create view at_view_1 as select * from at_base_table bt;
	^
<sql-statement>
create view at_view_2 as select *, to_json(v1) as j from at_view_1 v1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: expected at least one target column
    	create view at_view_2 as select *, to_json(v1) as j from at_view_1 v1;
	^
<sql-statement>
\d+ at_view_1
</sql-statement>
Metacommand \d+ at_view_1 is not supported
<sql-statement>
\d+ at_view_2
</sql-statement>
Metacommand \d+ at_view_2 is not supported
<sql-statement>
explain (verbose, costs off) select * from at_view_2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	explain (verbose, costs off) select * from at_view_2;
	^
<sql-statement>
select * from at_view_2;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.at_view_2
    
<sql-statement>
create or replace view at_view_1 as select *, 2+2 as more from at_base_table bt;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: expected at least one target column
    	create or replace view at_view_1 as select *, 2+2 as more from at_base_table bt;
	^
<sql-statement>
\d+ at_view_1
</sql-statement>
Metacommand \d+ at_view_1 is not supported
<sql-statement>
\d+ at_view_2
</sql-statement>
Metacommand \d+ at_view_2 is not supported
<sql-statement>
explain (verbose, costs off) select * from at_view_2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	explain (verbose, costs off) select * from at_view_2;
	^
<sql-statement>
select * from at_view_2;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.at_view_2
    
<sql-statement>
drop view at_view_2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: View not found: 'at_view_2'
    	drop view at_view_2;
	^
<sql-statement>
drop view at_view_1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: View not found: 'at_view_1'
    	drop view at_view_1;
	^
<sql-statement>
drop table at_base_table;
</sql-statement>
<sql-statement>
-- check adding a column not iself requiring a rewrite, together with
-- a column requiring a default (bug #16038)
-- ensure that rewrites aren't silently optimized away, removing the
-- value of the test
CREATE FUNCTION check_ddl_rewrite(p_tablename regclass, p_ddl text)
RETURNS boolean
LANGUAGE plpgsql AS $$
DECLARE
    v_relfilenode oid;
BEGIN
    v_relfilenode := relfilenode FROM pg_class WHERE oid = p_tablename;
    EXECUTE p_ddl;
    RETURN v_relfilenode <> (SELECT relfilenode FROM pg_class WHERE oid = p_tablename);
END;
$$;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 261
    	-- check adding a column not iself requiring a rewrite, together with
	^
<sql-statement>
CREATE TABLE rewrite_test(col text);
</sql-statement>
<sql-statement>
INSERT INTO rewrite_test VALUES ('something');
</sql-statement>
<sql-statement>
INSERT INTO rewrite_test VALUES (NULL);
</sql-statement>
<sql-statement>
-- empty[12] don't need rewrite, but notempty[12]_rewrite will force one
SELECT check_ddl_rewrite('rewrite_test', $$
  ALTER TABLE rewrite_test
      ADD COLUMN empty1 text,
      ADD COLUMN notempty1_rewrite serial;
$$);
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	-- empty[12] don't need rewrite, but notempty[12]_rewrite will force one
	^
        -stdin-:<main>:2:8: Error: At function: PgCall
        	SELECT check_ddl_rewrite('rewrite_test', $$
	       ^
            -stdin-:<main>:2:8: Error: No such proc: check_ddl_rewrite
            	SELECT check_ddl_rewrite('rewrite_test', $$
	       ^
<sql-statement>
SELECT check_ddl_rewrite('rewrite_test', $$
    ALTER TABLE rewrite_test
        ADD COLUMN notempty2_rewrite serial,
        ADD COLUMN empty2 text;
$$);
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	SELECT check_ddl_rewrite('rewrite_test', $$
	^
        -stdin-:<main>:1:8: Error: At function: PgCall
        	SELECT check_ddl_rewrite('rewrite_test', $$
	       ^
            -stdin-:<main>:1:8: Error: No such proc: check_ddl_rewrite
            	SELECT check_ddl_rewrite('rewrite_test', $$
	       ^
<sql-statement>
-- also check that fast defaults cause no problem, first without rewrite
SELECT check_ddl_rewrite('rewrite_test', $$
    ALTER TABLE rewrite_test
        ADD COLUMN empty3 text,
        ADD COLUMN notempty3_norewrite int default 42;
$$);
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	-- also check that fast defaults cause no problem, first without rewrite
	^
        -stdin-:<main>:2:8: Error: At function: PgCall
        	SELECT check_ddl_rewrite('rewrite_test', $$
	       ^
            -stdin-:<main>:2:8: Error: No such proc: check_ddl_rewrite
            	SELECT check_ddl_rewrite('rewrite_test', $$
	       ^
<sql-statement>
SELECT check_ddl_rewrite('rewrite_test', $$
    ALTER TABLE rewrite_test
        ADD COLUMN notempty4_norewrite int default 42,
        ADD COLUMN empty4 text;
$$);
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	SELECT check_ddl_rewrite('rewrite_test', $$
	^
        -stdin-:<main>:1:8: Error: At function: PgCall
        	SELECT check_ddl_rewrite('rewrite_test', $$
	       ^
            -stdin-:<main>:1:8: Error: No such proc: check_ddl_rewrite
            	SELECT check_ddl_rewrite('rewrite_test', $$
	       ^
<sql-statement>
-- then with rewrite
SELECT check_ddl_rewrite('rewrite_test', $$
    ALTER TABLE rewrite_test
        ADD COLUMN empty5 text,
        ADD COLUMN notempty5_norewrite int default 42,
        ADD COLUMN notempty5_rewrite serial;
$$);
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	-- then with rewrite
	^
        -stdin-:<main>:2:8: Error: At function: PgCall
        	SELECT check_ddl_rewrite('rewrite_test', $$
	       ^
            -stdin-:<main>:2:8: Error: No such proc: check_ddl_rewrite
            	SELECT check_ddl_rewrite('rewrite_test', $$
	       ^
<sql-statement>
SELECT check_ddl_rewrite('rewrite_test', $$
    ALTER TABLE rewrite_test
        ADD COLUMN notempty6_rewrite serial,
        ADD COLUMN empty6 text,
        ADD COLUMN notempty6_norewrite int default 42;
$$);
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	SELECT check_ddl_rewrite('rewrite_test', $$
	^
        -stdin-:<main>:1:8: Error: At function: PgCall
        	SELECT check_ddl_rewrite('rewrite_test', $$
	       ^
            -stdin-:<main>:1:8: Error: No such proc: check_ddl_rewrite
            	SELECT check_ddl_rewrite('rewrite_test', $$
	       ^
<sql-statement>
-- cleanup
DROP FUNCTION check_ddl_rewrite(regclass, text);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: DropStmt: alternative is not implemented yet : 386
    	-- cleanup
	^
<sql-statement>
DROP TABLE rewrite_test;
</sql-statement>
<sql-statement>
--
-- lock levels
--
drop type lockmodes;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: DropStmt: alternative is not implemented yet : 373
    	--
	^
<sql-statement>
create type lockmodes as enum (
 'SIReadLock'
,'AccessShareLock'
,'RowShareLock'
,'RowExclusiveLock'
,'ShareUpdateExclusiveLock'
,'ShareLock'
,'ShareRowExclusiveLock'
,'ExclusiveLock'
,'AccessExclusiveLock'
);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 315
    	create type lockmodes as enum (
	^
<sql-statement>
drop view my_locks;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: View not found: 'my_locks'
    	drop view my_locks;
	^
<sql-statement>
create or replace view my_locks as
select case when c.relname like 'pg_toast%' then 'pg_toast' else c.relname end, max(mode::lockmodes) as max_lockmode
from pg_locks l join pg_class c on l.relation = c.oid
where virtualtransaction = (
        select virtualtransaction
        from pg_locks
        where transactionid = pg_current_xact_id()::xid)
and locktype = 'relation'
and relnamespace != (select oid from pg_namespace where nspname = 'pg_catalog')
and c.relname != 'my_locks'
group by c.relname;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: expected at least one target column
    	create or replace view my_locks as
	^
<sql-statement>
create table alterlock (f1 int primary key, f2 text);
</sql-statement>
<sql-statement>
insert into alterlock values (1, 'foo');
</sql-statement>
<sql-statement>
create table alterlock2 (f3 int primary key, f1 int);
</sql-statement>
<sql-statement>
insert into alterlock2 values (1, 1);
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter table alterlock alter column f2 set statistics 150;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock alter column f2 set statistics 150;
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
rollback;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter table alterlock cluster on alterlock_pkey;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock cluster on alterlock_pkey;
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
commit;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter table alterlock set without cluster;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock set without cluster;
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
commit;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter table alterlock set (fillfactor = 100);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock set (fillfactor = 100);
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
commit;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter table alterlock reset (fillfactor);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock reset (fillfactor);
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
commit;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter table alterlock set (toast.autovacuum_enabled = off);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock set (toast.autovacuum_enabled = off);
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
commit;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter table alterlock set (autovacuum_enabled = off);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock set (autovacuum_enabled = off);
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
commit;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter table alterlock alter column f2 set (n_distinct = 1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock alter column f2 set (n_distinct = 1);
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
rollback;
</sql-statement>
<sql-statement>
-- test that mixing options with different lock levels works as expected
begin;
</sql-statement>
<sql-statement>
alter table alterlock set (autovacuum_enabled = off, fillfactor = 80);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock set (autovacuum_enabled = off, fillfactor = 80);
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
commit;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter table alterlock alter column f2 set storage extended;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock alter column f2 set storage extended;
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
rollback;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter table alterlock alter column f2 set default 'x';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock alter column f2 set default 'x';
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
rollback;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
create trigger ttdummy
	before delete or update on alterlock
	for each row
	execute procedure
	ttdummy (1, 1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 283
    	create trigger ttdummy
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
rollback;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
alter table alterlock2 add foreign key (f1) references alterlock (f1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock2 add foreign key (f1) references alterlock (f1);
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
rollback;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter table alterlock2
add constraint alterlock2nv foreign key (f1) references alterlock (f1) NOT VALID;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock2
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
commit;
</sql-statement>
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter table alterlock2 validate constraint alterlock2nv;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table alterlock2 validate constraint alterlock2nv;
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
rollback;
</sql-statement>
<sql-statement>
create or replace view my_locks as
select case when c.relname like 'pg_toast%' then 'pg_toast' else c.relname end, max(mode::lockmodes) as max_lockmode
from pg_locks l join pg_class c on l.relation = c.oid
where virtualtransaction = (
        select virtualtransaction
        from pg_locks
        where transactionid = pg_current_xact_id()::xid)
and locktype = 'relation'
and relnamespace != (select oid from pg_namespace where nspname = 'pg_catalog')
and c.relname = 'my_locks'
group by c.relname;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: expected at least one target column
    	create or replace view my_locks as
	^
<sql-statement>
-- raise exception
alter table my_locks set (autovacuum_enabled = false);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- raise exception
	^
<sql-statement>
alter view my_locks set (autovacuum_enabled = false);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter view my_locks set (autovacuum_enabled = false);
	^
<sql-statement>
alter table my_locks reset (autovacuum_enabled);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table my_locks reset (autovacuum_enabled);
	^
<sql-statement>
alter view my_locks reset (autovacuum_enabled);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter view my_locks reset (autovacuum_enabled);
	^
<sql-statement>
begin;
</sql-statement>
<sql-statement>
alter view my_locks set (security_barrier=off);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter view my_locks set (security_barrier=off);
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
alter view my_locks reset (security_barrier);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter view my_locks reset (security_barrier);
	^
<sql-statement>
rollback;
</sql-statement>
<sql-statement>
-- this test intentionally applies the ALTER TABLE command against a view, but
-- uses a view option so we expect this to succeed. This form of SQL is
-- accepted for historical reasons, as shown in the docs for ALTER VIEW
begin;
</sql-statement>
<sql-statement>
alter table my_locks set (security_barrier=off);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table my_locks set (security_barrier=off);
	^
<sql-statement>
select * from my_locks order by 1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.my_locks
    
<sql-statement>
alter table my_locks reset (security_barrier);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	alter table my_locks reset (security_barrier);
	^
<sql-statement>
rollback;
</sql-statement>
<sql-statement>
-- cleanup
drop table alterlock2;
</sql-statement>
<sql-statement>
drop table alterlock;
</sql-statement>
<sql-statement>
drop view my_locks;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: View not found: 'my_locks'
    	drop view my_locks;
	^
<sql-statement>
drop type lockmodes;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: DropStmt: alternative is not implemented yet : 373
    	drop type lockmodes;
	^
<sql-statement>
--
-- alter function
--
create function test_strict(text) returns text as
    'select coalesce($1, ''got passed a null'');'
    language sql returns null on null input;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 261
    	--
	^
<sql-statement>
select test_strict(NULL);
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	select test_strict(NULL);
	^
        -stdin-:<main>:1:8: Error: At function: PgCall
        	select test_strict(NULL);
	       ^
            -stdin-:<main>:1:8: Error: No such proc: test_strict
            	select test_strict(NULL);
	       ^
<sql-statement>
alter function test_strict(text) called on null input;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 262
    	alter function test_strict(text) called on null input;
	^
<sql-statement>
select test_strict(NULL);
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	select test_strict(NULL);
	^
        -stdin-:<main>:1:8: Error: At function: PgCall
        	select test_strict(NULL);
	       ^
            -stdin-:<main>:1:8: Error: No such proc: test_strict
            	select test_strict(NULL);
	       ^
<sql-statement>
create function non_strict(text) returns text as
    'select coalesce($1, ''got passed a null'');'
    language sql called on null input;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 261
    	create function non_strict(text) returns text as
	^
<sql-statement>
select non_strict(NULL);
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	select non_strict(NULL);
	^
        -stdin-:<main>:1:8: Error: At function: PgCall
        	select non_strict(NULL);
	       ^
            -stdin-:<main>:1:8: Error: No such proc: non_strict
            	select non_strict(NULL);
	       ^
<sql-statement>
alter function non_strict(text) returns null on null input;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 262
    	alter function non_strict(text) returns null on null input;
	^
<sql-statement>
select non_strict(NULL);
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	select non_strict(NULL);
	^
        -stdin-:<main>:1:8: Error: At function: PgCall
        	select non_strict(NULL);
	       ^
            -stdin-:<main>:1:8: Error: No such proc: non_strict
            	select non_strict(NULL);
	       ^
<sql-statement>
--
-- alter object set schema
--
create schema alter1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 292
    	--
	^
<sql-statement>
create schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 292
    	create schema alter2;
	^
<sql-statement>
create table alter1.t1(f1 serial primary key, f2 int check (f2 > 0));
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: Unknown cluster: alter1
    	create table alter1.t1(f1 serial primary key, f2 int check (f2 > 0));
	^
<sql-statement>
create view alter1.v1 as select * from alter1.t1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: schemaname is not supported
    	create view alter1.v1 as select * from alter1.t1;
	^
<sql-statement>
create function alter1.plus1(int) returns int as 'select $1+1' language sql;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 261
    	create function alter1.plus1(int) returns int as 'select $1+1' language sql;
	^
<sql-statement>
create domain alter1.posint integer check (value > 0);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 272
    	create domain alter1.posint integer check (value > 0);
	^
<sql-statement>
create type alter1.ctype as (f1 int, f2 text);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 314
    	create type alter1.ctype as (f1 int, f2 text);
	^
<sql-statement>
create function alter1.same(alter1.ctype, alter1.ctype) returns boolean language sql
as 'select $1.f1 is not distinct from $2.f1 and $1.f2 is not distinct from $2.f2';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 261
    	create function alter1.same(alter1.ctype, alter1.ctype) returns boolean language sql
	^
<sql-statement>
create operator alter1.=(procedure = alter1.same, leftarg  = alter1.ctype, rightarg = alter1.ctype);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 255
    	create operator alter1.=(procedure = alter1.same, leftarg  = alter1.ctype, rightarg = alter1.ctype);
	^
<sql-statement>
create operator class alter1.ctype_hash_ops default for type alter1.ctype using hash as
  operator 1 alter1.=(alter1.ctype, alter1.ctype);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 298
    	create operator class alter1.ctype_hash_ops default for type alter1.ctype using hash as
	^
<sql-statement>
create conversion alter1.latin1_to_utf8 for 'latin1' to 'utf8' from iso8859_1_to_utf8;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 296
    	create conversion alter1.latin1_to_utf8 for 'latin1' to 'utf8' from iso8859_1_to_utf8;
	^
<sql-statement>
create text search parser alter1.prs(start = prsd_start, gettoken = prsd_nexttoken, end = prsd_end, lextypes = prsd_lextype);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 255
    	create text search parser alter1.prs(start = prsd_start, gettoken = prsd_nexttoken, end = prsd_end, lextypes = prsd_lextype);
	^
<sql-statement>
create text search configuration alter1.cfg(parser = alter1.prs);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 255
    	create text search configuration alter1.cfg(parser = alter1.prs);
	^
<sql-statement>
create text search template alter1.tmpl(init = dsimple_init, lexize = dsimple_lexize);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 255
    	create text search template alter1.tmpl(init = dsimple_init, lexize = dsimple_lexize);
	^
<sql-statement>
create text search dictionary alter1.dict(template = alter1.tmpl);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 255
    	create text search dictionary alter1.dict(template = alter1.tmpl);
	^
<sql-statement>
insert into alter1.t1(f2) values(11);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: Unknown cluster: alter1
    	insert into alter1.t1(f2) values(11);
	^
<sql-statement>
insert into alter1.t1(f2) values(12);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: Unknown cluster: alter1
    	insert into alter1.t1(f2) values(12);
	^
<sql-statement>
alter table alter1.t1 set schema alter1; -- no-op, same schema
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter table alter1.t1 set schema alter1; -- no-op, same schema
	^
<sql-statement>
alter table alter1.t1 set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter table alter1.t1 set schema alter2;
	^
<sql-statement>
alter table alter1.v1 set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter table alter1.v1 set schema alter2;
	^
<sql-statement>
alter function alter1.plus1(int) set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter function alter1.plus1(int) set schema alter2;
	^
<sql-statement>
alter domain alter1.posint set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter domain alter1.posint set schema alter2;
	^
<sql-statement>
alter operator class alter1.ctype_hash_ops using hash set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter operator class alter1.ctype_hash_ops using hash set schema alter2;
	^
<sql-statement>
alter operator family alter1.ctype_hash_ops using hash set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter operator family alter1.ctype_hash_ops using hash set schema alter2;
	^
<sql-statement>
alter operator alter1.=(alter1.ctype, alter1.ctype) set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter operator alter1.=(alter1.ctype, alter1.ctype) set schema alter2;
	^
<sql-statement>
alter function alter1.same(alter1.ctype, alter1.ctype) set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter function alter1.same(alter1.ctype, alter1.ctype) set schema alter2;
	^
<sql-statement>
alter type alter1.ctype set schema alter1; -- no-op, same schema
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter type alter1.ctype set schema alter1; -- no-op, same schema
	^
<sql-statement>
alter type alter1.ctype set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter type alter1.ctype set schema alter2;
	^
<sql-statement>
alter conversion alter1.latin1_to_utf8 set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter conversion alter1.latin1_to_utf8 set schema alter2;
	^
<sql-statement>
alter text search parser alter1.prs set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter text search parser alter1.prs set schema alter2;
	^
<sql-statement>
alter text search configuration alter1.cfg set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter text search configuration alter1.cfg set schema alter2;
	^
<sql-statement>
alter text search template alter1.tmpl set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter text search template alter1.tmpl set schema alter2;
	^
<sql-statement>
alter text search dictionary alter1.dict set schema alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	alter text search dictionary alter1.dict set schema alter2;
	^
<sql-statement>
-- this should succeed because nothing is left in alter1
drop schema alter1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: DropStmt: alternative is not implemented yet : 228
    	-- this should succeed because nothing is left in alter1
	^
<sql-statement>
insert into alter2.t1(f2) values(13);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: Unknown cluster: alter2
    	insert into alter2.t1(f2) values(13);
	^
<sql-statement>
insert into alter2.t1(f2) values(14);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: Unknown cluster: alter2
    	insert into alter2.t1(f2) values(14);
	^
<sql-statement>
select * from alter2.t1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:15: Error: Unknown cluster: alter2
    	select * from alter2.t1;
	              ^
<sql-statement>
select * from alter2.v1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:15: Error: Unknown cluster: alter2
    	select * from alter2.v1;
	              ^
<sql-statement>
select alter2.plus1(41);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:8: Error: FuncCall: expected pg_catalog, but got: alter2
    	select alter2.plus1(41);
	       ^
<sql-statement>
-- clean up
drop schema alter2 cascade;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: DropStmt: alternative is not implemented yet : 228
    	-- clean up
	^
<sql-statement>
--
-- composite types
--
CREATE TYPE test_type AS (a int);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 314
    	--
	^
<sql-statement>
\d test_type
</sql-statement>
Metacommand \d test_type is not supported
<sql-statement>
ALTER TYPE nosuchtype ADD ATTRIBUTE b text; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE nosuchtype ADD ATTRIBUTE b text; -- fails
	^
<sql-statement>
ALTER TYPE test_type ADD ATTRIBUTE b text;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type ADD ATTRIBUTE b text;
	^
<sql-statement>
\d test_type
</sql-statement>
Metacommand \d test_type is not supported
<sql-statement>
ALTER TYPE test_type ADD ATTRIBUTE b text; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type ADD ATTRIBUTE b text; -- fails
	^
<sql-statement>
ALTER TYPE test_type ALTER ATTRIBUTE b SET DATA TYPE varchar;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type ALTER ATTRIBUTE b SET DATA TYPE varchar;
	^
<sql-statement>
\d test_type
</sql-statement>
Metacommand \d test_type is not supported
<sql-statement>
ALTER TYPE test_type ALTER ATTRIBUTE b SET DATA TYPE integer;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type ALTER ATTRIBUTE b SET DATA TYPE integer;
	^
<sql-statement>
\d test_type
</sql-statement>
Metacommand \d test_type is not supported
<sql-statement>
ALTER TYPE test_type DROP ATTRIBUTE b;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type DROP ATTRIBUTE b;
	^
<sql-statement>
\d test_type
</sql-statement>
Metacommand \d test_type is not supported
<sql-statement>
ALTER TYPE test_type DROP ATTRIBUTE c; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type DROP ATTRIBUTE c; -- fails
	^
<sql-statement>
ALTER TYPE test_type DROP ATTRIBUTE IF EXISTS c;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type DROP ATTRIBUTE IF EXISTS c;
	^
<sql-statement>
ALTER TYPE test_type DROP ATTRIBUTE a, ADD ATTRIBUTE d boolean;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type DROP ATTRIBUTE a, ADD ATTRIBUTE d boolean;
	^
<sql-statement>
\d test_type
</sql-statement>
Metacommand \d test_type is not supported
<sql-statement>
ALTER TYPE test_type RENAME ATTRIBUTE a TO aa;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TYPE test_type RENAME ATTRIBUTE a TO aa;
	^
<sql-statement>
ALTER TYPE test_type RENAME ATTRIBUTE d TO dd;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TYPE test_type RENAME ATTRIBUTE d TO dd;
	^
<sql-statement>
\d test_type
</sql-statement>
Metacommand \d test_type is not supported
<sql-statement>
DROP TYPE test_type;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: DropStmt: alternative is not implemented yet : 373
    	DROP TYPE test_type;
	^
<sql-statement>
CREATE TYPE test_type1 AS (a int, b text);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 314
    	CREATE TYPE test_type1 AS (a int, b text);
	^
<sql-statement>
CREATE TABLE test_tbl1 (x int, y test_type1);
</sql-statement>
<sql-statement>
ALTER TYPE test_type1 ALTER ATTRIBUTE b TYPE varchar; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type1 ALTER ATTRIBUTE b TYPE varchar; -- fails
	^
<sql-statement>
CREATE TYPE test_type2 AS (a int, b text);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 314
    	CREATE TYPE test_type2 AS (a int, b text);
	^
<sql-statement>
CREATE TABLE test_tbl2 OF test_type2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: typed tables not supported
    	CREATE TABLE test_tbl2 OF test_type2;
	^
<sql-statement>
CREATE TABLE test_tbl2_subclass () INHERITS (test_tbl2);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	CREATE TABLE test_tbl2_subclass () INHERITS (test_tbl2);
	^
<sql-statement>
\d test_type2
</sql-statement>
Metacommand \d test_type2 is not supported
<sql-statement>
\d test_tbl2
</sql-statement>
Metacommand \d test_tbl2 is not supported
<sql-statement>
ALTER TYPE test_type2 ADD ATTRIBUTE c text; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type2 ADD ATTRIBUTE c text; -- fails
	^
<sql-statement>
ALTER TYPE test_type2 ADD ATTRIBUTE c text CASCADE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type2 ADD ATTRIBUTE c text CASCADE;
	^
<sql-statement>
\d test_type2
</sql-statement>
Metacommand \d test_type2 is not supported
<sql-statement>
\d test_tbl2
</sql-statement>
Metacommand \d test_tbl2 is not supported
<sql-statement>
ALTER TYPE test_type2 ALTER ATTRIBUTE b TYPE varchar; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type2 ALTER ATTRIBUTE b TYPE varchar; -- fails
	^
<sql-statement>
ALTER TYPE test_type2 ALTER ATTRIBUTE b TYPE varchar CASCADE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type2 ALTER ATTRIBUTE b TYPE varchar CASCADE;
	^
<sql-statement>
\d test_type2
</sql-statement>
Metacommand \d test_type2 is not supported
<sql-statement>
\d test_tbl2
</sql-statement>
Metacommand \d test_tbl2 is not supported
<sql-statement>
ALTER TYPE test_type2 DROP ATTRIBUTE b; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type2 DROP ATTRIBUTE b; -- fails
	^
<sql-statement>
ALTER TYPE test_type2 DROP ATTRIBUTE b CASCADE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type2 DROP ATTRIBUTE b CASCADE;
	^
<sql-statement>
\d test_type2
</sql-statement>
Metacommand \d test_type2 is not supported
<sql-statement>
\d test_tbl2
</sql-statement>
Metacommand \d test_tbl2 is not supported
<sql-statement>
ALTER TYPE test_type2 RENAME ATTRIBUTE a TO aa; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TYPE test_type2 RENAME ATTRIBUTE a TO aa; -- fails
	^
<sql-statement>
ALTER TYPE test_type2 RENAME ATTRIBUTE a TO aa CASCADE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TYPE test_type2 RENAME ATTRIBUTE a TO aa CASCADE;
	^
<sql-statement>
\d test_type2
</sql-statement>
Metacommand \d test_type2 is not supported
<sql-statement>
\d test_tbl2
</sql-statement>
Metacommand \d test_tbl2 is not supported
<sql-statement>
\d test_tbl2_subclass
</sql-statement>
Metacommand \d test_tbl2_subclass is not supported
<sql-statement>
DROP TABLE test_tbl2_subclass;
</sql-statement>
<sql-statement>
CREATE TYPE test_typex AS (a int, b text);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 314
    	CREATE TYPE test_typex AS (a int, b text);
	^
<sql-statement>
CREATE TABLE test_tblx (x int, y test_typex check ((y).a > 0));
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: column constraint not supported
    	CREATE TABLE test_tblx (x int, y test_typex check ((y).a > 0));
	^
<sql-statement>
ALTER TYPE test_typex DROP ATTRIBUTE a; -- fails
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_typex DROP ATTRIBUTE a; -- fails
	^
<sql-statement>
ALTER TYPE test_typex DROP ATTRIBUTE a CASCADE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_typex DROP ATTRIBUTE a CASCADE;
	^
<sql-statement>
\d test_tblx
</sql-statement>
Metacommand \d test_tblx is not supported
<sql-statement>
DROP TABLE test_tblx;
</sql-statement>
<sql-statement>
DROP TYPE test_typex;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: DropStmt: alternative is not implemented yet : 373
    	DROP TYPE test_typex;
	^
<sql-statement>
-- This test isn't that interesting on its own, but the purpose is to leave
-- behind a table to test pg_upgrade with. The table has a composite type
-- column in it, and the composite type has a dropped attribute.
CREATE TYPE test_type3 AS (a int);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 314
    	-- This test isn't that interesting on its own, but the purpose is to leave
	^
<sql-statement>
CREATE TABLE test_tbl3 (c) AS SELECT '(1)'::test_type3;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 277
    	CREATE TABLE test_tbl3 (c) AS SELECT '(1)'::test_type3;
	^
<sql-statement>
ALTER TYPE test_type3 DROP ATTRIBUTE a, ADD ATTRIBUTE b int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE test_type3 DROP ATTRIBUTE a, ADD ATTRIBUTE b int;
	^
<sql-statement>
CREATE TYPE test_type_empty AS ();
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 314
    	CREATE TYPE test_type_empty AS ();
	^
<sql-statement>
DROP TYPE test_type_empty;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: DropStmt: alternative is not implemented yet : 373
    	DROP TYPE test_type_empty;
	^
<sql-statement>
--
-- typed tables: OF / NOT OF
--
CREATE TYPE tt_t0 AS (z inet, x int, y numeric(8,2));
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 314
    	--
	^
<sql-statement>
ALTER TYPE tt_t0 DROP ATTRIBUTE z;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TYPE tt_t0 DROP ATTRIBUTE z;
	^
<sql-statement>
CREATE TABLE tt0 (x int NOT NULL, y numeric(8,2));	-- OK
</sql-statement>
<sql-statement>
CREATE TABLE tt1 (x int, y bigint);					-- wrong base type
</sql-statement>
<sql-statement>
CREATE TABLE tt2 (x int, y numeric(9,2));			-- wrong typmod
</sql-statement>
<sql-statement>
CREATE TABLE tt3 (y numeric(8,2), x int);			-- wrong column order
</sql-statement>
<sql-statement>
CREATE TABLE tt4 (x int);							-- too few columns
</sql-statement>
<sql-statement>
CREATE TABLE tt5 (x int, y numeric(8,2), z int);	-- too few columns
</sql-statement>
<sql-statement>
CREATE TABLE tt6 () INHERITS (tt0);					-- can't have a parent
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	CREATE TABLE tt6 () INHERITS (tt0);					-- can't have a parent
	^
<sql-statement>
CREATE TABLE tt7 (x int, q text, y numeric(8,2));
</sql-statement>
<sql-statement>
ALTER TABLE tt7 DROP q;								-- OK
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt7 DROP q;								-- OK
	^
<sql-statement>
ALTER TABLE tt0 OF tt_t0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt0 OF tt_t0;
	^
<sql-statement>
ALTER TABLE tt1 OF tt_t0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt1 OF tt_t0;
	^
<sql-statement>
ALTER TABLE tt2 OF tt_t0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt2 OF tt_t0;
	^
<sql-statement>
ALTER TABLE tt3 OF tt_t0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt3 OF tt_t0;
	^
<sql-statement>
ALTER TABLE tt4 OF tt_t0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt4 OF tt_t0;
	^
<sql-statement>
ALTER TABLE tt5 OF tt_t0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt5 OF tt_t0;
	^
<sql-statement>
ALTER TABLE tt6 OF tt_t0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt6 OF tt_t0;
	^
<sql-statement>
ALTER TABLE tt7 OF tt_t0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt7 OF tt_t0;
	^
<sql-statement>
CREATE TYPE tt_t1 AS (x int, y numeric(8,2));
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 314
    	CREATE TYPE tt_t1 AS (x int, y numeric(8,2));
	^
<sql-statement>
ALTER TABLE tt7 OF tt_t1;			-- reassign an already-typed table
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt7 OF tt_t1;			-- reassign an already-typed table
	^
<sql-statement>
ALTER TABLE tt7 NOT OF;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt7 NOT OF;
	^
<sql-statement>
\d tt7
</sql-statement>
Metacommand \d tt7 is not supported
<sql-statement>
-- make sure we can drop a constraint on the parent but it remains on the child
CREATE TABLE test_drop_constr_parent (c text CHECK (c IS NOT NULL));
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: column constraint not supported
    	-- make sure we can drop a constraint on the parent but it remains on the child
	^
<sql-statement>
CREATE TABLE test_drop_constr_child () INHERITS (test_drop_constr_parent);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	CREATE TABLE test_drop_constr_child () INHERITS (test_drop_constr_parent);
	^
<sql-statement>
ALTER TABLE ONLY test_drop_constr_parent DROP CONSTRAINT "test_drop_constr_parent_c_check";
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE ONLY test_drop_constr_parent DROP CONSTRAINT "test_drop_constr_parent_c_check";
	^
<sql-statement>
-- should fail
INSERT INTO test_drop_constr_child (c) VALUES (NULL);
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.test_drop_constr_child
    
<sql-statement>
DROP TABLE test_drop_constr_parent CASCADE;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: CASCADE is not implemented
    	DROP TABLE test_drop_constr_parent CASCADE;
	^
<sql-statement>
--
-- IF EXISTS test
--
ALTER TABLE IF EXISTS tt8 ADD COLUMN f int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	--
	^
<sql-statement>
ALTER TABLE IF EXISTS tt8 ADD CONSTRAINT xxx PRIMARY KEY(f);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE IF EXISTS tt8 ADD CONSTRAINT xxx PRIMARY KEY(f);
	^
<sql-statement>
ALTER TABLE IF EXISTS tt8 ADD CHECK (f BETWEEN 0 AND 10);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE IF EXISTS tt8 ADD CHECK (f BETWEEN 0 AND 10);
	^
<sql-statement>
ALTER TABLE IF EXISTS tt8 ALTER COLUMN f SET DEFAULT 0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE IF EXISTS tt8 ALTER COLUMN f SET DEFAULT 0;
	^
<sql-statement>
ALTER TABLE IF EXISTS tt8 RENAME COLUMN f TO f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE IF EXISTS tt8 RENAME COLUMN f TO f1;
	^
<sql-statement>
ALTER TABLE IF EXISTS tt8 SET SCHEMA alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	ALTER TABLE IF EXISTS tt8 SET SCHEMA alter2;
	^
<sql-statement>
CREATE TABLE tt8(a int);
</sql-statement>
<sql-statement>
CREATE SCHEMA alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 292
    	CREATE SCHEMA alter2;
	^
<sql-statement>
ALTER TABLE IF EXISTS tt8 ADD COLUMN f int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE IF EXISTS tt8 ADD COLUMN f int;
	^
<sql-statement>
ALTER TABLE IF EXISTS tt8 ADD CONSTRAINT xxx PRIMARY KEY(f);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE IF EXISTS tt8 ADD CONSTRAINT xxx PRIMARY KEY(f);
	^
<sql-statement>
ALTER TABLE IF EXISTS tt8 ADD CHECK (f BETWEEN 0 AND 10);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE IF EXISTS tt8 ADD CHECK (f BETWEEN 0 AND 10);
	^
<sql-statement>
ALTER TABLE IF EXISTS tt8 ALTER COLUMN f SET DEFAULT 0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE IF EXISTS tt8 ALTER COLUMN f SET DEFAULT 0;
	^
<sql-statement>
ALTER TABLE IF EXISTS tt8 RENAME COLUMN f TO f1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE IF EXISTS tt8 RENAME COLUMN f TO f1;
	^
<sql-statement>
ALTER TABLE IF EXISTS tt8 SET SCHEMA alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	ALTER TABLE IF EXISTS tt8 SET SCHEMA alter2;
	^
<sql-statement>
\d alter2.tt8
</sql-statement>
Metacommand \d alter2.tt8 is not supported
<sql-statement>
DROP TABLE alter2.tt8;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: Unknown cluster: alter2
    	DROP TABLE alter2.tt8;
	^
<sql-statement>
DROP SCHEMA alter2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: DropStmt: alternative is not implemented yet : 228
    	DROP SCHEMA alter2;
	^
<sql-statement>
--
-- Check conflicts between index and CHECK constraint names
--
CREATE TABLE tt9(c integer);
</sql-statement>
<sql-statement>
ALTER TABLE tt9 ADD CHECK(c > 1);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt9 ADD CHECK(c > 1);
	^
<sql-statement>
ALTER TABLE tt9 ADD CHECK(c > 2);  -- picks nonconflicting name
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt9 ADD CHECK(c > 2);  -- picks nonconflicting name
	^
<sql-statement>
ALTER TABLE tt9 ADD CONSTRAINT foo CHECK(c > 3);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt9 ADD CONSTRAINT foo CHECK(c > 3);
	^
<sql-statement>
ALTER TABLE tt9 ADD CONSTRAINT foo CHECK(c > 4);  -- fail, dup name
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt9 ADD CONSTRAINT foo CHECK(c > 4);  -- fail, dup name
	^
<sql-statement>
ALTER TABLE tt9 ADD UNIQUE(c);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt9 ADD UNIQUE(c);
	^
<sql-statement>
ALTER TABLE tt9 ADD UNIQUE(c);  -- picks nonconflicting name
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt9 ADD UNIQUE(c);  -- picks nonconflicting name
	^
<sql-statement>
ALTER TABLE tt9 ADD CONSTRAINT tt9_c_key UNIQUE(c);  -- fail, dup name
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt9 ADD CONSTRAINT tt9_c_key UNIQUE(c);  -- fail, dup name
	^
<sql-statement>
ALTER TABLE tt9 ADD CONSTRAINT foo UNIQUE(c);  -- fail, dup name
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt9 ADD CONSTRAINT foo UNIQUE(c);  -- fail, dup name
	^
<sql-statement>
ALTER TABLE tt9 ADD CONSTRAINT tt9_c_key CHECK(c > 5);  -- fail, dup name
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt9 ADD CONSTRAINT tt9_c_key CHECK(c > 5);  -- fail, dup name
	^
<sql-statement>
ALTER TABLE tt9 ADD CONSTRAINT tt9_c_key2 CHECK(c > 6);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt9 ADD CONSTRAINT tt9_c_key2 CHECK(c > 6);
	^
<sql-statement>
ALTER TABLE tt9 ADD UNIQUE(c);  -- picks nonconflicting name
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE tt9 ADD UNIQUE(c);  -- picks nonconflicting name
	^
<sql-statement>
\d tt9
</sql-statement>
Metacommand \d tt9 is not supported
<sql-statement>
DROP TABLE tt9;
</sql-statement>
<sql-statement>
-- Check that comments on constraints and indexes are not lost at ALTER TABLE.
CREATE TABLE comment_test (
  id int,
  positive_col int CHECK (positive_col > 0),
  indexed_col int,
  CONSTRAINT comment_test_pk PRIMARY KEY (id));
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: column constraint not supported
    	-- Check that comments on constraints and indexes are not lost at ALTER TABLE.
	^
<sql-statement>
CREATE INDEX comment_test_index ON comment_test(indexed_col);
</sql-statement>
<sql-statement>
COMMENT ON COLUMN comment_test.id IS 'Column ''id'' on comment_test';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	COMMENT ON COLUMN comment_test.id IS 'Column ''id'' on comment_test';
	^
<sql-statement>
COMMENT ON INDEX comment_test_index IS 'Simple index on comment_test';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	COMMENT ON INDEX comment_test_index IS 'Simple index on comment_test';
	^
<sql-statement>
COMMENT ON CONSTRAINT comment_test_positive_col_check ON comment_test IS 'CHECK constraint on comment_test.positive_col';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	COMMENT ON CONSTRAINT comment_test_positive_col_check ON comment_test IS 'CHECK constraint on comment_test.positive_col';
	^
<sql-statement>
COMMENT ON CONSTRAINT comment_test_pk ON comment_test IS 'PRIMARY KEY constraint of comment_test';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	COMMENT ON CONSTRAINT comment_test_pk ON comment_test IS 'PRIMARY KEY constraint of comment_test';
	^
<sql-statement>
COMMENT ON INDEX comment_test_pk IS 'Index backing the PRIMARY KEY of comment_test';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	COMMENT ON INDEX comment_test_pk IS 'Index backing the PRIMARY KEY of comment_test';
	^
<sql-statement>
SELECT col_description('comment_test'::regclass, 1) as comment;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	SELECT col_description('comment_test'::regclass, 1) as comment;
	^
        -stdin-:<main>:1:8: Error: At function: PgCall
        	SELECT col_description('comment_test'::regclass, 1) as comment;
	       ^
            -stdin-:<main>:1:8: Error: No such proc: col_description
            	SELECT col_description('comment_test'::regclass, 1) as comment;
	       ^
<sql-statement>
SELECT indexrelid::regclass::text as index, obj_description(indexrelid, 'pg_class') as comment FROM pg_index where indrelid = 'comment_test'::regclass ORDER BY 1, 2;
</sql-statement>
<sql-statement>
SELECT conname as constraint, obj_description(oid, 'pg_constraint') as comment FROM pg_constraint where conrelid = 'comment_test'::regclass ORDER BY 1, 2;
</sql-statement>
<sql-statement>
-- Change the datatype of all the columns. ALTER TABLE is optimized to not
-- rebuild an index if the new data type is binary compatible with the old
-- one. Check do a dummy ALTER TABLE that doesn't change the datatype
-- first, to test that no-op codepath, and another one that does.
ALTER TABLE comment_test ALTER COLUMN indexed_col SET DATA TYPE int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- Change the datatype of all the columns. ALTER TABLE is optimized to not
	^
<sql-statement>
ALTER TABLE comment_test ALTER COLUMN indexed_col SET DATA TYPE text;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE comment_test ALTER COLUMN indexed_col SET DATA TYPE text;
	^
<sql-statement>
ALTER TABLE comment_test ALTER COLUMN id SET DATA TYPE int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE comment_test ALTER COLUMN id SET DATA TYPE int;
	^
<sql-statement>
ALTER TABLE comment_test ALTER COLUMN id SET DATA TYPE text;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE comment_test ALTER COLUMN id SET DATA TYPE text;
	^
<sql-statement>
ALTER TABLE comment_test ALTER COLUMN positive_col SET DATA TYPE int;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE comment_test ALTER COLUMN positive_col SET DATA TYPE int;
	^
<sql-statement>
ALTER TABLE comment_test ALTER COLUMN positive_col SET DATA TYPE bigint;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE comment_test ALTER COLUMN positive_col SET DATA TYPE bigint;
	^
<sql-statement>
-- Check that the comments are intact.
SELECT col_description('comment_test'::regclass, 1) as comment;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	-- Check that the comments are intact.
	^
        -stdin-:<main>:2:8: Error: At function: PgCall
        	SELECT col_description('comment_test'::regclass, 1) as comment;
	       ^
            -stdin-:<main>:2:8: Error: No such proc: col_description
            	SELECT col_description('comment_test'::regclass, 1) as comment;
	       ^
<sql-statement>
SELECT indexrelid::regclass::text as index, obj_description(indexrelid, 'pg_class') as comment FROM pg_index where indrelid = 'comment_test'::regclass ORDER BY 1, 2;
</sql-statement>
<sql-statement>
SELECT conname as constraint, obj_description(oid, 'pg_constraint') as comment FROM pg_constraint where conrelid = 'comment_test'::regclass ORDER BY 1, 2;
</sql-statement>
<sql-statement>
-- Check compatibility for foreign keys and comments. This is done
-- separately as rebuilding the column type of the parent leads
-- to an error and would reduce the test scope.
CREATE TABLE comment_test_child (
  id text CONSTRAINT comment_test_child_fk REFERENCES comment_test);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: column constraint not supported
    	-- Check compatibility for foreign keys and comments. This is done
	^
<sql-statement>
CREATE INDEX comment_test_child_fk ON comment_test_child(id);
</sql-statement>
<sql-statement>
COMMENT ON COLUMN comment_test_child.id IS 'Column ''id'' on comment_test_child';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	COMMENT ON COLUMN comment_test_child.id IS 'Column ''id'' on comment_test_child';
	^
<sql-statement>
COMMENT ON INDEX comment_test_child_fk IS 'Index backing the FOREIGN KEY of comment_test_child';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	COMMENT ON INDEX comment_test_child_fk IS 'Index backing the FOREIGN KEY of comment_test_child';
	^
<sql-statement>
COMMENT ON CONSTRAINT comment_test_child_fk ON comment_test_child IS 'FOREIGN KEY constraint of comment_test_child';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 258
    	COMMENT ON CONSTRAINT comment_test_child_fk ON comment_test_child IS 'FOREIGN KEY constraint of comment_test_child';
	^
<sql-statement>
-- Change column type of parent
ALTER TABLE comment_test ALTER COLUMN id SET DATA TYPE text;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	-- Change column type of parent
	^
<sql-statement>
ALTER TABLE comment_test ALTER COLUMN id SET DATA TYPE int USING id::integer;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE comment_test ALTER COLUMN id SET DATA TYPE int USING id::integer;
	^
<sql-statement>
-- Comments should be intact
SELECT col_description('comment_test_child'::regclass, 1) as comment;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	-- Comments should be intact
	^
        -stdin-:<main>:2:8: Error: At function: PgCall
        	SELECT col_description('comment_test_child'::regclass, 1) as comment;
	       ^
            -stdin-:<main>:2:8: Error: No such proc: col_description
            	SELECT col_description('comment_test_child'::regclass, 1) as comment;
	       ^
<sql-statement>
SELECT indexrelid::regclass::text as index, obj_description(indexrelid, 'pg_class') as comment FROM pg_index where indrelid = 'comment_test_child'::regclass ORDER BY 1, 2;
</sql-statement>
<sql-statement>
SELECT conname as constraint, obj_description(oid, 'pg_constraint') as comment FROM pg_constraint where conrelid = 'comment_test_child'::regclass ORDER BY 1, 2;
</sql-statement>
<sql-statement>
-- Check that we map relation oids to filenodes and back correctly.  Only
-- display bad mappings so the test output doesn't change all the time.  A
-- filenode function call can return NULL for a relation dropped concurrently
-- with the call's surrounding query, so ignore a NULL mapped_oid for
-- relations that no longer exist after all calls finish.
CREATE TEMP TABLE filenode_mapping AS
SELECT
    oid, mapped_oid, reltablespace, relfilenode, relname
FROM pg_class,
    pg_filenode_relation(reltablespace, pg_relation_filenode(oid)) AS mapped_oid
WHERE relkind IN ('r', 'i', 'S', 't', 'm') AND mapped_oid IS DISTINCT FROM oid;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 277
    	-- Check that we map relation oids to filenodes and back correctly.  Only
	^
<sql-statement>
SELECT m.* FROM filenode_mapping m LEFT JOIN pg_class c ON c.oid = m.oid
WHERE c.oid IS NOT NULL OR m.mapped_oid IS NOT NULL;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.filenode_mapping
    
<sql-statement>
-- Checks on creating and manipulation of user defined relations in
-- pg_catalog.
SHOW allow_system_table_mods;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: unrecognized configuration parameter "allow_system_table_mods"
    	-- Checks on creating and manipulation of user defined relations in
	^
<sql-statement>
-- disallowed because of search_path issues with pg_dump
CREATE TABLE pg_catalog.new_system_table();
</sql-statement>
<sql-statement>
-- instead create in public first, move to catalog
CREATE TABLE new_system_table(id serial primary key, othercol text);
</sql-statement>
<sql-statement>
ALTER TABLE new_system_table SET SCHEMA pg_catalog;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	ALTER TABLE new_system_table SET SCHEMA pg_catalog;
	^
<sql-statement>
ALTER TABLE new_system_table SET SCHEMA public;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	ALTER TABLE new_system_table SET SCHEMA public;
	^
<sql-statement>
ALTER TABLE new_system_table SET SCHEMA pg_catalog;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	ALTER TABLE new_system_table SET SCHEMA pg_catalog;
	^
<sql-statement>
-- will be ignored -- already there:
ALTER TABLE new_system_table SET SCHEMA pg_catalog;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 308
    	-- will be ignored -- already there:
	^
<sql-statement>
ALTER TABLE new_system_table RENAME TO old_system_table;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 264
    	ALTER TABLE new_system_table RENAME TO old_system_table;
	^
<sql-statement>
CREATE INDEX old_system_table__othercol ON old_system_table (othercol);
</sql-statement>
<sql-statement>
INSERT INTO old_system_table(othercol) VALUES ('somedata'), ('otherdata');
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.old_system_table
    
<sql-statement>
UPDATE old_system_table SET id = -id;
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_update' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
DELETE FROM old_system_table WHERE othercol = 'somedata';
</sql-statement>
-stdin-:<main>: Fatal: Pre type annotation

    -stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'pg_delete' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys', 'mutationid'. 
    
<sql-statement>
TRUNCATE old_system_table;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 257
    	TRUNCATE old_system_table;
	^
<sql-statement>
ALTER TABLE old_system_table DROP CONSTRAINT new_system_table_pkey;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE old_system_table DROP CONSTRAINT new_system_table_pkey;
	^
<sql-statement>
ALTER TABLE old_system_table DROP COLUMN othercol;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 244
    	ALTER TABLE old_system_table DROP COLUMN othercol;
	^
<sql-statement>
DROP TABLE old_system_table;
</sql-statement>
<sql-statement>
-- set logged
CREATE UNLOGGED TABLE unlogged1(f1 SERIAL PRIMARY KEY, f2 TEXT);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: UNLOGGED tables not supported
    	-- set logged
	^
<sql-statement>
-- check relpersistence of an unlogged table
SELECT relname, relkind, relpersistence FROM pg_class WHERE relname ~ '^unlogged1'
UNION ALL
SELECT 'toast table', t.relkind, t.relpersistence FROM pg_class r JOIN pg_class t ON t.oid = r.reltoastrelid WHERE r.relname ~ '^unlogged1'
UNION ALL
SELECT 'toast index', ri.relkind, ri.relpersistence FROM pg_class r join pg_class t ON t.oid = r.reltoastrelid JOIN pg_index i ON i.indrelid = t.oid JOIN pg_class ri ON ri.oid = i.indexrelid WHERE r.relname ~ '^unlogged1'
ORDER BY relname;
</sql-statement>
VERIFY failed (2024-03-25T09:27:22.411530Z): 
  ydb/library/yql/minikql/comp_nodes/llvm14/mkql_join_dict.cpp:149
  JoinDicts(): requirement !HasNullInKey(key1) failed
NPrivate::InternalPanicImpl(int, char const*, char const*, int, int, int, TBasicStringBuf<char, std::__y1::char_traits<char> >, char const*, unsigned long)+600 (0x99989F8)
NPrivate::Panic(NPrivate::TStaticBuf const&, int, char const*, char const*, char const*, ...)+285 (0x998E95D)
??+0 (0x118FFC31)
??+0 (0x7F0AF604E2B5)
??+0 (0x7F0AF604DC92)
??+0 (0x7F0AF604D87D)
??+0 (0x111C0AA8)
std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > > std::__y1::transform[abi:ue170006]<NKikimr::NMiniKQL::IComputationNode* const*, std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > >, std::__y1::__bind<NYql::NUdf::TUnboxedValue (NKikimr::NMiniKQL::IComputationNode::*)(NKikimr::NMiniKQL::TComputationContext&) const, std::__y1::placeholders::__ph<1> const&, std::__y1::reference_wrapper<NKikimr::NMiniKQL::TComputationContext> > >(NKikimr::NMiniKQL::IComputationNode* const*, NKikimr::NMiniKQL::IComputationNode* const*, std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > >, std::__y1::__bind<NYql::NUdf::TUnboxedValue (NKikimr::NMiniKQL::+131 (0x11176A73)
??+0 (0x11178476)
??+0 (0x111778D4)
??+0 (0x118D0F1F)
??+0 (0x118D00CF)
??+0 (0xF400BD7)
NYql::TComputationGraphProxy::GetValue()+23 (0xF3E0137)
NYql::NFile::TYtFileGateway::ExecuteResult(NYql::NFile::TSession&, NYson::TYsonWriter&, NYql::NNodes::TExprBase, NYql::TExprContext&, NYql::IYtGateway::TResOrPullOptions&&, TVector<TBasicString<char, std::__y1::char_traits<char> >, std::__y1::allocator<TBasicString<char, std::__y1::char_traits<char> > > > const&) const+1930 (0xF3B390A)
NYql::NFile::TYtFileGateway::ResOrPull(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&, NYql::IYtGateway::TResOrPullOptions&&)+881 (0xF39E1E1)
??+0 (0xE573A25)
??+0 (0xE57705A)
NYql::TExecTransformerBase::CallbackTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+1098 (0xE57B2DA)
NYql::TAsyncCallbackTransformer<NYql::TExecTransformerBase>::DoTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+37 (0xE576715)
NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+152 (0xB0A99A8)
??+0 (0xC6EE740)
??+0 (0xC6E34EB)
NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+152 (0xB0A99A8)
??+0 (0xC7DA35F)
??+0 (0xC7DEBD0)
??+0 (0xC7D9E82)
??+0 (0xC7DEA6C)
??+0 (0xC7D9E82)
??+0 (0xC7DEA6C)
??+0 (0xC7D9E82)
??+0 (0xC7D6984)
NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+152 (0xB0A99A8)
??+0 (0xB0AA175)
NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)+152 (0xB0A99A8)
NYql::AsyncTransformStepImpl(NYql::IGraphTransformer&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, bool, bool, TBasicStringBuf<char, std::__y1::char_traits<char> > const&)+290 (0xB0A8412)
NYql::AsyncTransform(NYql::IGraphTransformer&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, bool)+66 (0xB0A8D72)
NYql::TProgram::AsyncTransformWithFallback(bool)+81 (0xBFEFC11)
??+0 (0xC001380)
NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)+3119 (0xBFEDBDF)
??+0 (0xBFEACBA)
NYql::TProgram::Run(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)+129 (0xBFECF71)
Main(int, char**)+6488 (0x9876608)
main+343 (0x9878FD7)
__libc_start_main+243 (0x7F0AF5E3C083)
??+0 (0x980A029)
__GI_raise at ../sysdeps/unix/sysv/linux/raise.c:48:0
__GI_abort at /build/glibc-wuryBv/glibc-2.31/stdlib/abort.c:79:0
NPrivate::InternalPanicImpl(int, char const*, char const*, int, int, int, TBasicStringBuf<char, std::__y1::char_traits<char> >, char const*, unsigned long) at /-S/util/system/yassert.cpp:90:0
NPrivate::Panic(NPrivate::TStaticBuf const&, int, char const*, char const*, char const*, ...) at /-S/util/system/yassert.cpp:55:0
NKikimr::NMiniKQL::(anonymous namespace)::TJoinDictWrapper<false>::JoinDicts(NKikimr::NMiniKQL::TComputationContext&, NYql::NUdf::TUnboxedValuePod, NYql::NUdf::TUnboxedValuePod) const at /-B/ydb/library/yql/minikql/comp_nodes/llvm14/mkql_join_dict.cpp:149:0
??? at ???:0:0
??? at ???:0:0
??? at ???:0:0
NKikimr::NMiniKQL::TCodegeneratorRootNode<NKikimr::NMiniKQL::TMutableCodegeneratorNode<NKikimr::NMiniKQL::(anonymous namespace)::TListMapWrapper>, true>::GetValue(NKikimr::NMiniKQL::TComputationContext&) const at /-B/ydb/library/yql/minikql/comp_nodes/llvm14/ydb/library/yql/minikql/computation/mkql_computation_node_codegen.h:845:0
std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > > std::__y1::transform[abi:ue170006]<NKikimr::NMiniKQL::IComputationNode* const*, std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > >, std::__y1::__bind<NYql::NUdf::TUnboxedValue (NKikimr::NMiniKQL::IComputationNode::*)(NKikimr::NMiniKQL::TComputationContext&) const, std::__y1::placeholders::__ph<1> const&, std::__y1::reference_wrapper<NKikimr::NMiniKQL::TComputationContext> > >(NKikimr::NMiniKQL::IComputationNode* const*, NKikimr::NMiniKQL::IComputationNode* const*, std::__y1::back_insert_iterator<std::__y1::vector<NYql::NUdf::TUnboxedValue, NKikimr::NMiniKQL::TMKQLAllocator<NYql::NUdf::TUnboxedValue, (NKikimr::NMiniKQL::EMemorySubPool)0> > >, std::__y1::__bind<NYql::NUdf::TUnboxedValue (NKikimr::NMiniKQL::IComputationNode::*)(NKikimr::NMiniKQL::TComputationContext&) const, std::__y1::placeholders::__ph<1> const&, std::__y1::reference_wrapper<NKikimr::NMiniKQL::TComputationContext> >) at /-S/contrib/libs/cxxsupp/libcxx/include/__algorithm/transform.h:26:0
NKikimr::NMiniKQL::(anonymous namespace)::TOrderedExtendWrapper<false>::DoCalculate(NKikimr::NMiniKQL::TComputationContext&) const at /-B/ydb/library/yql/minikql/comp_nodes/llvm14/mkql_extend.cpp:540:0
NKikimr::NMiniKQL::TMutableComputationNode<NKikimr::NMiniKQL::(anonymous namespace)::TOrderedExtendWrapper<false> >::GetValue(NKikimr::NMiniKQL::TComputationContext&) const at /-S/ydb/library/yql/minikql/computation/mkql_computation_node_impl.h:217:0
NKikimr::NMiniKQL::(anonymous namespace)::TAlgoBaseWrapper<NKikimr::NMiniKQL::(anonymous namespace)::TAlgoWrapper, true>::DoCalculate(NKikimr::NMiniKQL::TComputationContext&) const at /-B/ydb/library/yql/minikql/comp_nodes/llvm14/mkql_sort.cpp:340:0
NKikimr::NMiniKQL::TMutableComputationNode<NKikimr::NMiniKQL::(anonymous namespace)::TAlgoBaseWrapper<NKikimr::NMiniKQL::(anonymous namespace)::TAlgoWrapper, true> >::GetValue(NKikimr::NMiniKQL::TComputationContext&) const at /-S/ydb/library/yql/minikql/computation/mkql_computation_node_impl.h:214:0
NKikimr::NMiniKQL::(anonymous namespace)::TComputationGraph::GetValue() at /-B/ydb/library/yql/minikql/computation/llvm14/mkql_computation_node_graph.cpp:623:0
NYql::TComputationGraphProxy::GetValue() at /-S/ydb/library/yql/providers/yt/lib/lambda_builder/lambda_builder.cpp:116:0
NYql::NFile::TYtFileGateway::ExecuteResult(NYql::NFile::TSession&, NYson::TYsonWriter&, NYql::NNodes::TExprBase, NYql::TExprContext&, NYql::IYtGateway::TResOrPullOptions&&, TVector<TBasicString<char, std::__y1::char_traits<char> >, std::__y1::allocator<TBasicString<char, std::__y1::char_traits<char> > > > const&) const at /-S/ydb/library/yql/providers/yt/gateway/file/yql_yt_file.cpp:1201:0
NYql::NFile::TYtFileGateway::ResOrPull(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&, NYql::IYtGateway::TResOrPullOptions&&) at /-S/ydb/library/yql/providers/yt/gateway/file/yql_yt_file.cpp:644:0
NYql::(anonymous namespace)::TYtDataSourceExecTransformer::HandleResOrPull(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&) at /-S/ydb/library/yql/providers/yt/provider/yql_yt_datasource_exec.cpp:181:0
std::__y1::__function::__func<std::__y1::function<std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> NYql::TExecTransformerBase::Hndl<NYql::(anonymous namespace)::TYtDataSourceExecTransformer>(std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (NYql::(anonymous namespace)::TYtDataSourceExecTransformer::*)(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&))::'lambda'(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&), std::__y1::allocator<std::__y1::function<std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> NYql::TExecTransformerBase::Hndl<NYql::(anonymous namespace)::TYtDataSourceExecTransformer>(std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (NYql::(anonymous namespace)::TYtDataSourceExecTransformer::*)(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, NYql::TExprContext&))::'lambda'(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)>, std::__y1::pair<NYql::IGraphTransformer::TStatus, NThreading::TFuture<std::__y1::function<NYql::IGraphTransformer::TStatus (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)> > > (TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&)>::operator()(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/contrib/libs/cxxsupp/libcxx/include/__functional/function.h:363:0
NYql::TExecTransformerBase::CallbackTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/providers/common/transform/yql_exec.cpp:27:0
NYql::TAsyncCallbackTransformer<NYql::TExecTransformerBase>::DoTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/core/yql_graph_transformer.h:332:0
NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/core/yql_graph_transformer.h:160:0
NYql::IGraphTransformer::TStatus NYql::(anonymous namespace)::TResultCallableExecutionTransformer::HandleFillOrPull<NYql::NNodes::NGenerated::TResultStub<NYql::NNodes::TExprBase, NYql::NNodes::NGenerated::TResOrPullBaseStub<NYql::NNodes::TExprBase, NYql::NNodes::TCallable, NYql::NNodes::TCoAtom, NYql::NNodes::NGenerated::TCoNameValueTupleListStub<NYql::NNodes::TExprBase, NYql::NNodes::TListBase, NYql::NNodes::NGenerated::TCoNameValueTupleStub<NYql::NNodes::TExprBase, NYql::NNodes::TCoAtom> > > > >(NYql::NNodes::TExprBase, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, NYql::IDataProvider&) at /-S/ydb/library/yql/providers/result/provider/yql_result_provider.cpp:609:0
NYql::(anonymous namespace)::TResultCallableExecutionTransformer::DoTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/providers/result/provider/yql_result_provider.cpp:248:0
NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/core/yql_graph_transformer.h:160:0
NYql::(anonymous namespace)::TExecutionTransformer::ExecuteNode(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, unsigned int) at /-S/ydb/library/yql/core/yql_execution.cpp:274:0
NYql::(anonymous namespace)::TExecutionTransformer::ExecuteChildren(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, unsigned int) at /-S/ydb/library/yql/core/yql_execution.cpp:340:0
NYql::(anonymous namespace)::TExecutionTransformer::ExecuteNode(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, unsigned int) at /-S/ydb/library/yql/core/yql_execution.cpp:285:0
NYql::(anonymous namespace)::TExecutionTransformer::ExecuteChildren(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, unsigned int) at /-S/ydb/library/yql/core/yql_execution.cpp:321:0
NYql::(anonymous namespace)::TExecutionTransformer::ExecuteNode(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, unsigned int) at /-S/ydb/library/yql/core/yql_execution.cpp:285:0
NYql::(anonymous namespace)::TExecutionTransformer::ExecuteChildren(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, unsigned int) at /-S/ydb/library/yql/core/yql_execution.cpp:321:0
NYql::(anonymous namespace)::TExecutionTransformer::ExecuteNode(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, unsigned int) at /-S/ydb/library/yql/core/yql_execution.cpp:285:0
NYql::(anonymous namespace)::TExecutionTransformer::DoTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/core/yql_execution.cpp:77:0
NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/core/yql_graph_transformer.h:160:0
NYql::(anonymous namespace)::TCompositeGraphTransformer::DoTransform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/core/yql_graph_transformer.cpp:47:0
NYql::TGraphTransformerBase::Transform(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&) at /-S/ydb/library/yql/core/yql_graph_transformer.h:160:0
NYql::AsyncTransformStepImpl(NYql::IGraphTransformer&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, bool, bool, TBasicStringBuf<char, std::__y1::char_traits<char> > const&) at /-S/ydb/library/yql/core/yql_graph_transformer.cpp:312:0
NYql::AsyncTransform(NYql::IGraphTransformer&, TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> >&, NYql::TExprContext&, bool) at /-S/ydb/library/yql/core/yql_graph_transformer.cpp:364:0
NYql::TProgram::AsyncTransformWithFallback(bool) at /-S/ydb/library/yql/core/facade/yql_facade.cpp:1153:0
NThreading::TFuture<NThreading::NImpl::TFutureType<NThreading::NImpl::TFutureCallResult<NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)::$_0, void>::TType>::TType> NThreading::TFuture<void>::Apply<NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)::$_0>(NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool)::$_0&&) const::'lambda'(NThreading::TFuture<void> const&)::operator()(NThreading::TFuture<void> const&) at /-S/library/cpp/threading/future/core/future-inl.h:726:0
NYql::TProgram::RunAsync(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool) at /-S/ydb/library/yql/core/facade/yql_facade.cpp:1018:0
NYql::IGraphTransformer::TStatus NYql::(anonymous namespace)::SyncExecution<TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool, TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*&, IOutputStream*&, IOutputStream*&, bool&>(NYql::TProgram*, NThreading::TFuture<NYql::IGraphTransformer::TStatus> (NYql::TProgram::*)(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool), TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*&, IOutputStream*&, IOutputStream*&, bool&) at /-S/ydb/library/yql/core/facade/yql_facade.cpp:69:0
NYql::TProgram::Run(TBasicString<char, std::__y1::char_traits<char> > const&, IOutputStream*, IOutputStream*, IOutputStream*, bool) at /-S/ydb/library/yql/core/facade/yql_facade.cpp:953:0
Main(int, char**) at /-S/ydb/library/yql/tools/pgrun/pgrun.cpp:1301:0
main at /-S/ydb/library/yql/tools/pgrun/pgrun.cpp:1341:0
__libc_start_main at ../csu/libc-start.c:308:0
??? at ???:0:0
