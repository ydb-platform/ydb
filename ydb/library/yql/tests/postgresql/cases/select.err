<sql-statement>
--
-- SELECT
--
-- btree index
-- awk '{if($1<10){print;}else{next;}}' onek.data | sort +0n -1
--
SELECT * FROM onek
   WHERE onek.unique1 < 10
   ORDER BY onek.unique1;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek
    
<sql-statement>
--
-- awk '{if($1<20){print $1,$14;}else{next;}}' onek.data | sort +0nr -1
--
SELECT onek.unique1, onek.stringu1 FROM onek
   WHERE onek.unique1 < 20
   ORDER BY unique1 using >;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:6:27: Error: sortby_dir unsupported value: 3
    	   ORDER BY unique1 using >;
	                          ^
<sql-statement>
--
-- awk '{if($1>980){print $1,$14;}else{next;}}' onek.data | sort +1d -2
--
SELECT onek.unique1, onek.stringu1 FROM onek
   WHERE onek.unique1 > 980
   ORDER BY stringu1 using <;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:6:28: Error: sortby_dir unsupported value: 3
    	   ORDER BY stringu1 using <;
	                           ^
<sql-statement>
--
-- awk '{if($1>980){print $1,$16;}else{next;}}' onek.data |
-- sort +1d -2 +0nr -1
--
SELECT onek.unique1, onek.string4 FROM onek
   WHERE onek.unique1 > 980
   ORDER BY string4 using <, unique1 using >;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:7:27: Error: sortby_dir unsupported value: 3
    	   ORDER BY string4 using <, unique1 using >;
	                          ^
<sql-statement>
--
-- awk '{if($1>980){print $1,$16;}else{next;}}' onek.data |
-- sort +1dr -2 +0n -1
--
SELECT onek.unique1, onek.string4 FROM onek
   WHERE onek.unique1 > 980
   ORDER BY string4 using >, unique1 using <;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:7:27: Error: sortby_dir unsupported value: 3
    	   ORDER BY string4 using >, unique1 using <;
	                          ^
<sql-statement>
--
-- awk '{if($1<20){print $1,$16;}else{next;}}' onek.data |
-- sort +0nr -1 +1d -2
--
SELECT onek.unique1, onek.string4 FROM onek
   WHERE onek.unique1 < 20
   ORDER BY unique1 using >, string4 using <;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:7:27: Error: sortby_dir unsupported value: 3
    	   ORDER BY unique1 using >, string4 using <;
	                          ^
<sql-statement>
--
-- awk '{if($1<20){print $1,$16;}else{next;}}' onek.data |
-- sort +0n -1 +1dr -2
--
SELECT onek.unique1, onek.string4 FROM onek
   WHERE onek.unique1 < 20
   ORDER BY unique1 using <, string4 using >;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:7:27: Error: sortby_dir unsupported value: 3
    	   ORDER BY unique1 using <, string4 using >;
	                          ^
<sql-statement>
--
-- test partial btree indexes
--
-- As of 7.2, planner probably won't pick an indexscan without stats,
-- so ANALYZE first.  Also, we want to prevent it from picking a bitmapscan
-- followed by sort, because that could hide index ordering problems.
--
ANALYZE onek2;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 275
    	--
	^
<sql-statement>
SET enable_seqscan TO off;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported name: enable_seqscan
    	SET enable_seqscan TO off;
	^
<sql-statement>
SET enable_bitmapscan TO off;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported name: enable_bitmapscan
    	SET enable_bitmapscan TO off;
	^
<sql-statement>
SET enable_sort TO off;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported name: enable_sort
    	SET enable_sort TO off;
	^
<sql-statement>
--
-- awk '{if($1<10){print $0;}else{next;}}' onek.data | sort +0n -1
--
SELECT onek2.* FROM onek2 WHERE onek2.unique1 < 10;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek2
    
<sql-statement>
--
-- awk '{if($1<20){print $1,$14;}else{next;}}' onek.data | sort +0nr -1
--
SELECT onek2.unique1, onek2.stringu1 FROM onek2
    WHERE onek2.unique1 < 20
    ORDER BY unique1 using >;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:6:28: Error: sortby_dir unsupported value: 3
    	    ORDER BY unique1 using >;
	                           ^
<sql-statement>
--
-- awk '{if($1>980){print $1,$14;}else{next;}}' onek.data | sort +1d -2
--
SELECT onek2.unique1, onek2.stringu1 FROM onek2
   WHERE onek2.unique1 > 980;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek2
    
<sql-statement>
RESET enable_seqscan;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported kind: 4
    	RESET enable_seqscan;
	^
<sql-statement>
RESET enable_bitmapscan;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported kind: 4
    	RESET enable_bitmapscan;
	^
<sql-statement>
RESET enable_sort;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported kind: 4
    	RESET enable_sort;
	^
<sql-statement>
SELECT two, stringu1, ten, string4
   INTO TABLE tmp
   FROM onek;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: SelectStmt: not supported intoClause
    	SELECT two, stringu1, ten, string4
	^
<sql-statement>
--
-- awk '{print $1,$2;}' person.data |
-- awk '{if(NF!=2){print $3,$2;}else{print;}}' - emp.data |
-- awk '{if(NF!=2){print $3,$2;}else{print;}}' - student.data |
-- awk 'BEGIN{FS="      ";}{if(NF!=2){print $4,$5;}else{print;}}' - stud_emp.data
--
-- SELECT name, age FROM person*; ??? check if different
SELECT p.name, p.age FROM person* p;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.person
    
<sql-statement>
--
-- awk '{print $1,$2;}' person.data |
-- awk '{if(NF!=2){print $3,$2;}else{print;}}' - emp.data |
-- awk '{if(NF!=2){print $3,$2;}else{print;}}' - student.data |
-- awk 'BEGIN{FS="      ";}{if(NF!=1){print $4,$5;}else{print;}}' - stud_emp.data |
-- sort +1nr -2
--
SELECT p.name, p.age FROM person* p ORDER BY age using >, name;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:8:56: Error: sortby_dir unsupported value: 3
    	SELECT p.name, p.age FROM person* p ORDER BY age using >, name;
	                                                       ^
<sql-statement>
--
-- Test some cases involving whole-row Var referencing a subquery
--
select foo from (select 1 offset 0) as foo;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem
    	--
	^
        -stdin-:<main>:4:8: Error: No such column: foo
        	select foo from (select 1 offset 0) as foo;
	       ^
<sql-statement>
select foo from (select null offset 0) as foo;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem
    	select foo from (select null offset 0) as foo;
	^
        -stdin-:<main>:1:8: Error: No such column: foo
        	select foo from (select null offset 0) as foo;
	       ^
<sql-statement>
select foo from (select 'xyzzy',1,null offset 0) as foo;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem
    	select foo from (select 'xyzzy',1,null offset 0) as foo;
	^
        -stdin-:<main>:1:8: Error: No such column: foo
        	select foo from (select 'xyzzy',1,null offset 0) as foo;
	       ^
<sql-statement>
--
-- Test VALUES lists
--
select * from onek, (values(147, 'RFAAAA'), (931, 'VJAAAA')) as v (i, j)
    WHERE onek.unique1 = v.i and onek.stringu1 = v.j;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek
    
<sql-statement>
-- a more complex case
-- looks like we're coding lisp :-)
select * from onek,
  (values ((select i from
    (values(10000), (2), (389), (1000), (2000), ((select 10029))) as foo(i)
    order by i asc limit 1))) bar (i)
  where onek.unique1 = bar.i;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:4:12: Error: SubLinks are not allowed in: VALUES
    	  (values ((select i from
	           ^
<sql-statement>
-- try VALUES in a subquery
select * from onek
    where (unique1,ten) in (values (1,1), (20,0), (99,9), (17,99))
    order by unique1;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:3:25: Error: alternative is not implemented yet : 138
    	    where (unique1,ten) in (values (1,1), (20,0), (99,9), (17,99))
	                        ^
<sql-statement>
-- VALUES is also legal as a standalone query or a set-operation member
VALUES (1,2), (3,4+4), (7,77.7);
</sql-statement>
<sql-statement>
VALUES (1,2), (3,4+4), (7,77.7)
UNION ALL
SELECT 2+2, 57
UNION ALL
TABLE int8_tbl;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.int8_tbl
    
<sql-statement>
-- corner case: VALUES with no columns
CREATE TEMP TABLE nocols();
</sql-statement>
<sql-statement>
INSERT INTO nocols DEFAULT VALUES;
</sql-statement>
-stdin-:<main>: Fatal: tools/enum_parser/enum_serialization_runtime/enum_runtime.cpp:70: Key 'default_values' not found in enum NYql::EYtSettingType. Valid options are: 'initial', 'infer_scheme', 'force_infer_schema', 'do_not_fail_on_invalid_schema', 'direct_read', 'view', 'mode', 'scheme', 'weak_concat', 'anonymous', 'with_qb', 'inline', 'sample', 'joinLabel', 'ignore_non_existing', 'warn_non_existing', 'xlock', 'unordered', 'nonUnique', 'userschema', 'usercolumns', 'statcolumns', 'syscolumns', 'ignoretypev3', 'memUsage', 'itemsCount', 'rowFactor', 'ordered', 'keyFilter', 'keyFilter2', 'take', 'skip', 'limit', 'sortLimitBy', 'sortBy', 'reduceBy', 'reduceFilterBy', 'forceTransform', 'weakFields', 'sharded', 'combineChunks', 'jobCount', 'joinReduce', 'firstAsPrimary', 'flow', 'keepSorted', 'keySwitch', 'uniqueBy', 'opHash', 'mapOutputType', 'reduceInputType', 'noDq', 'split', 'compression_codec', 'erasure_codec', 'expiration', 'replication_factor', 'user_attrs', 'media', 'primary_medium', 'keep_meta', 'monotonic_keys'. 

<sql-statement>
SELECT * FROM nocols n, LATERAL (VALUES(n.*)) v;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RangeSubselect: unsupported lateral
    	SELECT * FROM nocols n, LATERAL (VALUES(n.*)) v;
	^
<sql-statement>
--
-- Test ORDER BY options
--
CREATE TEMP TABLE foo (f1 int);
</sql-statement>
<sql-statement>
INSERT INTO foo VALUES (42),(3),(10),(7),(null),(null),(1);
</sql-statement>
<sql-statement>
SELECT * FROM foo ORDER BY f1;
</sql-statement>
<sql-statement>
SELECT * FROM foo ORDER BY f1 ASC;	-- same thing
</sql-statement>
<sql-statement>
SELECT * FROM foo ORDER BY f1 NULLS FIRST;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: sortby_nulls unsupported value: 1
    	SELECT * FROM foo ORDER BY f1 NULLS FIRST;
	^
<sql-statement>
SELECT * FROM foo ORDER BY f1 DESC;
</sql-statement>
<sql-statement>
SELECT * FROM foo ORDER BY f1 DESC NULLS LAST;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: sortby_nulls unsupported value: 2
    	SELECT * FROM foo ORDER BY f1 DESC NULLS LAST;
	^
<sql-statement>
-- check if indexscans do the right things
CREATE INDEX fooi ON foo (f1);
</sql-statement>
<sql-statement>
SET enable_sort = false;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported name: enable_sort
    	SET enable_sort = false;
	^
<sql-statement>
SELECT * FROM foo ORDER BY f1;
</sql-statement>
<sql-statement>
SELECT * FROM foo ORDER BY f1 NULLS FIRST;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: sortby_nulls unsupported value: 1
    	SELECT * FROM foo ORDER BY f1 NULLS FIRST;
	^
<sql-statement>
SELECT * FROM foo ORDER BY f1 DESC;
</sql-statement>
<sql-statement>
SELECT * FROM foo ORDER BY f1 DESC NULLS LAST;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: sortby_nulls unsupported value: 2
    	SELECT * FROM foo ORDER BY f1 DESC NULLS LAST;
	^
<sql-statement>
DROP INDEX fooi;
</sql-statement>
-stdin-:<main>: Error: Pre type annotation

    -stdin-:<main>:1:1: Error: Unexpected tag: pgObject
    	DROP INDEX fooi;
	^
<sql-statement>
CREATE INDEX fooi ON foo (f1 DESC);
</sql-statement>
<sql-statement>
SELECT * FROM foo ORDER BY f1;
</sql-statement>
<sql-statement>
SELECT * FROM foo ORDER BY f1 NULLS FIRST;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: sortby_nulls unsupported value: 1
    	SELECT * FROM foo ORDER BY f1 NULLS FIRST;
	^
<sql-statement>
SELECT * FROM foo ORDER BY f1 DESC;
</sql-statement>
<sql-statement>
SELECT * FROM foo ORDER BY f1 DESC NULLS LAST;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: sortby_nulls unsupported value: 2
    	SELECT * FROM foo ORDER BY f1 DESC NULLS LAST;
	^
<sql-statement>
DROP INDEX fooi;
</sql-statement>
-stdin-:<main>: Error: Pre type annotation

    -stdin-:<main>:1:1: Error: Unexpected tag: pgObject
    	DROP INDEX fooi;
	^
<sql-statement>
CREATE INDEX fooi ON foo (f1 DESC NULLS LAST);
</sql-statement>
<sql-statement>
SELECT * FROM foo ORDER BY f1;
</sql-statement>
<sql-statement>
SELECT * FROM foo ORDER BY f1 NULLS FIRST;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: sortby_nulls unsupported value: 1
    	SELECT * FROM foo ORDER BY f1 NULLS FIRST;
	^
<sql-statement>
SELECT * FROM foo ORDER BY f1 DESC;
</sql-statement>
<sql-statement>
SELECT * FROM foo ORDER BY f1 DESC NULLS LAST;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: sortby_nulls unsupported value: 2
    	SELECT * FROM foo ORDER BY f1 DESC NULLS LAST;
	^
<sql-statement>
--
-- Test planning of some cases with partial indexes
--
-- partial index is usable
explain (costs off)
select * from onek2 where unique2 = 11 and stringu1 = 'ATAAAA';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	--
	^
<sql-statement>
select * from onek2 where unique2 = 11 and stringu1 = 'ATAAAA';
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek2
    
<sql-statement>
-- actually run the query with an analyze to use the partial index
explain (costs off, analyze on, timing off, summary off)
select * from onek2 where unique2 = 11 and stringu1 = 'ATAAAA';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	-- actually run the query with an analyze to use the partial index
	^
<sql-statement>
explain (costs off)
select unique2 from onek2 where unique2 = 11 and stringu1 = 'ATAAAA';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	explain (costs off)
	^
<sql-statement>
select unique2 from onek2 where unique2 = 11 and stringu1 = 'ATAAAA';
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek2
    
<sql-statement>
-- partial index predicate implies clause, so no need for retest
explain (costs off)
select * from onek2 where unique2 = 11 and stringu1 < 'B';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	-- partial index predicate implies clause, so no need for retest
	^
<sql-statement>
select * from onek2 where unique2 = 11 and stringu1 < 'B';
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek2
    
<sql-statement>
explain (costs off)
select unique2 from onek2 where unique2 = 11 and stringu1 < 'B';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	explain (costs off)
	^
<sql-statement>
select unique2 from onek2 where unique2 = 11 and stringu1 < 'B';
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek2
    
<sql-statement>
-- but if it's an update target, must retest anyway
explain (costs off)
select unique2 from onek2 where unique2 = 11 and stringu1 < 'B' for update;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	-- but if it's an update target, must retest anyway
	^
<sql-statement>
select unique2 from onek2 where unique2 = 11 and stringu1 < 'B' for update;
</sql-statement>
-stdin-:<main>: Warning: Parse Sql

    -stdin-:<main>:1:1: Warning: SelectStmt: lockingClause is ignored
    	select unique2 from onek2 where unique2 = 11 and stringu1 < 'B' for update;
	^
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek2
    
<sql-statement>
-- partial index is not applicable
explain (costs off)
select unique2 from onek2 where unique2 = 11 and stringu1 < 'C';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	-- partial index is not applicable
	^
<sql-statement>
select unique2 from onek2 where unique2 = 11 and stringu1 < 'C';
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek2
    
<sql-statement>
-- partial index implies clause, but bitmap scan must recheck predicate anyway
SET enable_indexscan TO off;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported name: enable_indexscan
    	-- partial index implies clause, but bitmap scan must recheck predicate anyway
	^
<sql-statement>
explain (costs off)
select unique2 from onek2 where unique2 = 11 and stringu1 < 'B';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	explain (costs off)
	^
<sql-statement>
select unique2 from onek2 where unique2 = 11 and stringu1 < 'B';
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek2
    
<sql-statement>
RESET enable_indexscan;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: VariableSetStmt, not supported kind: 4
    	RESET enable_indexscan;
	^
<sql-statement>
-- check multi-index cases too
explain (costs off)
select unique1, unique2 from onek2
  where (unique2 = 11 or unique1 = 0) and stringu1 < 'B';
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	-- check multi-index cases too
	^
<sql-statement>
select unique1, unique2 from onek2
  where (unique2 = 11 or unique1 = 0) and stringu1 < 'B';
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek2
    
<sql-statement>
explain (costs off)
select unique1, unique2 from onek2
  where (unique2 = 11 and stringu1 < 'B') or unique1 = 0;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	explain (costs off)
	^
<sql-statement>
select unique1, unique2 from onek2
  where (unique2 = 11 and stringu1 < 'B') or unique1 = 0;
</sql-statement>
-stdin-:<main>: Fatal: Table metadata loading

    -stdin-:<main>: Fatal: ydb/library/yql/providers/yt/gateway/file/yql_yt_file_services.cpp:44: Table not found: plato.onek2
    
<sql-statement>
--
-- Test some corner cases that have been known to confuse the planner
--
-- ORDER BY on a constant doesn't really need any sorting
SELECT 1 AS x ORDER BY x;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem
    	--
	^
        -stdin-:<main>:5:24: Error: Column reference can't be used without FROM
        	SELECT 1 AS x ORDER BY x;
	                       ^
<sql-statement>
-- But ORDER BY on a set-valued expression does
create function sillysrf(int) returns setof int as
  'values (1),(10),(2),($1)' language sql immutable;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 261
    	-- But ORDER BY on a set-valued expression does
	^
<sql-statement>
select sillysrf(42);
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	select sillysrf(42);
	^
        -stdin-:<main>:1:8: Error: At function: PgCall
        	select sillysrf(42);
	       ^
            -stdin-:<main>:1:8: Error: No such proc: sillysrf
            	select sillysrf(42);
	       ^
<sql-statement>
select sillysrf(-1) order by 1;
</sql-statement>
-stdin-:<main>: Error: Type annotation

    -stdin-:<main>:1:1: Error: At function: RemovePrefixMembers, At function: PgSelect, At function: PgSetItem, At function: PgResultItem
    	select sillysrf(-1) order by 1;
	^
        -stdin-:<main>:1:8: Error: At function: PgCall
        	select sillysrf(-1) order by 1;
	       ^
            -stdin-:<main>:1:8: Error: No such proc: sillysrf
            	select sillysrf(-1) order by 1;
	       ^
<sql-statement>
drop function sillysrf(int);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: DropStmt: alternative is not implemented yet : 386
    	drop function sillysrf(int);
	^
<sql-statement>
-- X = X isn't a no-op, it's effectively X IS NOT NULL assuming = is strict
-- (see bug #5084)
select * from (values (2),(null),(1)) v(k) where k = k order by k;
</sql-statement>
<sql-statement>
select * from (values (2),(null),(1)) v(k) where k = k;
</sql-statement>
<sql-statement>
-- Test partitioned tables with no partitions, which should be handled the
-- same as the non-inheritance case when expanding its RTE.
create table list_parted_tbl (a int,b int) partition by list (a);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: PARTITION BY clause not supported
    	-- Test partitioned tables with no partitions, which should be handled the
	^
<sql-statement>
create table list_parted_tbl1 partition of list_parted_tbl
  for values in (1) partition by list(b);
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: table inheritance not supported
    	create table list_parted_tbl1 partition of list_parted_tbl
	^
<sql-statement>
explain (costs off) select * from list_parted_tbl;
</sql-statement>
-stdin-:<main>: Error: Parse Sql

    -stdin-:<main>:1:1: Error: RawStmt: alternative is not implemented yet : 276
    	explain (costs off) select * from list_parted_tbl;
	^
<sql-statement>
drop table list_parted_tbl;
</sql-statement>
