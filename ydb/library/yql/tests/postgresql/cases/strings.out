--
-- STRINGS
-- Test various data entry syntaxes.
--
-- SQL string continuation syntax
-- E021-03 character string literals
SELECT 'first line'
' - next line'
	' - third line'
	AS "Three lines to one";
         Three lines to one          
-------------------------------------
 first line - next line - third line
(1 row)

-- illegal string continuation syntax
SELECT 'first line'
' - next line' /* this comment is not allowed here */
' - third line'
	AS "Illegal comment within continuation";
ERROR:  syntax error at or near "' - third line'"
LINE 3: ' - third line'
        ^
-- Unicode escapes
SET standard_conforming_strings TO on;
SELECT U&'d\0061t\+000061' AS U&"d\0061t\+000061";
 data 
------
 data
(1 row)

SELECT U&'d!0061t\+000061' UESCAPE '!' AS U&"d*0061t\+000061" UESCAPE '*';
 dat\+000061 
-------------
 dat\+000061
(1 row)

SELECT U&'a\\b' AS "a\b";
 a\b 
-----
 a\b
(1 row)

SELECT U&' \' UESCAPE '!' AS "tricky";
 tricky 
--------
  \
(1 row)

SELECT 'tricky' AS U&"\" UESCAPE '!';
   \    
--------
 tricky
(1 row)

SELECT U&'wrong: \061';
ERROR:  invalid Unicode escape
LINE 1: SELECT U&'wrong: \061';
                         ^
HINT:  Unicode escapes must be \XXXX or \+XXXXXX.
SELECT U&'wrong: \+0061';
ERROR:  invalid Unicode escape
LINE 1: SELECT U&'wrong: \+0061';
                         ^
HINT:  Unicode escapes must be \XXXX or \+XXXXXX.
SELECT U&'wrong: +0061' UESCAPE +;
ERROR:  UESCAPE must be followed by a simple string literal at or near "+"
LINE 1: SELECT U&'wrong: +0061' UESCAPE +;
                                        ^
SELECT U&'wrong: +0061' UESCAPE '+';
ERROR:  invalid Unicode escape character at or near "'+'"
LINE 1: SELECT U&'wrong: +0061' UESCAPE '+';
                                        ^
SELECT U&'wrong: \db99';
ERROR:  invalid Unicode surrogate pair
LINE 1: SELECT U&'wrong: \db99';
                              ^
SELECT U&'wrong: \db99xy';
ERROR:  invalid Unicode surrogate pair
LINE 1: SELECT U&'wrong: \db99xy';
                              ^
SELECT U&'wrong: \db99\\';
ERROR:  invalid Unicode surrogate pair
LINE 1: SELECT U&'wrong: \db99\\';
                              ^
SELECT U&'wrong: \db99\0061';
ERROR:  invalid Unicode surrogate pair
LINE 1: SELECT U&'wrong: \db99\0061';
                              ^
SELECT U&'wrong: \+00db99\+000061';
ERROR:  invalid Unicode surrogate pair
LINE 1: SELECT U&'wrong: \+00db99\+000061';
                                 ^
SELECT U&'wrong: \+2FFFFF';
ERROR:  invalid Unicode escape value
LINE 1: SELECT U&'wrong: \+2FFFFF';
                         ^
-- while we're here, check the same cases in E-style literals
SELECT E'd\u0061t\U00000061' AS "data";
 data 
------
 data
(1 row)

SELECT E'a\\b' AS "a\b";
 a\b 
-----
 a\b
(1 row)

SELECT E'wrong: \u061';
ERROR:  invalid Unicode escape
LINE 1: SELECT E'wrong: \u061';
                        ^
HINT:  Unicode escapes must be \uXXXX or \UXXXXXXXX.
SELECT E'wrong: \U0061';
ERROR:  invalid Unicode escape
LINE 1: SELECT E'wrong: \U0061';
                        ^
HINT:  Unicode escapes must be \uXXXX or \UXXXXXXXX.
SELECT E'wrong: \udb99';
ERROR:  invalid Unicode surrogate pair at or near "'"
LINE 1: SELECT E'wrong: \udb99';
                              ^
SELECT E'wrong: \udb99xy';
ERROR:  invalid Unicode surrogate pair at or near "x"
LINE 1: SELECT E'wrong: \udb99xy';
                              ^
SELECT E'wrong: \udb99\\';
ERROR:  invalid Unicode surrogate pair at or near "\"
LINE 1: SELECT E'wrong: \udb99\\';
                              ^
SELECT E'wrong: \udb99\u0061';
ERROR:  invalid Unicode surrogate pair at or near "\u0061"
LINE 1: SELECT E'wrong: \udb99\u0061';
                              ^
SELECT E'wrong: \U0000db99\U00000061';
ERROR:  invalid Unicode surrogate pair at or near "\U00000061"
LINE 1: SELECT E'wrong: \U0000db99\U00000061';
                                  ^
SELECT E'wrong: \U002FFFFF';
ERROR:  invalid Unicode escape value at or near "\U002FFFFF"
LINE 1: SELECT E'wrong: \U002FFFFF';
                        ^
SET standard_conforming_strings TO off;
SELECT 'tricky' AS U&"\" UESCAPE '!';
   \    
--------
 tricky
(1 row)

RESET standard_conforming_strings;
