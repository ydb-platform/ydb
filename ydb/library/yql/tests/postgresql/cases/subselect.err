<sql-statement>
--
-- SUBSELECT
--
SELECT 1 AS one WHERE 1 IN (SELECT 1);
</sql-statement>
<sql-statement>
SELECT 1 AS zero WHERE 1 NOT IN (SELECT 1);
</sql-statement>
<sql-statement>
SELECT 1 AS zero WHERE 1 IN (SELECT 2);
</sql-statement>
<sql-statement>
-- Check grammar's handling of extra parens in assorted contexts
SELECT * FROM (SELECT 1 AS x) ss;
</sql-statement>
<sql-statement>
SELECT * FROM ((SELECT 1 AS x)) ss;
</sql-statement>
<sql-statement>
(SELECT 2) UNION SELECT 2;
</sql-statement>
NYql::TAggregateExpander::ExpandAggApply(TIntrusivePtr<NYql::TExprNode, TDefaultIntrusivePtrOps<NYql::TExprNode> > const&) at /-S/ydbwork/ydb/ydb/library/yql/core/yql_aggregate_expander.cpp:119:51
?? at ??:0:0
