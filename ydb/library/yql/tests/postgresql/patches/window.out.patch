--- window.out
+++ window.out
@@ -7,7 +7,7 @@ CREATE TEMPORARY TABLE empsalary (
     salary int,
     enroll_date date
 );
-INSERT INTO empsalary VALUES
+INSERT INTO empsalary (depname, empno, salary, enroll_date) VALUES
 ('develop', 10, 5200, '2007-08-01'),
 ('sales', 1, 5000, '2006-10-01'),
 ('personnel', 5, 3500, '2007-12-10'),
@@ -4036,30 +4036,3 @@ WINDOW w AS (ORDER BY i ROWS BETWEEN (('foo' < 'foobar')::integer) PRECEDING AND
  {4,5}
 (5 rows)
 
--- test mutator (fails when inlined if expressions are not mutated)
-CREATE FUNCTION pg_temp.f(group_size BIGINT) RETURNS SETOF integer[]
-AS $$
-    SELECT array_agg(s) OVER w
-      FROM generate_series(1,5) s
-    WINDOW w AS (ORDER BY s ROWS BETWEEN CURRENT ROW AND GROUP_SIZE FOLLOWING)
-$$ LANGUAGE SQL STABLE;
-EXPLAIN (costs off) SELECT * FROM pg_temp.f(2);
-                      QUERY PLAN                      
-------------------------------------------------------
- Subquery Scan on f
-   ->  WindowAgg
-         ->  Sort
-               Sort Key: s.s
-               ->  Function Scan on generate_series s
-(5 rows)
-
-SELECT * FROM pg_temp.f(2);
-    f    
----------
- {1,2,3}
- {2,3,4}
- {3,4,5}
- {4,5}
- {5}
-(5 rows)
-
