syntax = "proto3";
option cc_enable_arenas = true;

package Ydb.Discovery;
option java_package = "com.yandex.ydb.discovery";
option java_outer_classname = "DiscoveryProtos";

import "ydb/public/api/protos/ydb_operation.proto";

message ListEndpointsRequest {
    string database = 1;
    repeated string service = 2;

// todo: feature flags
}

message EndpointInfo {
    // This is an address (usually fqdn) and port of this node's grpc endpoint
    string address = 1;
    uint32 port = 2;
    float load_factor = 3;
    bool ssl = 4;
    repeated string service = 5;
    string location = 6;
    uint32 node_id = 7;

    // Optional ipv4 and/or ipv6 addresses of the endpoint, which clients may
    // use instead of a dns name in the address field.
    repeated string ip_v4 = 8;
    repeated string ip_v6 = 9;

    // Optional value for grpc.ssl_target_name_override option that must be
    // used when connecting to this endpoint. This may be specified when an ssl
    // endpoint is using certificate chain valid for a balancer hostname, and
    // not this specific node hostname.
    string ssl_target_name_override = 10;
}

message ListEndpointsResult {
    repeated EndpointInfo endpoints = 1;
    string self_location = 2;
}

message ListEndpointsResponse {
    Ydb.Operations.Operation operation = 1;
}

message WhoAmIRequest {
    // Include user groups in response
    bool include_groups = 1;
}

message WhoAmIResult {
    // User SID (Security ID)
    string user = 1;
    // List of group SIDs (Security IDs) for the user
    repeated string groups = 2;
}

message WhoAmIResponse {
    Ydb.Operations.Operation operation = 1;
}

message NodeLocation {
    // compatibility section -- will be removed in future versions
    optional uint32 data_center_num = 1 [deprecated=true];
    optional uint32 room_num = 2 [deprecated=true];
    optional uint32 rack_num = 3 [deprecated=true];
    optional uint32 body_num = 4 [deprecated=true];
    optional uint32 body = 100500 [deprecated=true]; // for compatibility with WalleLocation

    optional string data_center = 10;
    optional string module = 20;
    optional string rack = 30;
    optional string unit = 40;
}

message NodeInfo {
    optional uint32 node_id = 1;
    optional string host = 2;
    optional uint32 port = 3;
    optional string resolve_host = 4;
    optional string address = 5;
    optional NodeLocation location = 6;
    optional uint64 expire = 7;
}

message NodeRegistrationRequest {
    optional string host = 1;
    optional uint32 port = 2;
    optional string resolve_host = 3;
    optional string address = 4;
    optional NodeLocation location = 5;
    optional string domain_path = 6;
    optional bool fixed_node_id = 7;
    optional string path = 8;
}

message NodeRegistrationResult {
    optional uint32 node_id = 1;
    optional string domain_path = 2;
    optional uint64 expire = 3;
    repeated NodeInfo nodes = 4;
    optional uint64 scope_tablet_id = 5;
    optional uint64 scope_path_id = 6;
}

message NodeRegistrationResponse {
    Ydb.Operations.Operation operation = 1;
}
