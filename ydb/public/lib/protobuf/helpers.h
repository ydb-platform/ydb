#pragma once

#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/printer.h>

#include <util/generic/string.h>
#include <util/generic/noncopyable.h>

namespace NKikimr::NProtobuf {

TString HeaderFileName(const google::protobuf::Descriptor* message);
TString SourceFileName(const google::protobuf::Descriptor* message);
TString ClassScope(const google::protobuf::Descriptor* message);
TString NamespaceScope();
TString IncludesScope();
TString FullyQualifiedClassName(const google::protobuf::Descriptor* message);
TString ClassName(const google::protobuf::Descriptor* message);

bool IsCustomMessage(const google::protobuf::Descriptor* message);

struct IPrinter {
    virtual ~IPrinter() = default;
    virtual google::protobuf::io::Printer* operator->() = 0;
};

class TScopeIndentPrinterGuard
    : public TNonCopyable
{
public:
    TScopeIndentPrinterGuard(IPrinter& printer)
        : Printer(printer)
    {
        Printer->Indent();
    }

    ~TScopeIndentPrinterGuard() {
        Printer->Outdent();
    }

private:
    IPrinter& Printer;
};

class TPluginMarkupPrinterGuard
    : public TNonCopyable
{
public:
    TPluginMarkupPrinterGuard(IPrinter& printer, TStringBuf pluginName)
        : Printer(printer)
        , PluginName(pluginName)
    {
        Printer->Print({{"pluginName", PluginName}}, "/* BEGIN generated by $pluginName$ extension */\n");
    }

    ~TPluginMarkupPrinterGuard() {
        Printer->Print({{"pluginName", PluginName}}, "/* END generated by $pluginName$ extension */\n");
    }

private:
    IPrinter& Printer;
    const TString PluginName;
};

} // namespace NKikimr::NProtobuf
