(
(let $1 (Configure! world (DataSource '"config") '"DqEngine" '"force"))
(let $2 (DataSource '"dq" '"$all"))
(let $3 (Configure! $1 $2 '"Attr" '"maxtasksperstage" '2))
(let $4 (Configure! $3 $2 '"Attr" '"watermarksmode" '"default"))
(let $5 (Configure! $4 $2 '"Attr" '"computeactortype" '"async"))
(let $6 (Configure! $5 (DataSource '"pq" '"$all") '"Attr" '"consumer" '"test_client"))
(let $7 (DataSource '"pq" '"pq"))
(let $8 '('('"PartitionsCount" '"1")))
(let $9 (OptionalType (DataType 'Uint64)))
(let $10 '('"k" $9))
(let $11 '('"v" $9))
(let $12 (PqTopic '"pq" '"local" '"test_topic_input" $8 '('('"system" '_yql_sys_tsp_write_time)) (StructType $10 $11)))
(let $13 '('"Endpoint" '"<pq_pq_endpoint>"))
(let $14 '('"SharedReading" '"1"))
(let $15 '('"UseSsl" '"1"))
(let $16 '('('"Consumer" '"test_client") $13 $14 '('"ReconnectPeriod" '"") '('"Format" '"json_each_row") '('"ReadGroup" '"fqrun") $15 '('"WatermarksEnable" '"1") '('"WatermarksGranularityUs" '"1000000") '('"WatermarksLateArrivalDelayUs" '"5000000")))
(let $17 (SecureParam '"cluster:default_pq"))
(let $18 '('_yql_sys_tsp_write_time (DataType 'Timestamp)))
(let $19 (StructType $18 $10 $11))
(let $20 (DqPqTopicSource $6 $12 '('"k" '"v") $16 $17 '"" $19))
(let $21 (DqStage '((DqSource $7 $20)) (lambda '($25) (block '(
  (let $26 '('('"format" '"json_each_row") '('"metadataColumns" '('_yql_sys_tsp_write_time)) '('"formatSettings" '('('"data.datetime.formatname" '"POSIX") '('"data.timestamp.formatname" '"POSIX"))) '('"settings" '($14))))
  (let $27 (DqSourceWideWrap $25 $7 $19 $26))
  (return (FlatMap (NarrowMap $27 (lambda '($28 $29 $30) (AsStruct '('_yql_sys_tsp_write_time $28) '('"k" $29) '('"v" $30)))) (lambda '($31) (Just (AsStruct '('_yql_sys_tsp_write_time (Member $31 '_yql_sys_tsp_write_time)) '('group0 (Min (Member $31 '"k") (Just (Uint64 '2)))) '('"v" (Member $31 '"v")))))))
))) '('('"_logical_id" '0))))
(let $22 (DataSink '"pq" '"pq"))
(let $23 (PqTopic '"pq" '"local" '"test_topic_output" $8 '() (StructType '('"Data" (DataType 'String)))))
(let $24 (DqPqTopicSink $23 '($13 $15) $17))
(return (Commit! (DqQuery! $6 '((DqStage '((DqCnHashShuffle (TDqOutput $21 '0) '('group0))) (lambda '($32) (block '(
  (let $33 (lambda '($40) $40))
  (let $34 (MultiHoppingCore (FromFlow $32) (lambda '($35) (Member $35 'group0)) (lambda '($36) (Just (Member (SafeCast $36 (StructType $18)) '_yql_sys_tsp_write_time))) (Interval '"5000") (Interval '"10000") (Interval '"5000000") 'true (lambda '($37) (AsStruct '('Sum0 (Member $37 '"v")))) (lambda '($38 $39) (AsStruct '('Sum0 (AggrAdd (Member $38 '"v") (Member $39 'Sum0))))) $33 $33 (lambda '($41 $42) (AsStruct '('Sum0 (AggrAdd (Member $41 'Sum0) (Member $42 'Sum0))))) (lambda '($43 $44 $45) (AsStruct '('Sum0 (Member $44 'Sum0)) '('group0 $43) '('"group1" $45))) '"1"))
  (return (FlatMap (ExtractMembers $34 '('Sum0)) (lambda '($46) (block '(
    (let $47 (ResourceType '"Yson2.Node"))
    (let $48 '($47 '"" '"1"))
    (let $49 (CallableType '() '((DataType 'Yson)) $48))
    (let $50 '('('"strict")))
    (let $51 (Udf '"Yson2.SerializeText" (Void) (VoidType) '"" $49 (VoidType) '"" $50))
    (let $52 (StructType '('"sum" $9)))
    (let $53 (TupleType (TupleType $52) (StructType) (TupleType)))
    (let $54 (CallableType '() '($47) '($52)))
    (let $55 (Udf '"Yson2.From" (Void) $53 '"" $54 (VoidType) '"" $50))
    (return (Just (AsStruct '('"column0" (Apply $51 (Apply $55 (AsStruct '('"sum" (Member $46 'Sum0)))))))))
  )))))
))) '('('"_logical_id" '0)) '((DqSink '0 $22 $24))))) $22))
)
