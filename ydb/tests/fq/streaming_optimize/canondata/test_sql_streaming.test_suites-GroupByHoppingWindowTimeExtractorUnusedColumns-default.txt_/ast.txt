(
(let $1 (Configure! world (DataSource '"config") '"DqEngine" '"force"))
(let $2 (DataSource '"dq" '"$all"))
(let $3 (Configure! $1 $2 '"Attr" '"maxtasksperstage" '"2"))
(let $4 (Configure! $3 $2 '"Attr" '"watermarksmode" '"default"))
(let $5 (Configure! $4 $2 '"Attr" '"computeactortype" '"async"))
(let $6 (Configure! $5 (DataSource '"pq" '"$all") '"Attr" '"consumer" '"test_client"))
(let $7 (DataSource '"pq" '"pq"))
(let $8 '('('"PartitionsCount" '1)))
(let $9 '('"v" (OptionalType (DataType 'Uint64))))
(let $10 (PqTopic '"pq" '"local" '"test_topic_input" $8 '('('"system" '_yql_sys_tsp_write_time)) (StructType $9)))
(let $11 '('"Endpoint" '"<pq_pq_endpoint>"))
(let $12 '('"SharedReading" '1))
(let $13 '('"UseSsl" '1))
(let $14 '('('"Consumer" '"test_client") $11 $12 '('"ReconnectPeriod" '"") '('"Format" '"json_each_row") '('"ReadGroup" '"fqrun") $13 '('"WatermarksEnable" '1) '('"WatermarksGranularityUs" '"1000000") '('"WatermarksLateArrivalDelayUs" '"5000000")))
(let $15 (SecureParam '"cluster:default_pq"))
(let $16 '('_yql_sys_tsp_write_time (DataType 'Timestamp)))
(let $17 (StructType $16 $9))
(let $18 (DqPqTopicSource $6 $10 '('"v") $14 $15 '"" $17))
(let $19 (DqStage '((DqSource $7 $18)) (lambda '($24) (block '(
  (let $25 '('('"format" '"json_each_row") '('"metadataColumns" '('_yql_sys_tsp_write_time)) '('"formatSettings" '('('"data.datetime.formatname" '"POSIX") '('"data.timestamp.formatname" '"POSIX"))) '('"settings" '($12))))
  (let $26 (DqSourceWideWrap $24 $7 $17 $25))
  (return (NarrowMap $26 (lambda '($27 $28) (AsStruct '('_yql_sys_tsp_write_time $27) '('"v" $28)))))
))) '('('"_logical_id" '0))))
(let $20 (DataType 'String))
(let $21 (DataSink '"pq" '"pq"))
(let $22 (PqTopic '"pq" '"local" '"test_topic_output" $8 '() (StructType '('"Data" $20))))
(let $23 (DqPqTopicSink $22 '($11 $13) $15))
(return (Commit! (DqQuery! $6 '((DqStage '((DqCnUnionAll (TDqOutput $19 '0))) (lambda '($29) (block '(
  (let $30 (Uint32 '0))
  (let $31 '"Percentile0_Percentile1_")
  (let $32 '((ResourceType '"Stat.TDigestResource")))
  (let $33 (DataType 'Double))
  (let $34 '($33))
  (let $35 (OptionalType $33))
  (let $36 (DependsOn $30))
  (let $37 (lambda '($44) (block '(
    (let $45 '($35))
    (let $46 (CallableType '('"2") $32 $34 $45 $45))
    (let $47 (Udf '"Stat.TDigest_Create" (Void) (VoidType) '"" $46 (VoidType) '"" '()))
    (return (Just (NamedApply $47 '((Convert $44 $33)) (AsStruct) $36)))
  ))))
  (let $38 '('('"strict")))
  (let $39 '($20))
  (let $40 (MultiHoppingCore (FromFlow $29) (lambda '($41) $30) (lambda '($42) (Just (Member (SafeCast $42 (StructType $16)) '_yql_sys_tsp_write_time))) (Interval '"5000") (Interval '"10000") (Interval '"5000000") 'true (lambda '($43) (AsStruct '($31 (FlatMap (Member $43 '"v") $37)))) (lambda '($48 $49) (block '(
    (let $50 (Member $48 '"v"))
    (let $51 (IfPresent (Member $49 $31) (lambda '($52) (IfPresent $50 (lambda '($53) (block '(
      (let $54 (CallableType '() $32 $32 $34))
      (let $55 (Udf '"Stat.TDigest_AddValue" (Void) (VoidType) '"" $54 (VoidType) '"" $38))
      (return (Just (NamedApply $55 '($52 (Convert $53 $33)) (AsStruct) $36)))
    ))) (Just $52))) (FlatMap $50 $37)))
    (return (AsStruct '($31 $51)))
  ))) (lambda '($56) (AsStruct '($31 (FlatMap (Member $56 $31) (lambda '($57) (block '(
    (let $58 (CallableType '() $39 $32))
    (let $59 (Udf '"Stat.TDigest_Serialize" (Void) (VoidType) '"" $58 (VoidType) '"" $38))
    (return (Just (Apply $59 $57)))
  ))))))) (lambda '($60) (AsStruct '($31 (FlatMap (Member $60 $31) (lambda '($61) (block '(
    (let $62 (CallableType '() $32 $39))
    (let $63 (Udf '"Stat.TDigest_Deserialize" (Void) (VoidType) '"" $62 (VoidType) '"" '()))
    (return (Just (Apply $63 $61)))
  ))))))) (lambda '($64 $65) (block '(
    (let $66 (OptionalReduce (Member $64 $31) (Member $65 $31) (lambda '($67 $68) (block '(
      (let $69 (CallableType '() $32 $32 $32))
      (let $70 (Udf '"Stat.TDigest_Merge" (Void) (VoidType) '"" $69 (VoidType) '"" $38))
      (return (Apply $70 $67 $68))
    )))))
    (return (AsStruct '($31 $66)))
  ))) (lambda '($71 $72 $73) (block '(
    (let $74 (FlatMap (Member $72 $31) (lambda '($75) (block '(
      (let $76 (CallableType '() $34 $32 $34))
      (let $77 (Udf '"Stat.TDigest_GetPercentile" (Void) (VoidType) '"" $76 (VoidType) '"" $38))
      (let $78 (Apply $77 $75 (Double '"0.75")))
      (let $79 (Apply $77 $75 (Double '"0.9")))
      (return (Just '($78 $79)))
    )))))
    (return (AsStruct '('Percentile0 (Nth $74 '0)) '('Percentile1 (Nth $74 '1)) '('"group0" $73)))
  ))) '1))
  (return (FlatMap (ExtractMembers $40 '('Percentile0 'Percentile1)) (lambda '($80) (block '(
    (let $81 (ResourceType '"Yson2.Node"))
    (let $82 '($81 '"" '1))
    (let $83 (CallableType '() '((DataType 'Yson)) $82))
    (let $84 (Udf '"Yson2.SerializeText" (Void) (VoidType) '"" $83 (VoidType) '"" $38))
    (let $85 (StructType '('"p75" $35) '('"p90" $35)))
    (let $86 (TupleType (TupleType $85) (StructType) (TupleType)))
    (let $87 (CallableType '() '($81) '($85)))
    (let $88 (Udf '"Yson2.From" (Void) $86 '"" $87 (VoidType) '"" $38))
    (return (Just (AsStruct '('"column0" (Apply $84 (Apply $88 (AsStruct '('"p75" (Member $80 'Percentile0)) '('"p90" (Member $80 'Percentile1)))))))))
  )))))
))) '('('"_logical_id" '0)) '((DqSink '0 $21 $23))))) $21))
)
