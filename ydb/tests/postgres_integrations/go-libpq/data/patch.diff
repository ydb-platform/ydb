diff -ruN /original-sources/conn_test.go ./conn_test.go
--- /original-sources/conn_test.go	2023-04-26 04:34:24.000000000 +0000
+++ ./conn_test.go	2023-09-15 09:16:17.844086739 +0000
@@ -230,7 +230,7 @@
 	db := openTestConn(t)
 	defer db.Close()
 
-	_, err := db.Exec("CREATE TEMP TABLE temp (a int)")
+	_, err := db.Exec("CREATE TEMP TABLE temp (a int, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -318,7 +318,7 @@
 
 	if !r1.Next() {
 		if r.Err() != nil {
-			t.Fatal(r1.Err())
+			t.Fatal(r.Err())
 		}
 		t.Fatal("expected row")
 	}
@@ -862,7 +862,7 @@
 	defer db.Close()
 
 	// stmt.exec()
-	_, err := db.Exec("CREATE TEMP TABLE notnulltemp (a varchar(10) not null)")
+	_, err := db.Exec("CREATE TEMP TABLE notnulltemp (a varchar(10) not null, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -973,7 +973,7 @@
 	db := openTestConn(t)
 	defer db.Close()
 
-	_, err := db.Exec("create temp table test (i integer)")
+	_, err := db.Exec("create temp table test (i integer, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -1014,7 +1014,7 @@
 	db := openTestConn(t)
 	defer db.Close()
 
-	_, err := db.Exec("CREATE TEMP TABLE distributors (did integer default 0, dname text)")
+	_, err := db.Exec("CREATE TEMP TABLE distributors (did integer default 0, dname text, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -1067,7 +1067,7 @@
 	}
 	defer txn.Rollback()
 
-	rows, err := txn.Query("CREATE TEMP TABLE foo(f1 int)")
+	rows, err := txn.Query("CREATE TEMP TABLE foo(f1 int, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -1290,7 +1290,7 @@
 
 	if !r.Next() {
 		if r.Err() != nil {
-			t.Fatal(err)
+			t.Fatal(r.Err())
 		}
 		t.Fatal("expected row")
 	}
@@ -1305,7 +1305,7 @@
 
 	if !r.Next() {
 		if r.Err() != nil {
-			t.Fatal(err)
+			t.Fatal(r.Err())
 		}
 		t.Fatal("expected row")
 	}
@@ -1351,11 +1351,11 @@
 	db := openTestConn(t)
 	defer db.Close()
 
-	_, err := db.Exec("CREATE TEMP TABLE temp (a int)")
+	_, err := db.Exec("CREATE TEMP TABLE temp (a int primary key)")
 	if err != nil {
 		t.Fatal(err)
 	}
-	sqlInsert := "INSERT INTO temp VALUES (1)"
+	sqlInsert := "INSERT INTO temp (a) VALUES (1)"
 	sqlSelect := "SELECT * FROM temp"
 	tx, err := db.Begin()
 	if err != nil {
@@ -1501,7 +1501,7 @@
 		}
 
 		value, success := tryGetParameterValue()
-		if success != test.success && !test.success {
+		if success != test.success && !success {
 			t.Fatalf("%v: unexpected error: %v", test.conninfo, err)
 		}
 		if success != test.success {
@@ -1603,7 +1603,7 @@
 		ra    int64
 	}{
 		{
-			query: "CREATE TEMP TABLE temp (a int)",
+			query: "CREATE TEMP TABLE temp (a int, _stub_id Serial PRIMARY KEY)",
 			tag:   "CREATE TABLE",
 		},
 		{
@@ -1623,19 +1623,19 @@
 		},
 		// Multiple statements that don't return rows should return the last tag.
 		{
-			query: "CREATE TEMP TABLE t (a int); DROP TABLE t",
+			query: "CREATE TEMP TABLE t (a int, _stub_id Serial PRIMARY KEY); DROP TABLE t",
 			tag:   "DROP TABLE",
 		},
 		// Ensure a rows-returning query in any position among various tags-returing
 		// statements will prefer the rows.
 		{
-			query: "SELECT 1; CREATE TEMP TABLE t (a int); DROP TABLE t",
+			query: "SELECT 1; CREATE TEMP TABLE t (a int, _stub_id Serial PRIMARY KEY); DROP TABLE t",
 		},
 		{
-			query: "CREATE TEMP TABLE t (a int); SELECT 1; DROP TABLE t",
+			query: "CREATE TEMP TABLE t (a int, _stub_id Serial PRIMARY KEY); SELECT 1; DROP TABLE t",
 		},
 		{
-			query: "CREATE TEMP TABLE t (a int); DROP TABLE t; SELECT 1",
+			query: "CREATE TEMP TABLE t (a int, _stub_id Serial PRIMARY KEY); DROP TABLE t; SELECT 1",
 		},
 	}
 
@@ -1775,7 +1775,7 @@
 	db := openTestConn(t)
 	defer db.Close()
 
-	_, err := db.Exec("CREATE TEMP TABLE temp (a int)")
+	_, err := db.Exec("CREATE TEMP TABLE temp (a int, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
diff -ruN /original-sources/copy_test.go ./copy_test.go
--- /original-sources/copy_test.go	2023-04-26 04:34:24.000000000 +0000
+++ ./copy_test.go	2023-09-15 09:14:56.207034622 +0000
@@ -56,7 +56,7 @@
 	}
 	defer txn.Rollback()
 
-	_, err = txn.Exec("CREATE TEMP TABLE temp (a int, b varchar)")
+	_, err = txn.Exec("CREATE TEMP TABLE temp (a int, b varchar, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -125,7 +125,7 @@
 	}
 	defer txn.Rollback()
 
-	_, err = txn.Exec("CREATE TEMP TABLE temp (a int, b varchar)")
+	_, err = txn.Exec("CREATE TEMP TABLE temp (a int, b varchar, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -195,7 +195,7 @@
 	}
 	defer txn.Rollback()
 
-	_, err = txn.Exec("CREATE TEMP TABLE temp (num INTEGER, text VARCHAR, blob BYTEA, nothing VARCHAR)")
+	_, err = txn.Exec("CREATE TEMP TABLE temp (num INTEGER, text VARCHAR, blob BYTEA, nothing VARCHAR, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -254,7 +254,7 @@
 	}
 	defer txn.Rollback()
 
-	_, err = txn.Exec("CREATE TEMP TABLE temp (num INTEGER)")
+	_, err = txn.Exec("CREATE TEMP TABLE temp (num INTEGER, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -302,7 +302,7 @@
 	}
 	defer txn.Rollback()
 
-	_, err = txn.Exec("CREATE TEMP TABLE temp (num INTEGER)")
+	_, err = txn.Exec("CREATE TEMP TABLE temp (num INTEGER, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -327,7 +327,7 @@
 	}
 	defer txn.Rollback()
 
-	_, err = txn.Exec("CREATE TEMP TABLE temp (num INTEGER)")
+	_, err = txn.Exec("CREATE TEMP TABLE temp (num INTEGER, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -383,7 +383,7 @@
 		t.Fatal(err)
 	}
 
-	_, err = txn.Exec("CREATE TEMP TABLE temp (a int)")
+	_, err = txn.Exec("CREATE TEMP TABLE temp (a int, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -463,7 +463,7 @@
 	}
 	defer txn.Rollback()
 
-	_, err = txn.Exec("CREATE TEMP TABLE temp (a int, b varchar)")
+	_, err = txn.Exec("CREATE TEMP TABLE temp (a int, b varchar, _stub_id Serial PRIMARY KEY)")
 	if err != nil {
 		b.Fatal(err)
 	}
diff -ruN /original-sources/issues_test.go ./issues_test.go
--- /original-sources/issues_test.go	2023-04-26 04:34:24.000000000 +0000
+++ ./issues_test.go	2023-08-22 09:35:23.189760257 +0000
@@ -113,7 +113,7 @@
 		time.Sleep(10 * time.Millisecond)
 		cancel()
 	}()
-	row := db.QueryRowContext(ctx, "select pg_sleep(0.5)")
+	row := db.QueryRowContext(ctx, "select pg_sleep(4::float8)")
 	var pgSleepVoid string
 	err := row.Scan(&pgSleepVoid)
 	if pgErr := (*Error)(nil); !(errors.As(err, &pgErr) && pgErr.Code == cancelErrorCode) {
