(
(let $1 (DataType 'Double))
(let $2 (DataType 'Int64))
(let $3 (StructType '('"l_discount" $1) '('"l_extendedprice" $1) '('"l_orderkey" $2) '('"l_partkey" $2) '('"l_suppkey" $2)))
(let $4 '('('"_logical_id" '17369) '('"_id" '"f0967be9-2e6a1dea-ff64298d-66a3af21") '('"_wide_channels" $3)))
(let $5 (DqPhyStage '() (lambda '() (block '(
  (let $93 (KqpTable '"/dev/test/column/tpch10000/lineitem" '"72075186224037889:110" '"" '1))
  (let $94 '('"l_discount" '"l_extendedprice" '"l_orderkey" '"l_partkey" '"l_suppkey"))
  (let $95 (KqpBlockReadOlapTableRanges $93 (Void) $94 '() '() (lambda '($96) $96)))
  (return (FromFlow $95))
))) $4))
(let $6 (DataType 'Date32))
(let $7 (StructType '('"o_custkey" $2) '('"o_orderdate" $6) '('"o_orderkey" $2)))
(let $8 '('('"_logical_id" '13575) '('"_id" '"8b17ce0c-d1e97369-7ec5ac4b-fc5c970") '('"_wide_channels" $7)))
(let $9 (DqPhyStage '() (lambda '() (block '(
  (let $97 (KqpTable '"/dev/test/column/tpch10000/orders" '"72075186224037889:112" '"" '1))
  (let $98 '('"o_custkey" '"o_orderdate" '"o_orderkey"))
  (let $99 (KqpBlockReadOlapTableRanges $97 (Void) $98 '() '() (lambda '($101) $101)))
  (let $100 (lambda '($102 $103 $104 $105) (block '(
    (let $106 (BlockType (DataType 'Bool)))
    (let $107 (BlockFunc '"GreaterOrEqual" $106 $103 (AsScalar (Date '"9131"))))
    (let $108 (BlockFunc '"LessOrEqual" $106 $103 (AsScalar (Date '"9861"))))
    (return $102 $103 $104 (BlockAnd $107 $108) $105)
  ))))
  (return (FromFlow (BlockCompress (WideMap $99 $100) '3)))
))) $8))
(let $10 '('0))
(let $11 (DqPhyStage '() (lambda '() (block '(
  (let $109 (KqpTable '"/dev/test/column/tpch10000/nation" '"72075186224037889:111" '"" '1))
  (let $110 '('"n_name" '"n_nationkey" '"n_regionkey"))
  (let $111 (KqpBlockReadOlapTableRanges $109 (Void) $110 '() '() (lambda '($112) $112)))
  (return (FromFlow (Switch (NarrowMap (WideFromBlocks $111) (lambda '($113 $114 $115) (AsStruct '('"n_name" $113) '('"n_nationkey" $114) '('"n_regionkey" $115)))) '"134217728" $10 (lambda '($116) (Map $116 (lambda '($117) (AsStruct '('"n_name" (Member $117 '"n_name")) '('"n_nationkey" (Member $117 '"n_nationkey")))))) $10 (lambda '($118) (Map $118 (lambda '($119) (AsStruct '('"n_nationkey" (Member $119 '"n_nationkey")) '('"n_regionkey" (Member $119 '"n_regionkey")))))))))
))) '('('"_logical_id" '16371) '('"_id" '"6cceae28-c6235014-18356e8d-9637b29a"))))
(let $12 '('"r_regionkey"))
(let $13 (DataType 'Int32))
(let $14 '('"_wide_channels" (StructType '('"r_regionkey" $13))))
(let $15 '('('"_logical_id" '13602) '('"_id" '"ed66af1e-30ddde1d-cf5390d-d10c6a62") $14))
(let $16 (DqPhyStage '() (lambda '() (block '(
  (let $120 (KqpTable '"/dev/test/column/tpch10000/region" '"72075186224037889:115" '"" '1))
  (let $121 (KqpBlockReadOlapTableRanges $120 (Void) '('"r_name" '"r_regionkey") '() '() (lambda '($122) (block '(
    (let $123 '('eq '"r_name" (String '"AFRICA")))
    (return (TKqpOlapExtractMembers (KqpOlapFilter $122 $123) $12))
  )))))
  (return (FromFlow $121))
))) $15))
(let $17 (DqCnUnionAll (TDqOutput $16 '0)))
(let $18 '('('"_logical_id" '15688) '('"_id" '"880b109d-9a38ff01-5bf4e612-99bf1df3") $14))
(let $19 (DqPhyStage '($17) (lambda '($124) $124) $18))
(let $20 (DqCnMap (TDqOutput $11 '1)))
(let $21 (DqCnBroadcast (TDqOutput $19 '0)))
(let $22 '('Many 'Hashed 'Compact))
(let $23 '('"n.n_nationkey" $13))
(let $24 '('"n.n_regionkey" $13))
(let $25 '('"r.r_regionkey" $13))
(let $26 (StructType $23 $24 $25))
(let $27 '('"_wide_channels" $26))
(let $28 '('('"_logical_id" '15709) '('"_id" '"a7064ce3-aec6af4e-be08436a-6426f660") $27))
(let $29 (DqPhyStage '($20 $21) (lambda '($125 $126) (block '(
  (let $127 (NarrowSqueezeToDict (WideFromBlocks (ToFlow $126)) (lambda '($129) $129) (lambda '($130) (AsStruct '('"r_regionkey" $130))) $22))
  (let $128 (lambda '($133) (Member $133 '"n.n_nationkey") (Member $133 '"n.n_regionkey") (Member $133 '"r.r_regionkey")))
  (return (FromFlow (ExpandMap (FlatMap $127 (lambda '($131) (block '(
    (let $132 '('"n_nationkey" '"n.n_nationkey" '"n_regionkey" '"n.n_regionkey"))
    (return (MapJoinCore (ToFlow $125) $131 '"Inner" '('"n_regionkey") $12 $132 '('"r_regionkey" '"r.r_regionkey") '('"n.n_regionkey") '('"r.r_regionkey")))
  )))) $128)))
))) $28))
(let $30 (DqCnUnionAll (TDqOutput $29 '0)))
(let $31 '('('"_logical_id" '15743) '('"_id" '"524011b3-8ce3dec6-656a272d-d1c94c1d") $27))
(let $32 (DqPhyStage '($30) (lambda '($134) (FromFlow (ToFlow $134))) $31))
(let $33 (DqCnBroadcast (TDqOutput $32 '0)))
(let $34 '('1))
(let $35 '('"c.c_custkey" $2))
(let $36 '('"c.c_nationkey" $13))
(let $37 (StructType $35 $36 $23 $24 $25))
(let $38 '('('"_logical_id" '15772) '('"_id" '"379be839-ad51c7d6-3ff70485-d76ea898") '('"_wide_channels" $37)))
(let $39 (DqPhyStage '($33) (lambda '($135) (block '(
  (let $136 (NarrowSqueezeToDict (ToFlow $135) (lambda '($137 $138 $139) $137) (lambda '($140 $141 $142) (AsStruct '('"n.n_nationkey" $140) '('"n.n_regionkey" $141) '('"r.r_regionkey" $142))) $22))
  (return (FromFlow (FlatMap $136 (lambda '($143) (block '(
    (let $144 (KqpTable '"/dev/test/column/tpch10000/customer" '"72075186224037889:109" '"" '1))
    (let $145 (KqpBlockReadOlapTableRanges $144 (Void) '('"c_custkey" '"c_nationkey") '() '() (lambda '($149) $149)))
    (let $146 '('"n.n_nationkey"))
    (let $147 '('0 '0 '1 '1))
    (let $148 '('"n.n_nationkey" '2 '"n.n_regionkey" '3 '"r.r_regionkey" '4))
    (return (MapJoinCore (WideFromBlocks $145) $143 '"Inner" $34 $146 $147 $148 '('"c.c_nationkey") $146))
  ))))))
))) $38))
(let $40 (DqCnHashShuffle (TDqOutput $9 '0) $10))
(let $41 (DqCnHashShuffle (TDqOutput $39 '0) $10))
(let $42 '('"o.o_custkey" $2))
(let $43 '('"o.o_orderdate" $6))
(let $44 '('"o.o_orderkey" $2))
(let $45 (StructType $35 $36 $23 $24 $42 $43 $44 $25))
(let $46 '('('"_logical_id" '15888) '('"_id" '"902c827b-4ef024cc-62aab201-b514f234") '('"_wide_channels" $45)))
(let $47 (DqPhyStage '($40 $41) (lambda '($150 $151) (block '(
  (let $152 '('0 '0 '1 '1 '2 '2))
  (let $153 '('0 '3 '1 '4 '2 '5 '3 '6 '4 '7))
  (let $154 (GraceJoinCore (WideFromBlocks (ToFlow $150)) (ToFlow $151) '"Inner" $10 $10 $152 $153 '('"o.o_custkey") '('"c.c_custkey") '()))
  (let $155 (lambda '($156 $157 $158 $159 $160 $161 $162 $163) $159 $160 $161 $162 $156 $157 $158 $163))
  (return (FromFlow (WideMap $154 $155)))
))) $46))
(let $48 '('2))
(let $49 (DqCnHashShuffle (TDqOutput $5 '0) $48))
(let $50 '('6))
(let $51 (DqCnHashShuffle (TDqOutput $47 '0) $50))
(let $52 '('"l.l_discount" $1))
(let $53 '('"l.l_extendedprice" $1))
(let $54 '('"l.l_orderkey" $2))
(let $55 '('"l.l_partkey" $2))
(let $56 '('"l.l_suppkey" $2))
(let $57 (StructType $35 $36 $52 $53 $54 $55 $56 $23 $24 $42 $43 $44 $25))
(let $58 '('('"_logical_id" '16072) '('"_id" '"88def2c-40f5ff96-f11d9d25-66321b6f") '('"_wide_channels" $57)))
(let $59 (DqPhyStage '($49 $51) (lambda '($164 $165) (block '(
  (let $166 '('0 '0 '1 '1 '2 '2 '3 '3 '4 '4))
  (let $167 '('0 '5 '1 '6 '2 '7 '3 '8 '4 '9 '5 '10 '6 '11 '7 '12))
  (let $168 (GraceJoinCore (WideFromBlocks (ToFlow $164)) (ToFlow $165) '"Inner" $48 $50 $166 $167 '('"l.l_orderkey") '('"o.o_orderkey") '()))
  (let $169 (lambda '($170 $171 $172 $173 $174 $175 $176 $177 $178 $179 $180 $181 $182) $175 $176 $170 $171 $172 $173 $174 $177 $178 $179 $180 $181 $182))
  (return (FromFlow (WideMap $168 $169)))
))) $58))
(let $60 '('('"_logical_id" '13633) '('"_id" '"bdc5c685-92f5bf1e-8fbffa03-a53dbe6f") '('"_wide_channels" (StructType '('"p_partkey" $2)))))
(let $61 (DqPhyStage '() (lambda '() (block '(
  (let $183 (KqpTable '"/dev/test/column/tpch10000/part" '"72075186224037889:113" '"" '1))
  (let $184 (KqpBlockReadOlapTableRanges $183 (Void) '('"p_partkey" '"p_type") '() '() (lambda '($185) (block '(
    (let $186 '('eq '"p_type" (String '"ECONOMY PLATED COPPER")))
    (return (TKqpOlapExtractMembers (KqpOlapFilter $185 $186) '('"p_partkey")))
  )))))
  (return (FromFlow $184))
))) $60))
(let $62 '('5))
(let $63 (DqCnHashShuffle (TDqOutput $59 '0) $62))
(let $64 (DqCnHashShuffle (TDqOutput $61 '0) $10))
(let $65 (StructType $35 $36 $52 $53 $54 $55 $56 $23 $24 $42 $43 $44 '('"p.p_partkey" $2) $25))
(let $66 '('('"_logical_id" '16277) '('"_id" '"a5d4f8ae-f090f15e-232d3a79-e957f89d") '('"_wide_channels" $65)))
(let $67 (DqPhyStage '($63 $64) (lambda '($187 $188) (block '(
  (let $189 '('0 '0 '1 '1 '2 '2 '3 '3 '4 '4 '5 '5 '6 '6 '7 '7 '8 '8 '9 '9 '10 '10 '11 '11 '12 '12))
  (let $190 (GraceJoinCore (ToFlow $187) (WideFromBlocks (ToFlow $188)) '"Inner" $62 $10 $189 '('0 '13) '('"l.l_partkey") '('"p.p_partkey") '()))
  (let $191 (lambda '($192 $193 $194 $195 $196 $197 $198 $199 $200 $201 $202 $203 $204 $205) $192 $193 $194 $195 $196 $197 $198 $199 $200 $201 $202 $203 $205 $204))
  (return (FromFlow (WideMap $190 $191)))
))) $66))
(let $68 (DqCnUnionAll (TDqOutput $11 '0)))
(let $69 (DataType 'Utf8))
(let $70 '('('"_logical_id" '16428) '('"_id" '"d8a3b18f-29068d7-edec6214-ff96250c") '('"_wide_channels" (StructType '('"n_name" $69) '('"n_nationkey" $13)))))
(let $71 (DqPhyStage '($68) (lambda '($206) (block '(
  (let $207 (lambda '($208) (Member $208 '"n_name") (Member $208 '"n_nationkey")))
  (return (FromFlow (ExpandMap (ToFlow $206) $207)))
))) $70))
(let $72 (DqCnBroadcast (TDqOutput $71 '0)))
(let $73 (StructType '('"n_1.n_name" $69) '('"n_1.n_nationkey" $13) '('"s.s_nationkey" $13) '('"s.s_suppkey" $2)))
(let $74 '('('"_logical_id" '16457) '('"_id" '"40294773-88ab8837-9d9a929c-2d2d18b1") '('"_wide_channels" $73)))
(let $75 (DqPhyStage '($72) (lambda '($209) (block '(
  (let $210 (NarrowSqueezeToDict (ToFlow $209) (lambda '($211 $212) $212) (lambda '($213 $214) (AsStruct '('"n_name" $213) '('"n_nationkey" $214))) $22))
  (return (FromFlow (FlatMap $210 (lambda '($215) (block '(
    (let $216 (KqpTable '"/dev/test/column/tpch10000/supplier" '"72075186224037889:116" '"" '1))
    (let $217 (KqpBlockReadOlapTableRanges $216 (Void) '('"s_nationkey" '"s_suppkey") '() '() (lambda '($220) $220)))
    (let $218 '('0 '2 '1 '3))
    (let $219 '('"n_name" '0 '"n_nationkey" '1))
    (return (MapJoinCore (WideFromBlocks $217) $215 '"Inner" $10 '('"n_nationkey") $218 $219 '('"s.s_nationkey") '('"n_1.n_nationkey")))
  ))))))
))) $74))
(let $76 (DqCnHashShuffle (TDqOutput $67 '0) $50))
(let $77 (DqCnHashShuffle (TDqOutput $75 '0) '('3)))
(let $78 (DataType 'Uint16))
(let $79 (OptionalType $78))
(let $80 (lambda '($281 $282 $283) $282 $283 $281))
(let $81 '('"o_year" $79))
(let $82 (StructType '('_yql_agg_0 $1) '('_yql_agg_1 $1) $81))
(let $83 '('('"_logical_id" '17040) '('"_id" '"964a72a9-2eaeea19-7e2ca345-1490ccca") '('"_wide_channels" $82)))
(let $84 (DqPhyStage '($76 $77) (lambda '($221 $222) (block '(
  (let $223 (lambda '($232 $233 $234 $235 $236 $237 $238 $239 $240 $241 $242 $243 $244 $245) $234 $235 $238 $242))
  (let $224 (lambda '($246 $247 $248 $249) $246 $249))
  (let $225 '('0 '0 '1 '1 '3 '2))
  (let $226 (GraceJoinCore (WideMap (ToFlow $221) $223) (WideMap (ToFlow $222) $224) '"Inner" $48 $34 $225 '('0 '3) '('"l.l_suppkey") '('"s.s_suppkey") '()))
  (let $227 (String '"MOZAMBIQUE"))
  (let $228 (Int32 '1))
  (let $229 (Double '"0."))
  (let $230 (lambda '($265 $266 $267 $268 $269) (block '(
    (let $270 (* $267 (- $228 $266)))
    (let $271 (If (== $269 $227) $270 $229))
    (return $271 $270)
  ))))
  (let $231 (lambda '($272 $273 $274 $275 $276 $277 $278) (block '(
    (let $279 (* $274 (- $228 $273)))
    (let $280 (If (== $276 $227) $279 $229))
    (return (AggrAdd $280 $277) (AggrAdd $279 $278))
  ))))
  (return (FromFlow (WideCombiner $226 '-1073741824 (lambda '($250 $251 $252 $253) (block '(
    (let $254 (DataType 'Timestamp))
    (return (IfPresent (SafeCast $252 (OptionalType $254)) (lambda '($255) (block '(
      (let $256 (ResourceType '"DateTime2.TM"))
      (let $257 '($256 '"" '1))
      (let $258 (CallableType '() '($78) $257))
      (let $259 '('"strict"))
      (let $260 (Udf '"DateTime2.GetYear" (Void) (VoidType) '"" $258 (VoidType) '"" '($259)))
      (let $261 (TupleType (TupleType $254) (StructType) (TupleType)))
      (let $262 '($254 '"" '1))
      (let $263 (CallableType '() '($256) $262))
      (let $264 (Udf 'DateTime2.Split (Void) $261 '"" $263 (VoidType) '"" '('('"blocks") $259)))
      (return (Just (Apply $260 (Apply $264 $255))))
    ))) (Nothing $79)))
  ))) $230 $231 $80)))
))) $83))
(let $85 (DqCnHashShuffle (TDqOutput $84 '0) $48))
(let $86 (StructType '('"mkt_share" $1) $81))
(let $87 '('('"_logical_id" '17186) '('"_id" '"8a251b5a-46bf816f-9cbd4d6f-72c3b070") '('"_wide_channels" $86)))
(let $88 (DqPhyStage '($85) (lambda '($284) (block '(
  (let $285 (lambda '($292 $293 $294 $295) $293 $294))
  (let $286 (lambda '($296 $297 $298 $299 $300 $301) (AggrAdd $297 $300) (AggrAdd $298 $301)))
  (let $287 (WideCombiner (ToFlow $284) '"" (lambda '($289 $290 $291) $291) $285 $286 $80))
  (let $288 (lambda '($302 $303 $304) (/ $302 $303) $304))
  (return (FromFlow (WideMap (WideSort $287 '('('2 (Bool 'true)))) $288)))
))) $87))
(let $89 (DqCnMerge (TDqOutput $88 '0) '('('1 '"Asc"))))
(let $90 (DqPhyStage '($89) (lambda '($305) (FromFlow (NarrowMap (ToFlow $305) (lambda '($306 $307) (AsStruct '('"mkt_share" $306) '('"o_year" $307)))))) '('('"_logical_id" '17198) '('"_id" '"e3efc380-ffd2d4b2-d4b4dfcd-4132c84f"))))
(let $91 '($5 $9 $11 $16 $19 $29 $32 $39 $47 $59 $61 $67 $71 $75 $84 $88 $90))
(let $92 (DqCnResult (TDqOutput $90 '0) '('"o_year" '"mkt_share")))
(return (KqpPhysicalQuery '((KqpPhysicalTx $91 '($92) '() '('('"type" '"generic")))) '((KqpTxResultBinding (ListType $86) '0 '0)) '('('"type" '"query"))))
)
