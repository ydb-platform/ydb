(
(let config (DataSource 'config))
(let res_sink (DataSink 'result))

(let row1 (AsStruct '('"key" (Int32 '1)) '('"subkey" (Int32 '"1001")) '('"value" (String '"AAA"))))
(let row2 (AsStruct '('"key" (Int32 '2)) '('"subkey" (Int32 '"1002")) '('"value" (String '"AAB"))))
(let row3 (AsStruct '('"key" (Int32 '3)) '('"subkey" (Int32 '"1003")) '('"value" (String '"AAC"))))
(let row4 (AsStruct '('"key" (Int32 '4)) '('"subkey" (Int32 '"1004")) '('"value" (String '"AAD"))))
(let row5 (AsStruct '('"key" (Int32 '5)) '('"subkey" (Int32 '"1005")) '('"value" (String '"AAE"))))
(let table (AsList row1 row2 row3 row4 row5))

(let expandLambda (lambda '(item) (Member item '"key") (Member item '"subkey") (Member item '"value")))
(let wideBlockStream (WideToBlocks (FromFlow (ExpandMap (ToFlow table) expandLambda))))

(let narrowLambda (lambda '(key subkey value blockLength) (AsStruct '('"key" key) '('"subkey" subkey) '('"value" value) '('"_yql_block_length" blockLength))))
(let blockList (ForwardList (NarrowMap (ToFlow wideBlockStream) narrowLambda)))

(let list (ListFromBlocks blockList))

(let world (Write! world res_sink (Key) list '('('type))))
(let world (Commit! world res_sink))
(return world)
)
