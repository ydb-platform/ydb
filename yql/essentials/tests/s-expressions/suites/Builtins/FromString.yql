(
#comment
(let mr_source (DataSource 'yt 'plato))
(let x (Read! world mr_source (Key '('table (String 'Input))) '('key 'subkey 'value) '()))
(let world (Left! x))
(let table1 (Right! x))
(let table1map (FlatMap table1 (lambda '(item) (block '(
   (let value (Member item 'value))
   (let newValue (AsList (Coalesce (FromString (String 'zzz) 'Int32) (Int32 '999))))
   (let newValue (Append newValue (Coalesce (FromString (String '3456) 'Int32) (Int32 '999))))
   (let newValue (Append newValue (Coalesce (FromString (String 'x"2345") 'Int32) (Int32 '999))))
   (let newValue (Append newValue (Coalesce (FromString (String 'x"31") 'Int32) (Int32 '999))))
   (let newValue (Append newValue (If (Coalesce (FromString (String 'true) 'Bool) (Bool 'false)) 
      (Int32 '100) (Int32 '0))))
      (let ret (Map newValue (lambda '(item) (block '(
          (let s (Struct))
          (let k (ToString (Coalesce (FromString (String '"1u,34") 'Yson) (Yson '"999"))))
          (let k (Concat k (ToString (Coalesce (FromString (String '"NaN") 'Double) (Double '"999")))))
          (let s (AddMember s 'key k))
          (let sk (ToString (Coalesce (FromString (String '"[1u;34]") 'Yson) (Yson '"999"))))
          (let sk (Concat sk (ToString (Coalesce (FromString (String '"-inf") 'Float) (Float '"999")))))
          (let s (AddMember s 'subkey sk))
          (let s (AddMember s 'value (ToString item)))
          (return s))))))
   (return ret)
)))))
(let mr_sink (DataSink 'yt (quote plato)))
(let world (Write! world mr_sink (Key '('table (String 'Output))) table1map '('('mode 'append))))
(let world (Commit! world mr_sink))
(return world)
)
