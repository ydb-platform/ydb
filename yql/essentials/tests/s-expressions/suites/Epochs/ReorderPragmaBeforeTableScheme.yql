(
(let mr_source (DataSource 'yt 'plato))
(let world (Configure! world (DataSource 'yt '$all) 'Attr 'externaltx '"0-0-0-0"))
(let x (Read! world mr_source
    (Key '('tablescheme (String '"Input")))
    (Void) '(
        '('do_not_fail_on_invalid_schema)
        '('infer_scheme)
    )
))
(let scheme (Right! x))
(let res_sink (DataSink 'result))
(let world (Write! world res_sink (Key) scheme '()))
(return (Commit! world res_sink))
)