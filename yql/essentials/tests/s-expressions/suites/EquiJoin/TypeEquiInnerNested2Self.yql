(
(let mr_source (DataSource 'yt 'plato))
(let x (Read! world mr_source (Key '('table (String 'InputSelf))) '('key 'subkey 'value) '()))
(let world (Left! x))
(let table (Right! x))
(let join (EquiJoin '(table 'a) '(table 'b) '(table 'c) '(table 'd) '('Inner
    '('Inner
        '('Inner '"a" '"b" '('"a" '"key") '('"b" '"value" ) '())
        '"c" '('"b" '"key") '('"c" '"value" ) '())
    '"d" '('"a" '"value") '('"d" '"subkey" ) '()) '()))
(let res_sink (DataSink 'result))
(let world (Write! world res_sink (Key) (FormatType (TypeOf join)) '('('type))))
(let world (Commit! world res_sink))
(return world)
)
