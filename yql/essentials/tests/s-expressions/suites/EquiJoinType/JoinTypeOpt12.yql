(
(let mr_source (DataSource 'yt 'plato))
(let x (Read! world mr_source (Key '('table (String 'Input1Opt))) (Void) '()))
(let world (Left! x))
(let list1 (Right! x))

(let x (Read! world mr_source (Key '('table (String 'Input2Opt))) (Void) '()))
(let world (Left! x))
(let list2 (Right! x))

(let joinInner (EquiJoin '(list1 'a) '(list2 'b) '('Inner 'a 'b '('a 'key1) '('b 'key2) '()) '()))
(let joinLeft (EquiJoin '(list1 'a) '(list2 'b) '('Left 'a 'b '('a 'key1) '('b 'key2) '()) '()))
(let joinRight (EquiJoin '(list1 'a) '(list2 'b) '('Right 'a 'b '('a 'key1) '('b 'key2) '()) '()))
(let joinFull (EquiJoin '(list1 'a) '(list2 'b) '('Full 'a 'b '('a 'key1) '('b 'key2) '()) '()))
(let joinLeftOnly (EquiJoin '(list1 'a) '(list2 'b) '('LeftOnly 'a 'b '('a 'key1) '('b 'key2) '()) '()))
(let joinRightOnly (EquiJoin '(list1 'a) '(list2 'b) '('RightOnly 'a 'b '('a 'key1) '('b 'key2) '()) '()))
(let joinExclusion (EquiJoin '(list1 'a) '(list2 'b) '('Exclusion 'a 'b '('a 'key1) '('b 'key2) '()) '()))
(let joinLeftSemi (EquiJoin '(list1 'a) '(list2 'b) '('LeftSemi 'a 'b '('a 'key1) '('b 'key2) '()) '()))
(let joinRightSemi (EquiJoin '(list1 'a) '(list2 'b) '('RightSemi 'a 'b '('a 'key1) '('b 'key2) '()) '()))
(let joinCross (EquiJoin '(list1 'a) '(list2 'b) '('Cross 'a 'b '() '() '()) '()))

(let res_sink (DataSink 'result))
(let world (Write! world res_sink (Key) (Concat (String '"Inner: ") (FormatType (TypeOf joinInner))) '()))
(let world (Write! world res_sink (Key) (Concat (String '"Left: ") (FormatType (TypeOf joinLeft))) '()))
(let world (Write! world res_sink (Key) (Concat (String '"Right: ") (FormatType (TypeOf joinRight))) '()))
(let world (Write! world res_sink (Key) (Concat (String '"Full: ") (FormatType (TypeOf joinFull))) '()))
(let world (Write! world res_sink (Key) (Concat (String '"LeftOnly: ") (FormatType (TypeOf joinLeftOnly))) '()))
(let world (Write! world res_sink (Key) (Concat (String '"RightOnly: ") (FormatType (TypeOf joinRightOnly))) '()))
(let world (Write! world res_sink (Key) (Concat (String '"Exclusion: ") (FormatType (TypeOf joinExclusion))) '()))
(let world (Write! world res_sink (Key) (Concat (String '"LeftSemi: ") (FormatType (TypeOf joinLeftSemi))) '()))
(let world (Write! world res_sink (Key) (Concat (String '"RightSemi: ") (FormatType (TypeOf joinRightSemi))) '()))
(let world (Write! world res_sink (Key) (Concat (String '"Cross: ") (FormatType (TypeOf joinCross))) '()))

(let world (Commit! world res_sink))
(return world)
)
