# program
(
(let config (DataSource 'config))
(let world (Configure! world config 'PureDataSource 'yt))

(import agg_module '"/lib/yql/aggregate.yql")
(let list (AsList
(AsStruct '('key (Uint32 '1)) '('value (Bool '0)))
(AsStruct '('key (Uint32 '2)) '('value (Bool '1)))
(AsStruct '('key (Uint32 '1)) '('value (Bool '0)))
(AsStruct '('key (Uint32 '3)) '('value (Bool '1)))
(AsStruct '('key (Uint32 '2)) '('value (Bool '1)))
(AsStruct '('key (Uint32 '2)) '('value (Bool '0)))
))
(let count_traits (Apply (bind agg_module 'count_if_traits_factory) (TypeOf list) (lambda '(row) (Member row 'value))))
(let res_sink (DataSink 'result))
(let resKey (Aggregate list '('key) '('('count_value count_traits))))
(let world (Write! world res_sink (Key) resKey '('('type))))
(let world (Commit! world res_sink))
(return world)
)
