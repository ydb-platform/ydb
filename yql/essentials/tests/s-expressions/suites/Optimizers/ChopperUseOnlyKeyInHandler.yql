(
#comment
(let mr_source (DataSource 'yt 'plato))
(let x (Read! world mr_source (Key '('table (String 'Input))) '('key 'subkey 'value) '()))
(let world (Left! x))
(let table1 (Right! x))
(let keySelector (lambda '(x) (Member x 'key)))
(let keySwitch (lambda '(key item) (IsKeySwitch key item (lambda '(k) k) keySelector)))
(let listHandler (lambda '(key stream) (ToStream (Just (AsStruct '('KEY key))))))
(let reducedTable (Chopper (ToStream table1) keySelector keySwitch listHandler))
(let mr_sink (DataSink 'yt (quote plato)))
(let world (Write! world mr_sink (Key '('table (String 'Output))) reducedTable '('('mode 'append))))
(let world (Commit! world mr_sink))
(return world)
)
