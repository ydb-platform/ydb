(
#comment
(let config (DataSource 'config))

(let res_sink (DataSink 'result))
(let predicate (== (Int32 '1) (Int32 '2)))
(let outLambda (lambda '(sep) (block '(
   (let data (AsList (String 'a) (String 'b)))
   (let data1 (Map data (lambda '(x) (Concat (Concat x sep) (ToString (Int32 '1))))))
   (return data1)
))))
(let sep (If predicate (Just (String '_)) (Just (String '+))))
(let data (IfPresent sep outLambda (AsList (String 'none))))
(let world (Write! world res_sink (Key) data '('('type))))
(let world (Commit! world res_sink))
(return world)
)
