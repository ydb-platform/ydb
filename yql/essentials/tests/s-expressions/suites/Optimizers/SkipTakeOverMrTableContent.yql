(
    #comment
    (let mr_source (DataSource 'yt 'plato))
    (let r (Read! world mr_source (Key '('table (String 'Input))) (Void) '('('inline))))
    (let table1 (Right! r))
    (let table1 (Skip table1 (Uint64 '5)))
    (let table1 (Take table1 (Uint64 '3)))
    (let tresh (String '300))
    (let table1low (FlatMap table1 (lambda '(item) (block '(
           (let intValueOpt (Member item 'key))
           (return (ListIf (< intValueOpt tresh) item))
    )))))
    (let mr_sink (DataSink 'yt 'plato))
    (let world (Write! world mr_sink (Key '('table (String 'Output))) table1low '('('mode 'append))))
    (let world (Commit! world mr_sink))
    (return world)
)
