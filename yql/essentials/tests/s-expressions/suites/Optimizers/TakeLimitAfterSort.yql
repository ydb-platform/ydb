(
(let mr_source (DataSource 'yt 'plato))
(let x (Read! world mr_source
    (Key '('table (String 'Input)))
    (Void) '()))
(let world (Left! x))
(let table1 (Right! x))

(let keyExtractor (lambda '(item) (Member item 'key)))
(let table2 (Sort table1 (Bool 'true) keyExtractor))
(let table2 (Take table2 (Uint64 '2)))
(let res_sink (DataSink 'result))
(let world (Write! world res_sink
    (Key)
    table2 '()))
    
(let world (Commit! world res_sink))
(return world)
)
