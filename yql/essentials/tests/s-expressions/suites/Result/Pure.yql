(
#comment
(let config (DataSource 'config))
(let world (Configure! world config 'PureDataSource 'yt))

(let vt1 (VariantType (TupleType (DataType 'Int32) (DataType 'String))))
(let vt2 (VariantType (StructType '('x (DataType 'Int32)) '('y (DataType 'String)))))
(let res_sink (DataSink 'result))
(let data '(
(Uint32 '1)
(Int32 '-2)
(Uint64 '3)
(Int64 '-4)
(Double '-5)
(Float '-6)
(Bool 'true)
(Yson '@@[1u;"3"]@@)
(Json '@@{"id":1}@@)
(Date '11)
(Datetime '12)
(Timestamp '13)
(Interval '-13)
(Uint8 '14)
(Int8 '-15)
(Uint16 '16)
(Int16 '-17)
(TzDate '"18,Europe/Moscow")
(TzDate '"19,America/Los_Angeles")
(TzDatetime '"20,Etc/GMT-1")
(TzDatetime '"4291747199,Europe/Moscow")
(TzDatetime '"4291747198,America/Los_Angeles")
(TzTimestamp '"21,Etc/GMT+1")
(Cast (Datetime '"1262347200") 'String)
(TzDatetime '"1262347200,Europe/Moscow")
(Cast (Datetime '"1277985600") 'String)
(TzDatetime '"1277985600,Europe/Moscow")
(Uuid '"0123456789abcdef")
(AsStruct '('k (String 'key)) '('v (Uint64 '456)))
(AsList (Uint32 '2))
(Just (Uint32 '3))
(Nothing (OptionalType (DataType 'String)))
(ToDict (AsList '((String 'dkey1) (String 'dvalue1)) '((String 'dkey2) (String 'dvalue2)))
   (lambda '(x) (Nth x '0)) (lambda '(x) (Nth x '1)) '('Sorted 'One)
)
(Void)
(Variant (Int32 '7) '0 vt1)
(Variant (String 'qwe) 'y vt2)
))
(let world (Write! world res_sink (Key) data '()))
(let world (Commit! world res_sink))
(return world)
)
