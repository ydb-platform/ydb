(
#comment
(let mr_source (DataSource 'yt 'plato))
(let x (Read! world mr_source (Key '('table (String 'Input))) '('key 'subkey 'value) '()))
(let world (Left! x))
(let table1 (Right! x))
(let tresh (String '100))
(let table1low (Filter table1 (lambda '(item) (< (Member item 'key) tresh))))
(let res_sink (DataSink 'result))
(let data (Skip table1 (- (Max (Uint64 '1) (Length table1low)) (Uint64 '1))))
(let world (Write! world res_sink (Key) data '()))
(let world (Commit! world res_sink))
(return world)
)
