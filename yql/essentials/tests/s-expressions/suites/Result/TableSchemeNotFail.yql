(
(let mr_source (DataSource 'yt 'plato))

(let x (Read! world mr_source
    (Key '('tablescheme (String 'Input)))
    (Void) '(
             '('do_not_fail_on_invalid_schema)
        )
))

(let world (Left! x))
(let scheme (Right! x))

(let res_sink (DataSink 'result))
(let world (Write! world res_sink (Key) scheme '('('type))))
(let world (Commit! world res_sink))
(return world)
)
