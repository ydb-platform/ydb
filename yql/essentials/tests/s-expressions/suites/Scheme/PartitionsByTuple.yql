(
#comment
(let mr_source (DataSource 'yt 'plato))
(let x (Read! world mr_source (Key '('table (String 'Input))) '('key 'subkey 'value) '()))
(let world (Left! x))
(let table (Right! x))
(let keySelector (lambda '(x) '((Member x 'value) (Member x 'subkey))))
(let result (PartitionsByKeys table keySelector (Void) (Void) (lambda '(x) x)))
(let mr_sink (DataSink 'yt (quote plato)))
(let world (Write! world mr_sink (Key '('table (String 'Output))) result '()))
(let world (Commit! world mr_sink))
(return world)
)
