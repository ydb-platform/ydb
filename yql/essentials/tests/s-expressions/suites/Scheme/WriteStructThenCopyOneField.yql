(
(let output1 (block '(
  (let row (Struct))
  (let row (AddMember row 'x (String 'abc)))
  (let row (AddMember row 'y (Int32 '2)))
  (let row (AddMember row 'z (Int64 '3)))
  (let insert1_output (AsList row))
  (return insert1_output)
)
))
(let sink (DataSink 'yt 'plato))
(let world (Write! world sink (Key '('table (String 'Output))) output1 '('('mode 'append))))
(let world (Commit! world sink))
(let source (DataSource 'yt 'plato))
(let x (Read! world source (Key '('table (String 'Output))) '('y) '()))
(let world (Left! x))
(let table1 (Right! x))
(let world (Write! world sink (Key '('table (String 'Output2))) table1 '('('mode 'append))))
(let world (Commit! world sink))
(let x (Read! world source (Key '('table (String 'Output2))) (Void) '()))
(let world (Left! x))
(let table2 (Right! x))
(let res_sink (DataSink 'result))
(let world (Write! world res_sink (Key) table2 '('('type))))
(let world (Commit! world res_sink))
(return world)
)
