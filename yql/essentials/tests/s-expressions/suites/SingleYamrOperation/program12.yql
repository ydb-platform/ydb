(
#comment
(let mr_source (DataSource 'yt 'plato))
(let x (Read! world mr_source (Key '('table (String 'Input))) '('key 'subkey 'value) '()))
(let world (Left! x))
(let table1 (Right! x))
(let table1low (Filter table1 (lambda '(item) (block '(
  (let tresh (String '100))
  (let predicate (< (Member item 'key) tresh))
  (return predicate)
)))))
(let mr_sink (DataSink 'yt (quote plato)))
(let world (Write! world mr_sink (Key '('table (String 'Output))) table1low '('('mode 'append))))
(let world (Commit! world mr_sink))
(return world)
)
