(
(let mr_source (DataSource 'yt 'plato))
(let mr_sink (DataSink 'yt 'plato))
(let res_sink (DataSink 'result))

(let x (Read! world mr_source (Key
    '('tablescheme (String 'InputView))
) (Void) '()))

(let world (Left! x))
(let data (Right! x))

(let world (Write! world res_sink (Key) data '()))
(let world (Commit! world res_sink))
(let world (Commit! world mr_sink))
(return world)
)
