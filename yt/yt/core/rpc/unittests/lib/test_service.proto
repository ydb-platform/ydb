package NTestRpc;

import "yt_proto/yt/core/misc/proto/guid.proto";

option go_package = "a.yandex-team.ru/yt/go/proto/core/rpc/unittests;testservice";


////////////////////////////////////////////////////////////////////////////////

message TReqSomeCall
{
    required int32 a = 1;
}

message TRspSomeCall
{
    required int32 b = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqPassCall
{
}

message TRspPassCall
{
    required string user = 1;
    optional string user_tag = 2;
    required NYT.NProto.TGuid mutation_id = 3;
    required bool retry = 4;
}

////////////////////////////////////////////////////////////////////////////////

message TReqAllocationCall
{
    required int64 size = 1;
}

message TRspAllocationCall
{
    optional bytes allocated_string = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqRegularAttachments
{
}

message TRspRegularAttachments
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqCompression
{
    required int32 request_codec = 1;
    required string message = 2;
}

message TRspCompression
{
    required string message = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqNullAndEmptyAttachments
{
}

message TRspNullAndEmptyAttachments
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqDoNothing
{
}

message TRspDoNothing
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqCustomMessageError
{
}

message TRspCustomMessageError
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqNotRegistered
{
}

message TRspNotRegistered
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqSlowCall
{
    optional int32 request_codec = 1;
    optional string message = 2;
}

message TRspSlowCall
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqSlowCanceledCall
{
}

message TRspSlowCanceledCall
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqRequestBytesThrottledCall
{
}

message TRspRequestBytesThrottledCall
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqNoReply
{
}

message TRspNoReply
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqFlakyCall
{
}

message TRspFlakyCall
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqRequireCoolFeature
{
}

message TRspRequireCoolFeature
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqStreamingEcho
{
    optional bool delayed = 1 [default = false];
}

message TRspStreamingEcho
{
    required int64 total_size = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqServerStreamsAborted
{
}

message TRspServerStreamsAborted
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqServerNotReading
{
    required bool sleep = 1;
}

message TRspServerNotReading
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqServerNotWriting
{
    required bool sleep = 1;
}

message TRspServerNotWriting
{
}

////////////////////////////////////////////////////////////////////////////////

message TReqGetTraceBaggage
{
}

message TRspGetTraceBaggage
{
    required string baggage = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqCustomMetadata
{
}

message TRspCustomMetadata
{
    map<string, bytes> parsed_custom_metadata = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqGetChannelFailureError
{
    optional string redirection_address = 1;
}

message TRspGetChannelFailureError
{
}
