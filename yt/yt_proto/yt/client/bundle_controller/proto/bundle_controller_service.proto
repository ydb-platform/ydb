package NYT.NBundleController.NProto;

////////////////////////////////////////////////////////////////////////////////

message TCpuLimits
{
    optional int32 lookup_thread_pool_size = 1;
    optional int32 query_thread_pool_size = 2;
    optional int32 write_thread_pool_size = 3;
}

message TMemoryLimits
{
    optional int64 compressed_block_cache = 1;
    optional int64 key_filter_block_cache = 2;
    optional int64 lookup_row_cache = 3;

    optional int64 tablet_dynamic = 4;
    optional int64 tablet_static = 5;

    optional int64 uncompressed_block_cache = 6;
    optional int64 versioned_chunk_meta = 7;
    optional int64 reserved = 8;
}

message TInstanceResources
{
    optional int64 memory = 1;
    optional int64 net = 2;
    optional string type = 3;
    optional int32 vcpu = 4;
}

message TDefaultInstanceConfig
{
    optional TCpuLimits cpu_limits = 1;
    optional TMemoryLimits memory_limits = 2;
}

message TInstanceSize
{
    optional TInstanceResources resource_guarantee = 1;
    optional TDefaultInstanceConfig default_config = 2;
}

message TBundleConfigConstraints
{
    repeated TInstanceSize rpc_proxy_sizes = 1;
    repeated TInstanceSize tablet_node_sizes = 2;
}

message TBundleConfig
{
    optional TCpuLimits cpu_limits = 1;
    optional TMemoryLimits memory_limits = 2;

    optional int32 rpc_proxy_count = 3;
    optional TInstanceResources rpc_proxy_resource_guarantee = 4;

    optional int32 tablet_node_count = 5;
    optional TInstanceResources tablet_node_resource_guarantee = 6;
}

message TResourceQuota
{
    optional int32 vcpu = 1;
    optional int64 memory = 2;
}

message TReqGetBundleConfig
{
    required string bundle_name = 1;
}

message TRspGetBundleConfig
{
    optional string bundle_name = 1;
    optional TBundleConfig bundle_config = 2;
    optional TBundleConfigConstraints bundle_constraints = 3;
    optional TResourceQuota resource_quota = 4;
}

message TReqSetBundleConfig
{
    optional string bundle_name = 1;
    optional TBundleConfig bundle_config = 2;
}

message TRspSetBundleConfig
{
}

////////////////////////////////////////////////////////////////////////////////
